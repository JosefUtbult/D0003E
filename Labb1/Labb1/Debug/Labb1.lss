
Labb1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000c84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c10  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800100  00800100  00000c84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001701  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009fd  00000000  00000000  000024c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000910  00000000  00000000  00002ec2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  000037d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050d  00000000  00000000  000039e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000159b  00000000  00000000  00003ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000548c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	bb 02       	muls	r27, r27
  5e:	c7 02       	muls	r28, r23
  60:	d3 02       	muls	r29, r19
  62:	df 02       	muls	r29, r31
  64:	eb 02       	muls	r30, r27
  66:	f7 02       	muls	r31, r23
  68:	03 03       	mulsu	r16, r19
  6a:	0f 03       	fmul	r16, r23
  6c:	1b 03       	fmul	r17, r19
  6e:	27 03       	mulsu	r18, r23
  70:	6b 04       	cpc	r6, r11
  72:	6b 04       	cpc	r6, r11
  74:	6b 04       	cpc	r6, r11
  76:	6b 04       	cpc	r6, r11
  78:	6b 04       	cpc	r6, r11
  7a:	6b 04       	cpc	r6, r11
  7c:	6b 04       	cpc	r6, r11
  7e:	33 03       	mulsu	r19, r19
  80:	3f 03       	fmul	r19, r23
  82:	4b 03       	fmul	r20, r19
  84:	57 03       	mulsu	r21, r23
  86:	63 03       	mulsu	r22, r19
  88:	6f 03       	fmul	r22, r23
  8a:	7b 03       	fmul	r23, r19
  8c:	87 03       	fmuls	r16, r23
  8e:	93 03       	fmuls	r17, r19
  90:	9f 03       	fmulsu	r17, r23
  92:	ab 03       	fmulsu	r18, r19
  94:	b7 03       	fmuls	r19, r23
  96:	c3 03       	fmuls	r20, r19
  98:	cf 03       	fmulsu	r20, r23
  9a:	db 03       	fmulsu	r21, r19
  9c:	e7 03       	fmuls	r22, r23
  9e:	f3 03       	fmuls	r23, r19
  a0:	ff 03       	fmulsu	r23, r23
  a2:	0b 04       	cpc	r0, r11
  a4:	17 04       	cpc	r1, r7
  a6:	23 04       	cpc	r2, r3
  a8:	2f 04       	cpc	r2, r15
  aa:	3b 04       	cpc	r3, r11
  ac:	47 04       	cpc	r4, r7
  ae:	53 04       	cpc	r5, r3
  b0:	5f 04       	cpc	r5, r15

000000b2 <__ctors_end>:
  b2:	11 24       	eor	r1, r1
  b4:	1f be       	out	0x3f, r1	; 63
  b6:	cf ef       	ldi	r28, 0xFF	; 255
  b8:	d4 e0       	ldi	r29, 0x04	; 4
  ba:	de bf       	out	0x3e, r29	; 62
  bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a0 e0       	ldi	r26, 0x00	; 0
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	aa 30       	cpi	r26, 0x0A	; 10
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	0e 94 a1 05 	call	0xb42	; 0xb42 <main>
  d2:	0c 94 06 06 	jmp	0xc0c	; 0xc0c <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <initClock>:
int currentVal;

void initClock(){
	
	// Runs the internal clock
	TCCR1B = TCCR1B | (1<<CS12);
  da:	e1 e8       	ldi	r30, 0x81	; 129
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	84 60       	ori	r24, 0x04	; 4
  e2:	80 83       	st	Z, r24
	lastVal = TCCR1B;
  e4:	80 81       	ld	r24, Z
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <lastVal+0x1>
  ec:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <lastVal>
  f0:	08 95       	ret

000000f2 <clockCycle>:

// If the clock (TCNT1) is higher than the CYCLE value, resets the clock and returns whether
// the clock has changed
int clockCycle(){

    currentVal = TCNT1 - lastVal;
  f2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  f6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  fa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <lastVal>
  fe:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <lastVal+0x1>
 102:	82 1b       	sub	r24, r18
 104:	93 0b       	sbc	r25, r19
 106:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 10a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
    while (currentVal < 0){
 10e:	99 23       	and	r25, r25
 110:	3c f4       	brge	.+14     	; 0x120 <clockCycle+0x2e>
        currentVal += CYCLE;
 112:	87 5f       	subi	r24, 0xF7	; 247
 114:	92 4c       	sbci	r25, 0xC2	; 194
// If the clock (TCNT1) is higher than the CYCLE value, resets the clock and returns whether
// the clock has changed
int clockCycle(){

    currentVal = TCNT1 - lastVal;
    while (currentVal < 0){
 116:	ea f3       	brmi	.-6      	; 0x112 <clockCycle+0x20>
 118:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 11c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
        currentVal += CYCLE;
    }

	if(currentVal > CYCLE){
 120:	8a 30       	cpi	r24, 0x0A	; 10
 122:	9d 43       	sbci	r25, 0x3D	; 61
 124:	5c f0       	brlt	.+22     	; 0x13c <clockCycle+0x4a>
		lastVal = TCNT1;
 126:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 12a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 12e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <lastVal+0x1>
 132:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <lastVal>
		return 1;
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	08 95       	ret
	}
	return 0;
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
	
 140:	08 95       	ret

00000142 <LCDWritePackage>:
	LCDDR13 = 0x00;
	
	LCDDR15 = 0x00;
	LCDDR16 = 0x00;
	LCDDR17 = 0x00;
	LCDDR18 = 0x00;
 142:	cf 92       	push	r12
 144:	df 92       	push	r13
 146:	ef 92       	push	r14
 148:	ff 92       	push	r15
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	99 23       	and	r25, r25
 150:	0c f4       	brge	.+2      	; 0x154 <LCDWritePackage+0x12>
 152:	f7 c1       	rjmp	.+1006   	; 0x542 <__stack+0x43>
 154:	82 30       	cpi	r24, 0x02	; 2
 156:	91 05       	cpc	r25, r1
 158:	8c f4       	brge	.+34     	; 0x17c <LCDWritePackage+0x3a>
 15a:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	09 f0       	breq	.+2      	; 0x164 <LCDWritePackage+0x22>
 162:	9b c0       	rjmp	.+310    	; 0x29a <LCDWritePackage+0x158>
 164:	48 c0       	rjmp	.+144    	; 0x1f6 <LCDWritePackage+0xb4>
 166:	04 c0       	rjmp	.+8      	; 0x170 <LCDWritePackage+0x2e>
 168:	00 0f       	add	r16, r16
 16a:	11 1f       	adc	r17, r17
 16c:	22 1f       	adc	r18, r18
 16e:	33 1f       	adc	r19, r19
 170:	9a 95       	dec	r25
 172:	d2 f7       	brpl	.-12     	; 0x168 <LCDWritePackage+0x26>
 174:	08 2b       	or	r16, r24
 176:	00 93 fb 00 	sts	0x00FB, r16	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
 17a:	e3 c1       	rjmp	.+966    	; 0x542 <__stack+0x43>
 17c:	84 30       	cpi	r24, 0x04	; 4
 17e:	91 05       	cpc	r25, r1
 180:	8c f4       	brge	.+34     	; 0x1a4 <LCDWritePackage+0x62>
 182:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 186:	03 97       	sbiw	r24, 0x03	; 3
 188:	09 f0       	breq	.+2      	; 0x18c <LCDWritePackage+0x4a>
 18a:	9f c0       	rjmp	.+318    	; 0x2ca <LCDWritePackage+0x188>
 18c:	b6 c0       	rjmp	.+364    	; 0x2fa <LCDWritePackage+0x1b8>
 18e:	04 c0       	rjmp	.+8      	; 0x198 <LCDWritePackage+0x56>
 190:	00 0f       	add	r16, r16
 192:	11 1f       	adc	r17, r17
 194:	22 1f       	adc	r18, r18
 196:	33 1f       	adc	r19, r19
 198:	9a 95       	dec	r25
 19a:	d2 f7       	brpl	.-12     	; 0x190 <LCDWritePackage+0x4e>
 19c:	08 2b       	or	r16, r24
 19e:	00 93 fc 00 	sts	0x00FC, r16	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
 1a2:	cf c1       	rjmp	.+926    	; 0x542 <__stack+0x43>
 1a4:	86 30       	cpi	r24, 0x06	; 6
 1a6:	91 05       	cpc	r25, r1
 1a8:	8c f4       	brge	.+34     	; 0x1cc <LCDWritePackage+0x8a>
 1aa:	e0 91 ee 00 	lds	r30, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 1ae:	05 97       	sbiw	r24, 0x05	; 5
 1b0:	09 f0       	breq	.+2      	; 0x1b4 <LCDWritePackage+0x72>
 1b2:	f5 c0       	rjmp	.+490    	; 0x39e <LCDWritePackage+0x25c>
 1b4:	0c c1       	rjmp	.+536    	; 0x3ce <LCDWritePackage+0x28c>
 1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <LCDWritePackage+0x7e>
 1b8:	00 0f       	add	r16, r16
 1ba:	11 1f       	adc	r17, r17
 1bc:	22 1f       	adc	r18, r18
 1be:	33 1f       	adc	r19, r19
 1c0:	9a 95       	dec	r25
 1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <LCDWritePackage+0x76>
 1c4:	08 2b       	or	r16, r24
 1c6:	00 93 fd 00 	sts	0x00FD, r16	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
 1ca:	bb c1       	rjmp	.+886    	; 0x542 <__stack+0x43>
 1cc:	88 30       	cpi	r24, 0x08	; 8
 1ce:	91 05       	cpc	r25, r1
 1d0:	0c f0       	brlt	.+2      	; 0x1d4 <LCDWritePackage+0x92>
 1d2:	b7 c1       	rjmp	.+878    	; 0x542 <__stack+0x43>
 1d4:	e0 91 ef 00 	lds	r30, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 1d8:	07 97       	sbiw	r24, 0x07	; 7
 1da:	09 f0       	breq	.+2      	; 0x1de <LCDWritePackage+0x9c>
 1dc:	4a c1       	rjmp	.+660    	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 1de:	61 c1       	rjmp	.+706    	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 1e0:	04 c0       	rjmp	.+8      	; 0x1ea <LCDWritePackage+0xa8>
 1e2:	00 0f       	add	r16, r16
 1e4:	11 1f       	adc	r17, r17
 1e6:	22 1f       	adc	r18, r18
 1e8:	33 1f       	adc	r19, r19
 1ea:	9a 95       	dec	r25
 1ec:	d2 f7       	brpl	.-12     	; 0x1e2 <LCDWritePackage+0xa0>
 1ee:	08 2b       	or	r16, r24
 1f0:	00 93 fe 00 	sts	0x00FE, r16	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 1f4:	a6 c1       	rjmp	.+844    	; 0x542 <__stack+0x43>
 1f6:	9e 2f       	mov	r25, r30
 1f8:	9f 70       	andi	r25, 0x0F	; 15
 1fa:	6b 01       	movw	r12, r22
 1fc:	e1 2c       	mov	r14, r1
 1fe:	f1 2c       	mov	r15, r1
 200:	cc 0c       	add	r12, r12
 202:	dd 1c       	adc	r13, r13
 204:	ee 1c       	adc	r14, r14
 206:	ff 1c       	adc	r15, r15
 208:	cc 0c       	add	r12, r12
 20a:	dd 1c       	adc	r13, r13
 20c:	ee 1c       	adc	r14, r14
 20e:	ff 1c       	adc	r15, r15
 210:	cc 0c       	add	r12, r12
 212:	dd 1c       	adc	r13, r13
 214:	ee 1c       	adc	r14, r14
 216:	ff 1c       	adc	r15, r15
 218:	cc 0c       	add	r12, r12
 21a:	dd 1c       	adc	r13, r13
 21c:	ee 1c       	adc	r14, r14
 21e:	ff 1c       	adc	r15, r15
 220:	e9 2f       	mov	r30, r25
 222:	ec 29       	or	r30, r12
 224:	e0 93 ec 00 	sts	0x00EC, r30	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 228:	e1 ef       	ldi	r30, 0xF1	; 241
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	80 81       	ld	r24, Z
 22e:	8f 70       	andi	r24, 0x0F	; 15
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	44 0f       	add	r20, r20
 236:	55 1f       	adc	r21, r21
 238:	66 1f       	adc	r22, r22
 23a:	77 1f       	adc	r23, r23
 23c:	44 0f       	add	r20, r20
 23e:	55 1f       	adc	r21, r21
 240:	66 1f       	adc	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	66 1f       	adc	r22, r22
 24a:	77 1f       	adc	r23, r23
 24c:	44 0f       	add	r20, r20
 24e:	55 1f       	adc	r21, r21
 250:	66 1f       	adc	r22, r22
 252:	77 1f       	adc	r23, r23
 254:	48 2b       	or	r20, r24
 256:	40 83       	st	Z, r20
 258:	e6 ef       	ldi	r30, 0xF6	; 246
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	80 81       	ld	r24, Z
 25e:	48 2f       	mov	r20, r24
 260:	4f 70       	andi	r20, 0x0F	; 15
 262:	c9 01       	movw	r24, r18
 264:	a0 e0       	ldi	r26, 0x00	; 0
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	aa 1f       	adc	r26, r26
 26e:	bb 1f       	adc	r27, r27
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	aa 1f       	adc	r26, r26
 276:	bb 1f       	adc	r27, r27
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	aa 1f       	adc	r26, r26
 27e:	bb 1f       	adc	r27, r27
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	aa 1f       	adc	r26, r26
 286:	bb 1f       	adc	r27, r27
 288:	84 2b       	or	r24, r20
 28a:	80 83       	st	Z, r24
 28c:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
 290:	8f 70       	andi	r24, 0x0F	; 15
 292:	20 e0       	ldi	r18, 0x00	; 0
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	94 e0       	ldi	r25, 0x04	; 4
 298:	66 cf       	rjmp	.-308    	; 0x166 <LCDWritePackage+0x24>
 29a:	8e 2f       	mov	r24, r30
 29c:	80 7f       	andi	r24, 0xF0	; 240
 29e:	86 2b       	or	r24, r22
 2a0:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 2a4:	e1 ef       	ldi	r30, 0xF1	; 241
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	80 7f       	andi	r24, 0xF0	; 240
 2ac:	48 2b       	or	r20, r24
 2ae:	40 83       	st	Z, r20
 2b0:	e6 ef       	ldi	r30, 0xF6	; 246
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	80 7f       	andi	r24, 0xF0	; 240
 2b8:	82 2b       	or	r24, r18
 2ba:	80 83       	st	Z, r24
 2bc:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
 2c0:	80 7f       	andi	r24, 0xF0	; 240
 2c2:	20 e0       	ldi	r18, 0x00	; 0
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	4e cf       	rjmp	.-356    	; 0x166 <LCDWritePackage+0x24>
 2ca:	8e 2f       	mov	r24, r30
 2cc:	80 7f       	andi	r24, 0xF0	; 240
 2ce:	86 2b       	or	r24, r22
 2d0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 2d4:	e2 ef       	ldi	r30, 0xF2	; 242
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	80 7f       	andi	r24, 0xF0	; 240
 2dc:	48 2b       	or	r20, r24
 2de:	40 83       	st	Z, r20
 2e0:	e7 ef       	ldi	r30, 0xF7	; 247
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	80 7f       	andi	r24, 0xF0	; 240
 2e8:	82 2b       	or	r24, r18
 2ea:	80 83       	st	Z, r24
 2ec:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
 2f0:	80 7f       	andi	r24, 0xF0	; 240
 2f2:	20 e0       	ldi	r18, 0x00	; 0
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	4a cf       	rjmp	.-364    	; 0x18e <LCDWritePackage+0x4c>
 2fa:	9e 2f       	mov	r25, r30
 2fc:	9f 70       	andi	r25, 0x0F	; 15
 2fe:	6b 01       	movw	r12, r22
 300:	e1 2c       	mov	r14, r1
 302:	f1 2c       	mov	r15, r1
 304:	cc 0c       	add	r12, r12
 306:	dd 1c       	adc	r13, r13
 308:	ee 1c       	adc	r14, r14
 30a:	ff 1c       	adc	r15, r15
 30c:	cc 0c       	add	r12, r12
 30e:	dd 1c       	adc	r13, r13
 310:	ee 1c       	adc	r14, r14
 312:	ff 1c       	adc	r15, r15
 314:	cc 0c       	add	r12, r12
 316:	dd 1c       	adc	r13, r13
 318:	ee 1c       	adc	r14, r14
 31a:	ff 1c       	adc	r15, r15
 31c:	cc 0c       	add	r12, r12
 31e:	dd 1c       	adc	r13, r13
 320:	ee 1c       	adc	r14, r14
 322:	ff 1c       	adc	r15, r15
 324:	e9 2f       	mov	r30, r25
 326:	ec 29       	or	r30, r12
 328:	e0 93 ed 00 	sts	0x00ED, r30	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 32c:	e2 ef       	ldi	r30, 0xF2	; 242
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	80 81       	ld	r24, Z
 332:	8f 70       	andi	r24, 0x0F	; 15
 334:	60 e0       	ldi	r22, 0x00	; 0
 336:	70 e0       	ldi	r23, 0x00	; 0
 338:	44 0f       	add	r20, r20
 33a:	55 1f       	adc	r21, r21
 33c:	66 1f       	adc	r22, r22
 33e:	77 1f       	adc	r23, r23
 340:	44 0f       	add	r20, r20
 342:	55 1f       	adc	r21, r21
 344:	66 1f       	adc	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	44 0f       	add	r20, r20
 34a:	55 1f       	adc	r21, r21
 34c:	66 1f       	adc	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	44 0f       	add	r20, r20
 352:	55 1f       	adc	r21, r21
 354:	66 1f       	adc	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	48 2b       	or	r20, r24
 35a:	40 83       	st	Z, r20
 35c:	e7 ef       	ldi	r30, 0xF7	; 247
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	80 81       	ld	r24, Z
 362:	48 2f       	mov	r20, r24
 364:	4f 70       	andi	r20, 0x0F	; 15
 366:	c9 01       	movw	r24, r18
 368:	a0 e0       	ldi	r26, 0x00	; 0
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	88 0f       	add	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	aa 1f       	adc	r26, r26
 372:	bb 1f       	adc	r27, r27
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	aa 1f       	adc	r26, r26
 37a:	bb 1f       	adc	r27, r27
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	aa 1f       	adc	r26, r26
 382:	bb 1f       	adc	r27, r27
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	aa 1f       	adc	r26, r26
 38a:	bb 1f       	adc	r27, r27
 38c:	84 2b       	or	r24, r20
 38e:	80 83       	st	Z, r24
 390:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
 394:	8f 70       	andi	r24, 0x0F	; 15
 396:	20 e0       	ldi	r18, 0x00	; 0
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	94 e0       	ldi	r25, 0x04	; 4
 39c:	f8 ce       	rjmp	.-528    	; 0x18e <LCDWritePackage+0x4c>
 39e:	8e 2f       	mov	r24, r30
 3a0:	80 7f       	andi	r24, 0xF0	; 240
 3a2:	86 2b       	or	r24, r22
 3a4:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 3a8:	e3 ef       	ldi	r30, 0xF3	; 243
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	80 7f       	andi	r24, 0xF0	; 240
 3b0:	48 2b       	or	r20, r24
 3b2:	40 83       	st	Z, r20
 3b4:	e8 ef       	ldi	r30, 0xF8	; 248
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	80 7f       	andi	r24, 0xF0	; 240
 3bc:	82 2b       	or	r24, r18
 3be:	80 83       	st	Z, r24
 3c0:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
 3c4:	80 7f       	andi	r24, 0xF0	; 240
 3c6:	20 e0       	ldi	r18, 0x00	; 0
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	f4 ce       	rjmp	.-536    	; 0x1b6 <LCDWritePackage+0x74>
 3ce:	6b 01       	movw	r12, r22
 3d0:	e1 2c       	mov	r14, r1
 3d2:	f1 2c       	mov	r15, r1
 3d4:	cc 0c       	add	r12, r12
 3d6:	dd 1c       	adc	r13, r13
 3d8:	ee 1c       	adc	r14, r14
 3da:	ff 1c       	adc	r15, r15
 3dc:	cc 0c       	add	r12, r12
 3de:	dd 1c       	adc	r13, r13
 3e0:	ee 1c       	adc	r14, r14
 3e2:	ff 1c       	adc	r15, r15
 3e4:	cc 0c       	add	r12, r12
 3e6:	dd 1c       	adc	r13, r13
 3e8:	ee 1c       	adc	r14, r14
 3ea:	ff 1c       	adc	r15, r15
 3ec:	cc 0c       	add	r12, r12
 3ee:	dd 1c       	adc	r13, r13
 3f0:	ee 1c       	adc	r14, r14
 3f2:	ff 1c       	adc	r15, r15
 3f4:	9e 2f       	mov	r25, r30
 3f6:	9f 70       	andi	r25, 0x0F	; 15
 3f8:	e9 2f       	mov	r30, r25
 3fa:	ec 29       	or	r30, r12
 3fc:	e0 93 ee 00 	sts	0x00EE, r30	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
 400:	e3 ef       	ldi	r30, 0xF3	; 243
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	80 81       	ld	r24, Z
 406:	60 e0       	ldi	r22, 0x00	; 0
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	44 0f       	add	r20, r20
 40c:	55 1f       	adc	r21, r21
 40e:	66 1f       	adc	r22, r22
 410:	77 1f       	adc	r23, r23
 412:	44 0f       	add	r20, r20
 414:	55 1f       	adc	r21, r21
 416:	66 1f       	adc	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	44 0f       	add	r20, r20
 41c:	55 1f       	adc	r21, r21
 41e:	66 1f       	adc	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	44 0f       	add	r20, r20
 424:	55 1f       	adc	r21, r21
 426:	66 1f       	adc	r22, r22
 428:	77 1f       	adc	r23, r23
 42a:	8f 70       	andi	r24, 0x0F	; 15
 42c:	48 2b       	or	r20, r24
 42e:	40 83       	st	Z, r20
 430:	e8 ef       	ldi	r30, 0xF8	; 248
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	40 81       	ld	r20, Z
 436:	c9 01       	movw	r24, r18
 438:	a0 e0       	ldi	r26, 0x00	; 0
 43a:	b0 e0       	ldi	r27, 0x00	; 0
 43c:	88 0f       	add	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	aa 1f       	adc	r26, r26
 442:	bb 1f       	adc	r27, r27
 444:	88 0f       	add	r24, r24
 446:	99 1f       	adc	r25, r25
 448:	aa 1f       	adc	r26, r26
 44a:	bb 1f       	adc	r27, r27
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	aa 1f       	adc	r26, r26
 452:	bb 1f       	adc	r27, r27
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	aa 1f       	adc	r26, r26
 45a:	bb 1f       	adc	r27, r27
 45c:	24 2f       	mov	r18, r20
 45e:	2f 70       	andi	r18, 0x0F	; 15
 460:	82 2b       	or	r24, r18
 462:	80 83       	st	Z, r24
 464:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
 468:	8f 70       	andi	r24, 0x0F	; 15
 46a:	20 e0       	ldi	r18, 0x00	; 0
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	94 e0       	ldi	r25, 0x04	; 4
 470:	a2 ce       	rjmp	.-700    	; 0x1b6 <LCDWritePackage+0x74>
 472:	8e 2f       	mov	r24, r30
 474:	80 7f       	andi	r24, 0xF0	; 240
 476:	86 2b       	or	r24, r22
 478:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 47c:	e3 ef       	ldi	r30, 0xF3	; 243
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	80 81       	ld	r24, Z
 482:	80 7f       	andi	r24, 0xF0	; 240
 484:	48 2b       	or	r20, r24
 486:	40 83       	st	Z, r20
 488:	e9 ef       	ldi	r30, 0xF9	; 249
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	80 7f       	andi	r24, 0xF0	; 240
 490:	82 2b       	or	r24, r18
 492:	80 83       	st	Z, r24
 494:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 498:	80 7f       	andi	r24, 0xF0	; 240
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	9f ce       	rjmp	.-706    	; 0x1e0 <LCDWritePackage+0x9e>
 4a2:	cb 01       	movw	r24, r22
 4a4:	a0 e0       	ldi	r26, 0x00	; 0
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	88 0f       	add	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	aa 1f       	adc	r26, r26
 4ae:	bb 1f       	adc	r27, r27
 4b0:	88 0f       	add	r24, r24
 4b2:	99 1f       	adc	r25, r25
 4b4:	aa 1f       	adc	r26, r26
 4b6:	bb 1f       	adc	r27, r27
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	aa 1f       	adc	r26, r26
 4be:	bb 1f       	adc	r27, r27
 4c0:	88 0f       	add	r24, r24
 4c2:	99 1f       	adc	r25, r25
 4c4:	aa 1f       	adc	r26, r26
 4c6:	bb 1f       	adc	r27, r27
 4c8:	ef 70       	andi	r30, 0x0F	; 15
 4ca:	8e 2b       	or	r24, r30
 4cc:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 4d0:	e3 ef       	ldi	r30, 0xF3	; 243
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	80 81       	ld	r24, Z
 4d6:	60 e0       	ldi	r22, 0x00	; 0
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	44 0f       	add	r20, r20
 4dc:	55 1f       	adc	r21, r21
 4de:	66 1f       	adc	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	44 0f       	add	r20, r20
 4e4:	55 1f       	adc	r21, r21
 4e6:	66 1f       	adc	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	44 0f       	add	r20, r20
 4ec:	55 1f       	adc	r21, r21
 4ee:	66 1f       	adc	r22, r22
 4f0:	77 1f       	adc	r23, r23
 4f2:	44 0f       	add	r20, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	66 1f       	adc	r22, r22
 4f8:	77 1f       	adc	r23, r23
 4fa:	8f 70       	andi	r24, 0x0F	; 15
 4fc:	48 2b       	or	r20, r24
 4fe:	40 83       	st	Z, r20
 500:	e9 ef       	ldi	r30, 0xF9	; 249
 502:	f0 e0       	ldi	r31, 0x00	; 0
 504:	40 81       	ld	r20, Z
 506:	c9 01       	movw	r24, r18
 508:	a0 e0       	ldi	r26, 0x00	; 0
 50a:	b0 e0       	ldi	r27, 0x00	; 0
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	aa 1f       	adc	r26, r26
 512:	bb 1f       	adc	r27, r27
 514:	88 0f       	add	r24, r24
 516:	99 1f       	adc	r25, r25
 518:	aa 1f       	adc	r26, r26
 51a:	bb 1f       	adc	r27, r27
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	aa 1f       	adc	r26, r26
 522:	bb 1f       	adc	r27, r27
 524:	88 0f       	add	r24, r24
 526:	99 1f       	adc	r25, r25
 528:	aa 1f       	adc	r26, r26
 52a:	bb 1f       	adc	r27, r27
 52c:	24 2f       	mov	r18, r20
 52e:	2f 70       	andi	r18, 0x0F	; 15
 530:	82 2b       	or	r24, r18
 532:	80 83       	st	Z, r24
 534:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 538:	8f 70       	andi	r24, 0x0F	; 15
 53a:	20 e0       	ldi	r18, 0x00	; 0
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	94 e0       	ldi	r25, 0x04	; 4
 540:	4f ce       	rjmp	.-866    	; 0x1e0 <LCDWritePackage+0x9e>
 542:	1f 91       	pop	r17
 544:	0f 91       	pop	r16
 546:	ff 90       	pop	r15
 548:	ef 90       	pop	r14
 54a:	df 90       	pop	r13
 54c:	cf 90       	pop	r12
 54e:	08 95       	ret

00000550 <writeChar>:
 550:	0f 93       	push	r16
 552:	1f 93       	push	r17
 554:	66 30       	cpi	r22, 0x06	; 6
 556:	71 05       	cpc	r23, r1
 558:	08 f0       	brcs	.+2      	; 0x55c <writeChar+0xc>
 55a:	c8 c1       	rjmp	.+912    	; 0x8ec <writeChar+0x39c>
 55c:	db 01       	movw	r26, r22
 55e:	48 2f       	mov	r20, r24
 560:	50 e0       	ldi	r21, 0x00	; 0
 562:	fa 01       	movw	r30, r20
 564:	f0 97       	sbiw	r30, 0x30	; 48
 566:	eb 32       	cpi	r30, 0x2B	; 43
 568:	f1 05       	cpc	r31, r1
 56a:	08 f0       	brcs	.+2      	; 0x56e <writeChar+0x1e>
 56c:	b4 c1       	rjmp	.+872    	; 0x8d6 <writeChar+0x386>
 56e:	e2 5d       	subi	r30, 0xD2	; 210
 570:	ff 4f       	sbci	r31, 0xFF	; 255
 572:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__tablejump2__>
 576:	05 e0       	ldi	r16, 0x05	; 5
 578:	10 e0       	ldi	r17, 0x00	; 0
 57a:	25 e0       	ldi	r18, 0x05	; 5
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	45 e0       	ldi	r20, 0x05	; 5
 580:	50 e0       	ldi	r21, 0x00	; 0
 582:	69 e0       	ldi	r22, 0x09	; 9
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	cd 01       	movw	r24, r26
 588:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 58c:	af c1       	rjmp	.+862    	; 0x8ec <writeChar+0x39c>
 58e:	00 e0       	ldi	r16, 0x00	; 0
 590:	10 e0       	ldi	r17, 0x00	; 0
 592:	21 e0       	ldi	r18, 0x01	; 1
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	41 e0       	ldi	r20, 0x01	; 1
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	cd 01       	movw	r24, r26
 5a0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 5a4:	a3 c1       	rjmp	.+838    	; 0x8ec <writeChar+0x39c>
 5a6:	05 e0       	ldi	r16, 0x05	; 5
 5a8:	10 e0       	ldi	r17, 0x00	; 0
 5aa:	28 e0       	ldi	r18, 0x08	; 8
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	41 e0       	ldi	r20, 0x01	; 1
 5b0:	50 e0       	ldi	r21, 0x00	; 0
 5b2:	61 e0       	ldi	r22, 0x01	; 1
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	cd 01       	movw	r24, r26
 5b8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 5bc:	97 c1       	rjmp	.+814    	; 0x8ec <writeChar+0x39c>
 5be:	01 e0       	ldi	r16, 0x01	; 1
 5c0:	10 e0       	ldi	r17, 0x00	; 0
 5c2:	2b e0       	ldi	r18, 0x0B	; 11
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	41 e0       	ldi	r20, 0x01	; 1
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	61 e0       	ldi	r22, 0x01	; 1
 5cc:	70 e0       	ldi	r23, 0x00	; 0
 5ce:	cd 01       	movw	r24, r26
 5d0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 5d4:	8b c1       	rjmp	.+790    	; 0x8ec <writeChar+0x39c>
 5d6:	00 e0       	ldi	r16, 0x00	; 0
 5d8:	10 e0       	ldi	r17, 0x00	; 0
 5da:	2b e0       	ldi	r18, 0x0B	; 11
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	45 e0       	ldi	r20, 0x05	; 5
 5e0:	50 e0       	ldi	r21, 0x00	; 0
 5e2:	60 e0       	ldi	r22, 0x00	; 0
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	cd 01       	movw	r24, r26
 5e8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 5ec:	7f c1       	rjmp	.+766    	; 0x8ec <writeChar+0x39c>
 5ee:	01 e0       	ldi	r16, 0x01	; 1
 5f0:	10 e0       	ldi	r17, 0x00	; 0
 5f2:	2b e0       	ldi	r18, 0x0B	; 11
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	44 e0       	ldi	r20, 0x04	; 4
 5f8:	50 e0       	ldi	r21, 0x00	; 0
 5fa:	61 e0       	ldi	r22, 0x01	; 1
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	cd 01       	movw	r24, r26
 600:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 604:	73 c1       	rjmp	.+742    	; 0x8ec <writeChar+0x39c>
 606:	01 e0       	ldi	r16, 0x01	; 1
 608:	10 e0       	ldi	r17, 0x00	; 0
 60a:	2f e0       	ldi	r18, 0x0F	; 15
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	44 e0       	ldi	r20, 0x04	; 4
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	61 e0       	ldi	r22, 0x01	; 1
 614:	70 e0       	ldi	r23, 0x00	; 0
 616:	cd 01       	movw	r24, r26
 618:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 61c:	67 c1       	rjmp	.+718    	; 0x8ec <writeChar+0x39c>
 61e:	04 e0       	ldi	r16, 0x04	; 4
 620:	10 e0       	ldi	r17, 0x00	; 0
 622:	20 e0       	ldi	r18, 0x00	; 0
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	40 e0       	ldi	r20, 0x00	; 0
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	69 e0       	ldi	r22, 0x09	; 9
 62c:	70 e0       	ldi	r23, 0x00	; 0
 62e:	cd 01       	movw	r24, r26
 630:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 634:	5b c1       	rjmp	.+694    	; 0x8ec <writeChar+0x39c>
 636:	01 e0       	ldi	r16, 0x01	; 1
 638:	10 e0       	ldi	r17, 0x00	; 0
 63a:	2f e0       	ldi	r18, 0x0F	; 15
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	45 e0       	ldi	r20, 0x05	; 5
 640:	50 e0       	ldi	r21, 0x00	; 0
 642:	61 e0       	ldi	r22, 0x01	; 1
 644:	70 e0       	ldi	r23, 0x00	; 0
 646:	cd 01       	movw	r24, r26
 648:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 64c:	4f c1       	rjmp	.+670    	; 0x8ec <writeChar+0x39c>
 64e:	01 e0       	ldi	r16, 0x01	; 1
 650:	10 e0       	ldi	r17, 0x00	; 0
 652:	2b e0       	ldi	r18, 0x0B	; 11
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	45 e0       	ldi	r20, 0x05	; 5
 658:	50 e0       	ldi	r21, 0x00	; 0
 65a:	61 e0       	ldi	r22, 0x01	; 1
 65c:	70 e0       	ldi	r23, 0x00	; 0
 65e:	cd 01       	movw	r24, r26
 660:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 664:	43 c1       	rjmp	.+646    	; 0x8ec <writeChar+0x39c>
 666:	00 e0       	ldi	r16, 0x00	; 0
 668:	10 e0       	ldi	r17, 0x00	; 0
 66a:	2f e0       	ldi	r18, 0x0F	; 15
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	45 e0       	ldi	r20, 0x05	; 5
 670:	50 e0       	ldi	r21, 0x00	; 0
 672:	61 e0       	ldi	r22, 0x01	; 1
 674:	70 e0       	ldi	r23, 0x00	; 0
 676:	cd 01       	movw	r24, r26
 678:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 67c:	37 c1       	rjmp	.+622    	; 0x8ec <writeChar+0x39c>
 67e:	01 e0       	ldi	r16, 0x01	; 1
 680:	10 e0       	ldi	r17, 0x00	; 0
 682:	2f e0       	ldi	r18, 0x0F	; 15
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	45 e0       	ldi	r20, 0x05	; 5
 688:	50 e0       	ldi	r21, 0x00	; 0
 68a:	61 e0       	ldi	r22, 0x01	; 1
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	cd 01       	movw	r24, r26
 690:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 694:	2b c1       	rjmp	.+598    	; 0x8ec <writeChar+0x39c>
 696:	01 e0       	ldi	r16, 0x01	; 1
 698:	10 e0       	ldi	r17, 0x00	; 0
 69a:	24 e0       	ldi	r18, 0x04	; 4
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	44 e0       	ldi	r20, 0x04	; 4
 6a0:	50 e0       	ldi	r21, 0x00	; 0
 6a2:	61 e0       	ldi	r22, 0x01	; 1
 6a4:	70 e0       	ldi	r23, 0x00	; 0
 6a6:	cd 01       	movw	r24, r26
 6a8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 6ac:	1f c1       	rjmp	.+574    	; 0x8ec <writeChar+0x39c>
 6ae:	04 e0       	ldi	r16, 0x04	; 4
 6b0:	10 e0       	ldi	r17, 0x00	; 0
 6b2:	24 e0       	ldi	r18, 0x04	; 4
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	46 e0       	ldi	r20, 0x06	; 6
 6b8:	50 e0       	ldi	r21, 0x00	; 0
 6ba:	60 e0       	ldi	r22, 0x00	; 0
 6bc:	70 e0       	ldi	r23, 0x00	; 0
 6be:	cd 01       	movw	r24, r26
 6c0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 6c4:	13 c1       	rjmp	.+550    	; 0x8ec <writeChar+0x39c>
 6c6:	01 e0       	ldi	r16, 0x01	; 1
 6c8:	10 e0       	ldi	r17, 0x00	; 0
 6ca:	26 e0       	ldi	r18, 0x06	; 6
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	44 e0       	ldi	r20, 0x04	; 4
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	61 e0       	ldi	r22, 0x01	; 1
 6d4:	70 e0       	ldi	r23, 0x00	; 0
 6d6:	cd 01       	movw	r24, r26
 6d8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 6dc:	07 c1       	rjmp	.+526    	; 0x8ec <writeChar+0x39c>
 6de:	00 e0       	ldi	r16, 0x00	; 0
 6e0:	10 e0       	ldi	r17, 0x00	; 0
 6e2:	2e e0       	ldi	r18, 0x0E	; 14
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	44 e0       	ldi	r20, 0x04	; 4
 6e8:	50 e0       	ldi	r21, 0x00	; 0
 6ea:	61 e0       	ldi	r22, 0x01	; 1
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	cd 01       	movw	r24, r26
 6f0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 6f4:	fb c0       	rjmp	.+502    	; 0x8ec <writeChar+0x39c>
 6f6:	01 e0       	ldi	r16, 0x01	; 1
 6f8:	10 e0       	ldi	r17, 0x00	; 0
 6fa:	2d e0       	ldi	r18, 0x0D	; 13
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	44 e0       	ldi	r20, 0x04	; 4
 700:	50 e0       	ldi	r21, 0x00	; 0
 702:	61 e0       	ldi	r22, 0x01	; 1
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	cd 01       	movw	r24, r26
 708:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 70c:	ef c0       	rjmp	.+478    	; 0x8ec <writeChar+0x39c>
 70e:	00 e0       	ldi	r16, 0x00	; 0
 710:	10 e0       	ldi	r17, 0x00	; 0
 712:	2f e0       	ldi	r18, 0x0F	; 15
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	45 e0       	ldi	r20, 0x05	; 5
 718:	50 e0       	ldi	r21, 0x00	; 0
 71a:	60 e0       	ldi	r22, 0x00	; 0
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	cd 01       	movw	r24, r26
 720:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 724:	e3 c0       	rjmp	.+454    	; 0x8ec <writeChar+0x39c>
 726:	02 e0       	ldi	r16, 0x02	; 2
 728:	10 e0       	ldi	r17, 0x00	; 0
 72a:	20 e0       	ldi	r18, 0x00	; 0
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	48 e0       	ldi	r20, 0x08	; 8
 730:	50 e0       	ldi	r21, 0x00	; 0
 732:	60 e0       	ldi	r22, 0x00	; 0
 734:	70 e0       	ldi	r23, 0x00	; 0
 736:	cd 01       	movw	r24, r26
 738:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 73c:	d7 c0       	rjmp	.+430    	; 0x8ec <writeChar+0x39c>
 73e:	01 e0       	ldi	r16, 0x01	; 1
 740:	10 e0       	ldi	r17, 0x00	; 0
 742:	21 e0       	ldi	r18, 0x01	; 1
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	41 e0       	ldi	r20, 0x01	; 1
 748:	50 e0       	ldi	r21, 0x00	; 0
 74a:	60 e0       	ldi	r22, 0x00	; 0
 74c:	70 e0       	ldi	r23, 0x00	; 0
 74e:	cd 01       	movw	r24, r26
 750:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 754:	cb c0       	rjmp	.+406    	; 0x8ec <writeChar+0x39c>
 756:	08 e0       	ldi	r16, 0x08	; 8
 758:	10 e0       	ldi	r17, 0x00	; 0
 75a:	26 e0       	ldi	r18, 0x06	; 6
 75c:	30 e0       	ldi	r19, 0x00	; 0
 75e:	44 e0       	ldi	r20, 0x04	; 4
 760:	50 e0       	ldi	r21, 0x00	; 0
 762:	68 e0       	ldi	r22, 0x08	; 8
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	cd 01       	movw	r24, r26
 768:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 76c:	bf c0       	rjmp	.+382    	; 0x8ec <writeChar+0x39c>
 76e:	01 e0       	ldi	r16, 0x01	; 1
 770:	10 e0       	ldi	r17, 0x00	; 0
 772:	24 e0       	ldi	r18, 0x04	; 4
 774:	30 e0       	ldi	r19, 0x00	; 0
 776:	44 e0       	ldi	r20, 0x04	; 4
 778:	50 e0       	ldi	r21, 0x00	; 0
 77a:	60 e0       	ldi	r22, 0x00	; 0
 77c:	70 e0       	ldi	r23, 0x00	; 0
 77e:	cd 01       	movw	r24, r26
 780:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 784:	b3 c0       	rjmp	.+358    	; 0x8ec <writeChar+0x39c>
 786:	00 e0       	ldi	r16, 0x00	; 0
 788:	10 e0       	ldi	r17, 0x00	; 0
 78a:	25 e0       	ldi	r18, 0x05	; 5
 78c:	30 e0       	ldi	r19, 0x00	; 0
 78e:	47 e0       	ldi	r20, 0x07	; 7
 790:	50 e0       	ldi	r21, 0x00	; 0
 792:	68 e0       	ldi	r22, 0x08	; 8
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	cd 01       	movw	r24, r26
 798:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 79c:	a7 c0       	rjmp	.+334    	; 0x8ec <writeChar+0x39c>
 79e:	08 e0       	ldi	r16, 0x08	; 8
 7a0:	10 e0       	ldi	r17, 0x00	; 0
 7a2:	25 e0       	ldi	r18, 0x05	; 5
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	47 e0       	ldi	r20, 0x07	; 7
 7a8:	50 e0       	ldi	r21, 0x00	; 0
 7aa:	60 e0       	ldi	r22, 0x00	; 0
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	cd 01       	movw	r24, r26
 7b0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 7b4:	9b c0       	rjmp	.+310    	; 0x8ec <writeChar+0x39c>
 7b6:	01 e0       	ldi	r16, 0x01	; 1
 7b8:	10 e0       	ldi	r17, 0x00	; 0
 7ba:	25 e0       	ldi	r18, 0x05	; 5
 7bc:	30 e0       	ldi	r19, 0x00	; 0
 7be:	45 e0       	ldi	r20, 0x05	; 5
 7c0:	50 e0       	ldi	r21, 0x00	; 0
 7c2:	61 e0       	ldi	r22, 0x01	; 1
 7c4:	70 e0       	ldi	r23, 0x00	; 0
 7c6:	cd 01       	movw	r24, r26
 7c8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 7cc:	8f c0       	rjmp	.+286    	; 0x8ec <writeChar+0x39c>
 7ce:	00 e0       	ldi	r16, 0x00	; 0
 7d0:	10 e0       	ldi	r17, 0x00	; 0
 7d2:	2e e0       	ldi	r18, 0x0E	; 14
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	45 e0       	ldi	r20, 0x05	; 5
 7d8:	50 e0       	ldi	r21, 0x00	; 0
 7da:	61 e0       	ldi	r22, 0x01	; 1
 7dc:	70 e0       	ldi	r23, 0x00	; 0
 7de:	cd 01       	movw	r24, r26
 7e0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 7e4:	83 c0       	rjmp	.+262    	; 0x8ec <writeChar+0x39c>
 7e6:	09 e0       	ldi	r16, 0x09	; 9
 7e8:	10 e0       	ldi	r17, 0x00	; 0
 7ea:	25 e0       	ldi	r18, 0x05	; 5
 7ec:	30 e0       	ldi	r19, 0x00	; 0
 7ee:	45 e0       	ldi	r20, 0x05	; 5
 7f0:	50 e0       	ldi	r21, 0x00	; 0
 7f2:	61 e0       	ldi	r22, 0x01	; 1
 7f4:	70 e0       	ldi	r23, 0x00	; 0
 7f6:	cd 01       	movw	r24, r26
 7f8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 7fc:	77 c0       	rjmp	.+238    	; 0x8ec <writeChar+0x39c>
 7fe:	08 e0       	ldi	r16, 0x08	; 8
 800:	10 e0       	ldi	r17, 0x00	; 0
 802:	2e e0       	ldi	r18, 0x0E	; 14
 804:	30 e0       	ldi	r19, 0x00	; 0
 806:	45 e0       	ldi	r20, 0x05	; 5
 808:	50 e0       	ldi	r21, 0x00	; 0
 80a:	61 e0       	ldi	r22, 0x01	; 1
 80c:	70 e0       	ldi	r23, 0x00	; 0
 80e:	cd 01       	movw	r24, r26
 810:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 814:	6b c0       	rjmp	.+214    	; 0x8ec <writeChar+0x39c>
 816:	01 e0       	ldi	r16, 0x01	; 1
 818:	10 e0       	ldi	r17, 0x00	; 0
 81a:	2b e0       	ldi	r18, 0x0B	; 11
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	44 e0       	ldi	r20, 0x04	; 4
 820:	50 e0       	ldi	r21, 0x00	; 0
 822:	61 e0       	ldi	r22, 0x01	; 1
 824:	70 e0       	ldi	r23, 0x00	; 0
 826:	cd 01       	movw	r24, r26
 828:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 82c:	5f c0       	rjmp	.+190    	; 0x8ec <writeChar+0x39c>
 82e:	02 e0       	ldi	r16, 0x02	; 2
 830:	10 e0       	ldi	r17, 0x00	; 0
 832:	20 e0       	ldi	r18, 0x00	; 0
 834:	30 e0       	ldi	r19, 0x00	; 0
 836:	48 e0       	ldi	r20, 0x08	; 8
 838:	50 e0       	ldi	r21, 0x00	; 0
 83a:	61 e0       	ldi	r22, 0x01	; 1
 83c:	70 e0       	ldi	r23, 0x00	; 0
 83e:	cd 01       	movw	r24, r26
 840:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 844:	53 c0       	rjmp	.+166    	; 0x8ec <writeChar+0x39c>
 846:	01 e0       	ldi	r16, 0x01	; 1
 848:	10 e0       	ldi	r17, 0x00	; 0
 84a:	25 e0       	ldi	r18, 0x05	; 5
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	45 e0       	ldi	r20, 0x05	; 5
 850:	50 e0       	ldi	r21, 0x00	; 0
 852:	60 e0       	ldi	r22, 0x00	; 0
 854:	70 e0       	ldi	r23, 0x00	; 0
 856:	cd 01       	movw	r24, r26
 858:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 85c:	47 c0       	rjmp	.+142    	; 0x8ec <writeChar+0x39c>
 85e:	04 e0       	ldi	r16, 0x04	; 4
 860:	10 e0       	ldi	r17, 0x00	; 0
 862:	24 e0       	ldi	r18, 0x04	; 4
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	44 e0       	ldi	r20, 0x04	; 4
 868:	50 e0       	ldi	r21, 0x00	; 0
 86a:	68 e0       	ldi	r22, 0x08	; 8
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	cd 01       	movw	r24, r26
 870:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 874:	3b c0       	rjmp	.+118    	; 0x8ec <writeChar+0x39c>
 876:	03 e0       	ldi	r16, 0x03	; 3
 878:	10 e0       	ldi	r17, 0x00	; 0
 87a:	25 e0       	ldi	r18, 0x05	; 5
 87c:	30 e0       	ldi	r19, 0x00	; 0
 87e:	45 e0       	ldi	r20, 0x05	; 5
 880:	50 e0       	ldi	r21, 0x00	; 0
 882:	60 e0       	ldi	r22, 0x00	; 0
 884:	70 e0       	ldi	r23, 0x00	; 0
 886:	cd 01       	movw	r24, r26
 888:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 88c:	2f c0       	rjmp	.+94     	; 0x8ec <writeChar+0x39c>
 88e:	0c e0       	ldi	r16, 0x0C	; 12
 890:	10 e0       	ldi	r17, 0x00	; 0
 892:	20 e0       	ldi	r18, 0x00	; 0
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	42 e0       	ldi	r20, 0x02	; 2
 898:	50 e0       	ldi	r21, 0x00	; 0
 89a:	68 e0       	ldi	r22, 0x08	; 8
 89c:	70 e0       	ldi	r23, 0x00	; 0
 89e:	cd 01       	movw	r24, r26
 8a0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 8a4:	23 c0       	rjmp	.+70     	; 0x8ec <writeChar+0x39c>
 8a6:	02 e0       	ldi	r16, 0x02	; 2
 8a8:	10 e0       	ldi	r17, 0x00	; 0
 8aa:	20 e0       	ldi	r18, 0x00	; 0
 8ac:	30 e0       	ldi	r19, 0x00	; 0
 8ae:	42 e0       	ldi	r20, 0x02	; 2
 8b0:	50 e0       	ldi	r21, 0x00	; 0
 8b2:	68 e0       	ldi	r22, 0x08	; 8
 8b4:	70 e0       	ldi	r23, 0x00	; 0
 8b6:	cd 01       	movw	r24, r26
 8b8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 8bc:	17 c0       	rjmp	.+46     	; 0x8ec <writeChar+0x39c>
 8be:	05 e0       	ldi	r16, 0x05	; 5
 8c0:	10 e0       	ldi	r17, 0x00	; 0
 8c2:	20 e0       	ldi	r18, 0x00	; 0
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	40 e0       	ldi	r20, 0x00	; 0
 8c8:	50 e0       	ldi	r21, 0x00	; 0
 8ca:	69 e0       	ldi	r22, 0x09	; 9
 8cc:	70 e0       	ldi	r23, 0x00	; 0
 8ce:	cd 01       	movw	r24, r26
 8d0:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 8d4:	0b c0       	rjmp	.+22     	; 0x8ec <writeChar+0x39c>
 8d6:	02 e0       	ldi	r16, 0x02	; 2
 8d8:	10 e0       	ldi	r17, 0x00	; 0
 8da:	28 e0       	ldi	r18, 0x08	; 8
 8dc:	30 e0       	ldi	r19, 0x00	; 0
 8de:	41 e0       	ldi	r20, 0x01	; 1
 8e0:	50 e0       	ldi	r21, 0x00	; 0
 8e2:	61 e0       	ldi	r22, 0x01	; 1
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	cd 01       	movw	r24, r26
 8e8:	0e 94 a1 00 	call	0x142	; 0x142 <LCDWritePackage>
 8ec:	1f 91       	pop	r17
 8ee:	0f 91       	pop	r16
 8f0:	08 95       	ret

000008f2 <writeLong>:
 8f2:	8f 92       	push	r8
 8f4:	9f 92       	push	r9
 8f6:	af 92       	push	r10
 8f8:	bf 92       	push	r11
 8fa:	cf 92       	push	r12
 8fc:	df 92       	push	r13
 8fe:	ef 92       	push	r14
 900:	ff 92       	push	r15
 902:	0f 93       	push	r16
 904:	1f 93       	push	r17
 906:	cf 93       	push	r28
 908:	df 93       	push	r29
 90a:	16 16       	cp	r1, r22
 90c:	17 06       	cpc	r1, r23
 90e:	18 06       	cpc	r1, r24
 910:	19 06       	cpc	r1, r25
 912:	04 f1       	brlt	.+64     	; 0x954 <writeLong+0x62>
 914:	3d c0       	rjmp	.+122    	; 0x990 <writeLong+0x9e>
 916:	8e 01       	movw	r16, r28
 918:	01 50       	subi	r16, 0x01	; 1
 91a:	11 09       	sbc	r17, r1
 91c:	a5 01       	movw	r20, r10
 91e:	94 01       	movw	r18, r8
 920:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__divmodsi4>
 924:	c2 2e       	mov	r12, r18
 926:	d3 2e       	mov	r13, r19
 928:	e4 2e       	mov	r14, r20
 92a:	f5 2e       	mov	r15, r21
 92c:	86 2f       	mov	r24, r22
 92e:	be 01       	movw	r22, r28
 930:	80 5d       	subi	r24, 0xD0	; 208
 932:	0e 94 a8 02 	call	0x550	; 0x550 <writeChar>
 936:	6c 2d       	mov	r22, r12
 938:	7d 2d       	mov	r23, r13
 93a:	8e 2d       	mov	r24, r14
 93c:	9f 2d       	mov	r25, r15
 93e:	0f 3f       	cpi	r16, 0xFF	; 255
 940:	2f ef       	ldi	r18, 0xFF	; 255
 942:	12 07       	cpc	r17, r18
 944:	29 f1       	breq	.+74     	; 0x990 <writeLong+0x9e>
 946:	e8 01       	movw	r28, r16
 948:	16 16       	cp	r1, r22
 94a:	17 06       	cpc	r1, r23
 94c:	18 06       	cpc	r1, r24
 94e:	19 06       	cpc	r1, r25
 950:	14 f3       	brlt	.-60     	; 0x916 <writeLong+0x24>
 952:	1e c0       	rjmp	.+60     	; 0x990 <writeLong+0x9e>
 954:	2a e0       	ldi	r18, 0x0A	; 10
 956:	30 e0       	ldi	r19, 0x00	; 0
 958:	40 e0       	ldi	r20, 0x00	; 0
 95a:	50 e0       	ldi	r21, 0x00	; 0
 95c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__divmodsi4>
 960:	02 2f       	mov	r16, r18
 962:	13 2f       	mov	r17, r19
 964:	d4 2f       	mov	r29, r20
 966:	c5 2f       	mov	r28, r21
 968:	86 2f       	mov	r24, r22
 96a:	65 e0       	ldi	r22, 0x05	; 5
 96c:	70 e0       	ldi	r23, 0x00	; 0
 96e:	80 5d       	subi	r24, 0xD0	; 208
 970:	0e 94 a8 02 	call	0x550	; 0x550 <writeChar>
 974:	60 2f       	mov	r22, r16
 976:	71 2f       	mov	r23, r17
 978:	8d 2f       	mov	r24, r29
 97a:	9c 2f       	mov	r25, r28
 97c:	c4 e0       	ldi	r28, 0x04	; 4
 97e:	d0 e0       	ldi	r29, 0x00	; 0
 980:	0f 2e       	mov	r0, r31
 982:	fa e0       	ldi	r31, 0x0A	; 10
 984:	8f 2e       	mov	r8, r31
 986:	91 2c       	mov	r9, r1
 988:	a1 2c       	mov	r10, r1
 98a:	b1 2c       	mov	r11, r1
 98c:	f0 2d       	mov	r31, r0
 98e:	dc cf       	rjmp	.-72     	; 0x948 <writeLong+0x56>
 990:	df 91       	pop	r29
 992:	cf 91       	pop	r28
 994:	1f 91       	pop	r17
 996:	0f 91       	pop	r16
 998:	ff 90       	pop	r15
 99a:	ef 90       	pop	r14
 99c:	df 90       	pop	r13
 99e:	cf 90       	pop	r12
 9a0:	bf 90       	pop	r11
 9a2:	af 90       	pop	r10
 9a4:	9f 90       	pop	r9
 9a6:	8f 90       	pop	r8
 9a8:	08 95       	ret

000009aa <initLCD>:

// Inits the LCD by using some magic

void initLCD(){
	
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
 9aa:	87 eb       	ldi	r24, 0xB7	; 183
 9ac:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (0<<LCDPS2) | (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
 9b0:	87 e0       	ldi	r24, 0x07	; 7
 9b2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
 9b6:	8f e0       	ldi	r24, 0x0F	; 15
 9b8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	LCDCRA = (1<<LCDEN);
 9bc:	80 e8       	ldi	r24, 0x80	; 128
 9be:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
 9c2:	08 95       	ret

000009c4 <initJoystick>:

        }

    } while (++i);

}
 9c4:	27 98       	cbi	0x04, 7	; 4
 9c6:	2f 9a       	sbi	0x05, 7	; 5
 9c8:	83 b1       	in	r24, 0x03	; 3
 9ca:	08 2e       	mov	r0, r24
 9cc:	00 0c       	add	r0, r0
 9ce:	99 0b       	sbc	r25, r25
 9d0:	80 95       	com	r24
 9d2:	90 95       	com	r25
 9d4:	89 2f       	mov	r24, r25
 9d6:	88 1f       	adc	r24, r24
 9d8:	88 27       	eor	r24, r24
 9da:	88 1f       	adc	r24, r24
 9dc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
 9e0:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <state+0x1>
 9e4:	08 95       	ret

000009e6 <joystickConcurrent>:
 9e6:	83 b1       	in	r24, 0x03	; 3
 9e8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <state>
 9ec:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <state+0x1>
 9f0:	08 2e       	mov	r0, r24
 9f2:	00 0c       	add	r0, r0
 9f4:	99 0b       	sbc	r25, r25
 9f6:	88 27       	eor	r24, r24
 9f8:	99 0f       	add	r25, r25
 9fa:	88 1f       	adc	r24, r24
 9fc:	99 27       	eor	r25, r25
 9fe:	28 17       	cp	r18, r24
 a00:	39 07       	cpc	r19, r25
 a02:	a1 f0       	breq	.+40     	; 0xa2c <joystickConcurrent+0x46>
 a04:	81 e0       	ldi	r24, 0x01	; 1
 a06:	90 e0       	ldi	r25, 0x00	; 0
 a08:	21 15       	cp	r18, r1
 a0a:	31 05       	cpc	r19, r1
 a0c:	11 f0       	breq	.+4      	; 0xa12 <joystickConcurrent+0x2c>
 a0e:	80 e0       	ldi	r24, 0x00	; 0
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <state+0x1>
 a16:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
 a1a:	23 2b       	or	r18, r19
 a1c:	39 f4       	brne	.+14     	; 0xa2c <joystickConcurrent+0x46>
 a1e:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 a22:	81 e0       	ldi	r24, 0x01	; 1
 a24:	91 11       	cpse	r25, r1
 a26:	80 e0       	ldi	r24, 0x00	; 0
 a28:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 a2c:	08 95       	ret

00000a2e <blinkConcurrent>:
 a2e:	0e 94 79 00 	call	0xf2	; 0xf2 <clockCycle>
 a32:	89 2b       	or	r24, r25
 a34:	39 f0       	breq	.+14     	; 0xa44 <blinkConcurrent+0x16>
 a36:	90 91 fe 00 	lds	r25, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 a3a:	81 e0       	ldi	r24, 0x01	; 1
 a3c:	91 11       	cpse	r25, r1
 a3e:	80 e0       	ldi	r24, 0x00	; 0
 a40:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 a44:	08 95       	ret

00000a46 <isPrime>:
 a46:	cf 92       	push	r12
 a48:	df 92       	push	r13
 a4a:	ef 92       	push	r14
 a4c:	ff 92       	push	r15
 a4e:	cf 93       	push	r28
 a50:	df 93       	push	r29
 a52:	6b 01       	movw	r12, r22
 a54:	7c 01       	movw	r14, r24
 a56:	83 e0       	ldi	r24, 0x03	; 3
 a58:	c8 16       	cp	r12, r24
 a5a:	d1 04       	cpc	r13, r1
 a5c:	e1 04       	cpc	r14, r1
 a5e:	f1 04       	cpc	r15, r1
 a60:	7c f1       	brlt	.+94     	; 0xac0 <isPrime+0x7a>
 a62:	d7 01       	movw	r26, r14
 a64:	c6 01       	movw	r24, r12
 a66:	81 70       	andi	r24, 0x01	; 1
 a68:	99 27       	eor	r25, r25
 a6a:	aa 27       	eor	r26, r26
 a6c:	b0 78       	andi	r27, 0x80	; 128
 a6e:	bb 23       	and	r27, r27
 a70:	54 f4       	brge	.+20     	; 0xa86 <isPrime+0x40>
 a72:	01 97       	sbiw	r24, 0x01	; 1
 a74:	a1 09       	sbc	r26, r1
 a76:	b1 09       	sbc	r27, r1
 a78:	8e 6f       	ori	r24, 0xFE	; 254
 a7a:	9f 6f       	ori	r25, 0xFF	; 255
 a7c:	af 6f       	ori	r26, 0xFF	; 255
 a7e:	bf 6f       	ori	r27, 0xFF	; 255
 a80:	01 96       	adiw	r24, 0x01	; 1
 a82:	a1 1d       	adc	r26, r1
 a84:	b1 1d       	adc	r27, r1
 a86:	89 2b       	or	r24, r25
 a88:	8a 2b       	or	r24, r26
 a8a:	8b 2b       	or	r24, r27
 a8c:	e1 f0       	breq	.+56     	; 0xac6 <isPrime+0x80>
 a8e:	c2 e0       	ldi	r28, 0x02	; 2
 a90:	d0 e0       	ldi	r29, 0x00	; 0
 a92:	08 c0       	rjmp	.+16     	; 0xaa4 <isPrime+0x5e>
 a94:	c7 01       	movw	r24, r14
 a96:	b6 01       	movw	r22, r12
 a98:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__divmodsi4>
 a9c:	67 2b       	or	r22, r23
 a9e:	68 2b       	or	r22, r24
 aa0:	69 2b       	or	r22, r25
 aa2:	a1 f0       	breq	.+40     	; 0xacc <isPrime+0x86>
 aa4:	21 96       	adiw	r28, 0x01	; 1
 aa6:	9e 01       	movw	r18, r28
 aa8:	0d 2e       	mov	r0, r29
 aaa:	00 0c       	add	r0, r0
 aac:	44 0b       	sbc	r20, r20
 aae:	55 0b       	sbc	r21, r21
 ab0:	2c 15       	cp	r18, r12
 ab2:	3d 05       	cpc	r19, r13
 ab4:	4e 05       	cpc	r20, r14
 ab6:	5f 05       	cpc	r21, r15
 ab8:	6c f3       	brlt	.-38     	; 0xa94 <isPrime+0x4e>
 aba:	81 e0       	ldi	r24, 0x01	; 1
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	08 c0       	rjmp	.+16     	; 0xad0 <isPrime+0x8a>
 ac0:	81 e0       	ldi	r24, 0x01	; 1
 ac2:	90 e0       	ldi	r25, 0x00	; 0
 ac4:	05 c0       	rjmp	.+10     	; 0xad0 <isPrime+0x8a>
 ac6:	80 e0       	ldi	r24, 0x00	; 0
 ac8:	90 e0       	ldi	r25, 0x00	; 0
 aca:	02 c0       	rjmp	.+4      	; 0xad0 <isPrime+0x8a>
 acc:	80 e0       	ldi	r24, 0x00	; 0
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	df 91       	pop	r29
 ad2:	cf 91       	pop	r28
 ad4:	ff 90       	pop	r15
 ad6:	ef 90       	pop	r14
 ad8:	df 90       	pop	r13
 ada:	cf 90       	pop	r12
 adc:	08 95       	ret

00000ade <primesConcurrent>:

// Same as primesSimple, but only generates one prime at the time
void primesConcurrent() {
 ade:	8f 92       	push	r8
 ae0:	9f 92       	push	r9
 ae2:	af 92       	push	r10
 ae4:	bf 92       	push	r11
 ae6:	cf 92       	push	r12
 ae8:	df 92       	push	r13
 aea:	ef 92       	push	r14
 aec:	ff 92       	push	r15
 aee:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <currentPrime>
 af2:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <currentPrime+0x1>
 af6:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <currentPrime+0x2>
 afa:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <currentPrime+0x3>
 afe:	46 01       	movw	r8, r12
 b00:	57 01       	movw	r10, r14

    while (1) {
        if (isPrime(currentPrime)) {
 b02:	c7 01       	movw	r24, r14
 b04:	b6 01       	movw	r22, r12
 b06:	0e 94 23 05 	call	0xa46	; 0xa46 <isPrime>
 b0a:	2f ef       	ldi	r18, 0xFF	; 255
 b0c:	c2 1a       	sub	r12, r18
 b0e:	d2 0a       	sbc	r13, r18
 b10:	e2 0a       	sbc	r14, r18
 b12:	f2 0a       	sbc	r15, r18
 b14:	89 2b       	or	r24, r25
 b16:	99 f3       	breq	.-26     	; 0xafe <primesConcurrent+0x20>
            writeLong(currentPrime++);
 b18:	c0 92 06 01 	sts	0x0106, r12	; 0x800106 <currentPrime>
 b1c:	d0 92 07 01 	sts	0x0107, r13	; 0x800107 <currentPrime+0x1>
 b20:	e0 92 08 01 	sts	0x0108, r14	; 0x800108 <currentPrime+0x2>
 b24:	f0 92 09 01 	sts	0x0109, r15	; 0x800109 <currentPrime+0x3>
 b28:	c5 01       	movw	r24, r10
 b2a:	b4 01       	movw	r22, r8
 b2c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <writeLong>
            return;
        }
        currentPrime++;
    }

}
 b30:	ff 90       	pop	r15
 b32:	ef 90       	pop	r14
 b34:	df 90       	pop	r13
 b36:	cf 90       	pop	r12
 b38:	bf 90       	pop	r11
 b3a:	af 90       	pop	r10
 b3c:	9f 90       	pop	r9
 b3e:	8f 90       	pop	r8
 b40:	08 95       	ret

00000b42 <main>:
int isPrime(long i);


int main(void) {

    CLKPR = 0x80;
 b42:	e1 e6       	ldi	r30, 0x61	; 97
 b44:	f0 e0       	ldi	r31, 0x00	; 0
 b46:	80 e8       	ldi	r24, 0x80	; 128
 b48:	80 83       	st	Z, r24
    CLKPR = 0x00;
 b4a:	10 82       	st	Z, r1

    // Inits some stuff
    initJoystick();
 b4c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <initJoystick>
    initLCD();
 b50:	0e 94 d5 04 	call	0x9aa	; 0x9aa <initLCD>
    initClock();
 b54:	0e 94 6d 00 	call	0xda	; 0xda <initClock>

    currentPrime = STARTPRIME;
 b58:	82 e0       	ldi	r24, 0x02	; 2
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	a0 e0       	ldi	r26, 0x00	; 0
 b5e:	b0 e0       	ldi	r27, 0x00	; 0
 b60:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <currentPrime>
 b64:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <currentPrime+0x1>
 b68:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <currentPrime+0x2>
 b6c:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <currentPrime+0x3>
    //joystickSimple();

	//writeLong(123456789);
    while (1) {

        blinkConcurrent();
 b70:	0e 94 17 05 	call	0xa2e	; 0xa2e <blinkConcurrent>
        primesConcurrent();
 b74:	0e 94 6f 05 	call	0xade	; 0xade <primesConcurrent>
        joystickConcurrent();
 b78:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <joystickConcurrent>
 b7c:	f9 cf       	rjmp	.-14     	; 0xb70 <main+0x2e>

00000b7e <__divmodsi4>:
 b7e:	05 2e       	mov	r0, r21
 b80:	97 fb       	bst	r25, 7
 b82:	1e f4       	brtc	.+6      	; 0xb8a <__divmodsi4+0xc>
 b84:	00 94       	com	r0
 b86:	0e 94 d6 05 	call	0xbac	; 0xbac <__negsi2>
 b8a:	57 fd       	sbrc	r21, 7
 b8c:	07 d0       	rcall	.+14     	; 0xb9c <__divmodsi4_neg2>
 b8e:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__udivmodsi4>
 b92:	07 fc       	sbrc	r0, 7
 b94:	03 d0       	rcall	.+6      	; 0xb9c <__divmodsi4_neg2>
 b96:	4e f4       	brtc	.+18     	; 0xbaa <__divmodsi4_exit>
 b98:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__negsi2>

00000b9c <__divmodsi4_neg2>:
 b9c:	50 95       	com	r21
 b9e:	40 95       	com	r20
 ba0:	30 95       	com	r19
 ba2:	21 95       	neg	r18
 ba4:	3f 4f       	sbci	r19, 0xFF	; 255
 ba6:	4f 4f       	sbci	r20, 0xFF	; 255
 ba8:	5f 4f       	sbci	r21, 0xFF	; 255

00000baa <__divmodsi4_exit>:
 baa:	08 95       	ret

00000bac <__negsi2>:
 bac:	90 95       	com	r25
 bae:	80 95       	com	r24
 bb0:	70 95       	com	r23
 bb2:	61 95       	neg	r22
 bb4:	7f 4f       	sbci	r23, 0xFF	; 255
 bb6:	8f 4f       	sbci	r24, 0xFF	; 255
 bb8:	9f 4f       	sbci	r25, 0xFF	; 255
 bba:	08 95       	ret

00000bbc <__tablejump2__>:
 bbc:	ee 0f       	add	r30, r30
 bbe:	ff 1f       	adc	r31, r31
 bc0:	05 90       	lpm	r0, Z+
 bc2:	f4 91       	lpm	r31, Z
 bc4:	e0 2d       	mov	r30, r0
 bc6:	09 94       	ijmp

00000bc8 <__udivmodsi4>:
 bc8:	a1 e2       	ldi	r26, 0x21	; 33
 bca:	1a 2e       	mov	r1, r26
 bcc:	aa 1b       	sub	r26, r26
 bce:	bb 1b       	sub	r27, r27
 bd0:	fd 01       	movw	r30, r26
 bd2:	0d c0       	rjmp	.+26     	; 0xbee <__udivmodsi4_ep>

00000bd4 <__udivmodsi4_loop>:
 bd4:	aa 1f       	adc	r26, r26
 bd6:	bb 1f       	adc	r27, r27
 bd8:	ee 1f       	adc	r30, r30
 bda:	ff 1f       	adc	r31, r31
 bdc:	a2 17       	cp	r26, r18
 bde:	b3 07       	cpc	r27, r19
 be0:	e4 07       	cpc	r30, r20
 be2:	f5 07       	cpc	r31, r21
 be4:	20 f0       	brcs	.+8      	; 0xbee <__udivmodsi4_ep>
 be6:	a2 1b       	sub	r26, r18
 be8:	b3 0b       	sbc	r27, r19
 bea:	e4 0b       	sbc	r30, r20
 bec:	f5 0b       	sbc	r31, r21

00000bee <__udivmodsi4_ep>:
 bee:	66 1f       	adc	r22, r22
 bf0:	77 1f       	adc	r23, r23
 bf2:	88 1f       	adc	r24, r24
 bf4:	99 1f       	adc	r25, r25
 bf6:	1a 94       	dec	r1
 bf8:	69 f7       	brne	.-38     	; 0xbd4 <__udivmodsi4_loop>
 bfa:	60 95       	com	r22
 bfc:	70 95       	com	r23
 bfe:	80 95       	com	r24
 c00:	90 95       	com	r25
 c02:	9b 01       	movw	r18, r22
 c04:	ac 01       	movw	r20, r24
 c06:	bd 01       	movw	r22, r26
 c08:	cf 01       	movw	r24, r30
 c0a:	08 95       	ret

00000c0c <_exit>:
 c0c:	f8 94       	cli

00000c0e <__stop_program>:
 c0e:	ff cf       	rjmp	.-2      	; 0xc0e <__stop_program>
