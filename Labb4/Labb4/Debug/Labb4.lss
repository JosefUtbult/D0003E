
Labb4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00002abc  00002b50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002abc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800108  00800108  00002b58  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002b58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002b88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000300  00000000  00000000  00002bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003c56  00000000  00000000  00002ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000138a  00000000  00000000  00006b1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c6a  00000000  00000000  00007ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000da8  00000000  00000000  00009b14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a25  00000000  00000000  0000a8bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003afd  00000000  00000000  0000b2e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000edde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
       4:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <__vector_1>
       8:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__vector_2>
       c:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__vector_3>
      10:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__vector_4>
      14:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <__vector_5>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__vector_7>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__vector_9>
      28:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__vector_10>
      2c:	0c 94 e1 0b 	jmp	0x17c2	; 0x17c2 <__vector_11>
      30:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__vector_12>
      34:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__vector_13>
      38:	0c 94 25 0d 	jmp	0x1a4a	; 0x1a4a <__vector_14>
      3c:	0c 94 91 0d 	jmp	0x1b22	; 0x1b22 <__vector_15>
      40:	0c 94 fd 0d 	jmp	0x1bfa	; 0x1bfa <__vector_16>
      44:	0c 94 69 0e 	jmp	0x1cd2	; 0x1cd2 <__vector_17>
      48:	0c 94 d5 0e 	jmp	0x1daa	; 0x1daa <__vector_18>
      4c:	0c 94 41 0f 	jmp	0x1e82	; 0x1e82 <__vector_19>
      50:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__vector_20>
      54:	0c 94 19 10 	jmp	0x2032	; 0x2032 <__vector_21>
      58:	0c 94 85 10 	jmp	0x210a	; 0x210a <__vector_22>
      5c:	d1 04       	cpc	r13, r1
      5e:	dd 04       	cpc	r13, r13
      60:	e9 04       	cpc	r14, r9
      62:	f5 04       	cpc	r15, r5
      64:	01 05       	cpc	r16, r1
      66:	0d 05       	cpc	r16, r13
      68:	19 05       	cpc	r17, r9
      6a:	25 05       	cpc	r18, r5
      6c:	31 05       	cpc	r19, r1
      6e:	3d 05       	cpc	r19, r13
      70:	81 06       	cpc	r8, r17
      72:	81 06       	cpc	r8, r17
      74:	81 06       	cpc	r8, r17
      76:	81 06       	cpc	r8, r17
      78:	81 06       	cpc	r8, r17
      7a:	81 06       	cpc	r8, r17
      7c:	81 06       	cpc	r8, r17
      7e:	49 05       	cpc	r20, r9
      80:	55 05       	cpc	r21, r5
      82:	61 05       	cpc	r22, r1
      84:	6d 05       	cpc	r22, r13
      86:	79 05       	cpc	r23, r9
      88:	85 05       	cpc	r24, r5
      8a:	91 05       	cpc	r25, r1
      8c:	9d 05       	cpc	r25, r13
      8e:	a9 05       	cpc	r26, r9
      90:	b5 05       	cpc	r27, r5
      92:	c1 05       	cpc	r28, r1
      94:	cd 05       	cpc	r28, r13
      96:	d9 05       	cpc	r29, r9
      98:	e5 05       	cpc	r30, r5
      9a:	f1 05       	cpc	r31, r1
      9c:	fd 05       	cpc	r31, r13
      9e:	09 06       	cpc	r0, r25
      a0:	15 06       	cpc	r1, r21
      a2:	21 06       	cpc	r2, r17
      a4:	2d 06       	cpc	r2, r29
      a6:	39 06       	cpc	r3, r25
      a8:	45 06       	cpc	r4, r21
      aa:	51 06       	cpc	r5, r17
      ac:	5d 06       	cpc	r5, r29
      ae:	69 06       	cpc	r6, r25
      b0:	75 06       	cpc	r7, r21

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d4 e0       	ldi	r29, 0x04	; 4
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	ec eb       	ldi	r30, 0xBC	; 188
      c6:	fa e2       	ldi	r31, 0x2A	; 42
      c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x10>
      ca:	05 90       	lpm	r0, Z+
      cc:	0d 92       	st	X+, r0
      ce:	a8 30       	cpi	r26, 0x08	; 8
      d0:	b1 07       	cpc	r27, r17
      d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0xc>

000000d4 <__do_clear_bss>:
      d4:	24 e0       	ldi	r18, 0x04	; 4
      d6:	a8 e0       	ldi	r26, 0x08	; 8
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
      dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
      de:	ab 35       	cpi	r26, 0x5B	; 91
      e0:	b2 07       	cpc	r27, r18
      e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
      e4:	0e 94 1a 07 	call	0xe34	; 0xe34 <main>
      e8:	0c 94 5c 15 	jmp	0x2ab8	; 0x2ab8 <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <initGUI>:
#define LCDLINE2BIT 5
#define LCDLINE4BIT 6

int initGUI(GUI* self){
	
	initLCD();
      f0:	0e 94 8f 06 	call	0xd1e	; 0xd1e <initLCD>
	initJoystick();
      f4:	0e 94 77 02 	call	0x4ee	; 0x4ee <initJoystick>

	return 1;
}
      f8:	81 e0       	ldi	r24, 0x01	; 1
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	08 95       	ret

000000fe <writeAt>:


void writeAt(int pos, int value){
      fe:	ef 92       	push	r14
     100:	ff 92       	push	r15
     102:	0f 93       	push	r16
     104:	1f 93       	push	r17
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	ec 01       	movw	r28, r24
     10c:	7b 01       	movw	r14, r22
	
	writeChar('0' + (value % 100) / 10, pos);
     10e:	cb 01       	movw	r24, r22
     110:	64 e6       	ldi	r22, 0x64	; 100
     112:	70 e0       	ldi	r23, 0x00	; 0
     114:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__divmodhi4>
     118:	0a e0       	ldi	r16, 0x0A	; 10
     11a:	10 e0       	ldi	r17, 0x00	; 0
     11c:	b8 01       	movw	r22, r16
     11e:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__divmodhi4>
     122:	86 2f       	mov	r24, r22
     124:	be 01       	movw	r22, r28
     126:	80 5d       	subi	r24, 0xD0	; 208
     128:	0e 94 be 04 	call	0x97c	; 0x97c <writeChar>
	writeChar('0' + (value % 10), ++pos);
     12c:	21 96       	adiw	r28, 0x01	; 1
     12e:	c7 01       	movw	r24, r14
     130:	b8 01       	movw	r22, r16
     132:	0e 94 d7 14 	call	0x29ae	; 0x29ae <__divmodhi4>
     136:	be 01       	movw	r22, r28
     138:	80 5d       	subi	r24, 0xD0	; 208
     13a:	0e 94 be 04 	call	0x97c	; 0x97c <writeChar>
	
}
     13e:	df 91       	pop	r29
     140:	cf 91       	pop	r28
     142:	1f 91       	pop	r17
     144:	0f 91       	pop	r16
     146:	ff 90       	pop	r15
     148:	ef 90       	pop	r14
     14a:	08 95       	ret

0000014c <render>:

// Renders the LCD
void render(GUI* self){
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	ec 01       	movw	r28, r24
	
	writeAt(0,self->pwmGenerators[0]->active ? self->pwmGenerators[0]->step : 0);
     152:	e8 85       	ldd	r30, Y+8	; 0x08
     154:	f9 85       	ldd	r31, Y+9	; 0x09
     156:	66 85       	ldd	r22, Z+14	; 0x0e
     158:	77 85       	ldd	r23, Z+15	; 0x0f
     15a:	61 15       	cp	r22, r1
     15c:	71 05       	cpc	r23, r1
     15e:	11 f0       	breq	.+4      	; 0x164 <render+0x18>
     160:	62 85       	ldd	r22, Z+10	; 0x0a
     162:	73 85       	ldd	r23, Z+11	; 0x0b
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	0e 94 7f 00 	call	0xfe	; 0xfe <writeAt>
	writeAt(4,self->pwmGenerators[1]->active ? self->pwmGenerators[1]->step : 0);
     16c:	ea 85       	ldd	r30, Y+10	; 0x0a
     16e:	fb 85       	ldd	r31, Y+11	; 0x0b
     170:	66 85       	ldd	r22, Z+14	; 0x0e
     172:	77 85       	ldd	r23, Z+15	; 0x0f
     174:	61 15       	cp	r22, r1
     176:	71 05       	cpc	r23, r1
     178:	11 f0       	breq	.+4      	; 0x17e <render+0x32>
     17a:	62 85       	ldd	r22, Z+10	; 0x0a
     17c:	73 85       	ldd	r23, Z+11	; 0x0b
     17e:	84 e0       	ldi	r24, 0x04	; 4
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	0e 94 7f 00 	call	0xfe	; 0xfe <writeAt>
		
	if(self->currentChannel){
     186:	8e 81       	ldd	r24, Y+6	; 0x06
     188:	9f 81       	ldd	r25, Y+7	; 0x07
     18a:	89 2b       	or	r24, r25
     18c:	59 f0       	breq	.+22     	; 0x1a4 <render+0x58>
		LCDLINE2REG &= ~(1 << LCDLINE2BIT);
     18e:	ec ee       	ldi	r30, 0xEC	; 236
     190:	f0 e0       	ldi	r31, 0x00	; 0
     192:	80 81       	ld	r24, Z
     194:	8f 7d       	andi	r24, 0xDF	; 223
     196:	80 83       	st	Z, r24
		LCDLINE4REG |= (1 << LCDLINE4BIT);
     198:	ed ee       	ldi	r30, 0xED	; 237
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	80 81       	ld	r24, Z
     19e:	80 64       	ori	r24, 0x40	; 64
     1a0:	80 83       	st	Z, r24
     1a2:	0a c0       	rjmp	.+20     	; 0x1b8 <render+0x6c>
	}
	else{
		LCDLINE4REG &= ~(1 << LCDLINE4BIT);
     1a4:	ed ee       	ldi	r30, 0xED	; 237
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	8f 7b       	andi	r24, 0xBF	; 191
     1ac:	80 83       	st	Z, r24
		LCDLINE2REG |= (1 << LCDLINE2BIT);
     1ae:	ec ee       	ldi	r30, 0xEC	; 236
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	80 81       	ld	r24, Z
     1b4:	80 62       	ori	r24, 0x20	; 32
     1b6:	80 83       	st	Z, r24
	}
	
}
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	08 95       	ret

000001be <parseGUI>:
// Parses the gui upon joystick interrupts. Reads the joystick state,
// increments/decrements the pwm signal speed on up/down, changes the
// current pwm chanel on left/right and activates/deactivates the pwm
// on input push

void parseGUI(GUI *self){
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
	
	if(self->lock.state) return;
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 89       	ldd	r18, Z+16	; 0x10
     1c6:	31 89       	ldd	r19, Z+17	; 0x11
     1c8:	23 2b       	or	r18, r19
     1ca:	09 f0       	breq	.+2      	; 0x1ce <parseGUI+0x10>
     1cc:	9f c0       	rjmp	.+318    	; 0x30c <parseGUI+0x14e>
     1ce:	ec 01       	movw	r28, r24
	
	switch (readJoystick()) {
     1d0:	0e 94 96 02 	call	0x52c	; 0x52c <readJoystick>
     1d4:	82 30       	cpi	r24, 0x02	; 2
     1d6:	91 05       	cpc	r25, r1
     1d8:	89 f1       	breq	.+98     	; 0x23c <parseGUI+0x7e>
     1da:	34 f4       	brge	.+12     	; 0x1e8 <parseGUI+0x2a>
     1dc:	00 97       	sbiw	r24, 0x00	; 0
     1de:	09 f4       	brne	.+2      	; 0x1e2 <parseGUI+0x24>
     1e0:	86 c0       	rjmp	.+268    	; 0x2ee <parseGUI+0x130>
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	59 f0       	breq	.+22     	; 0x1fc <parseGUI+0x3e>
     1e6:	87 c0       	rjmp	.+270    	; 0x2f6 <parseGUI+0x138>
     1e8:	84 30       	cpi	r24, 0x04	; 4
     1ea:	91 05       	cpc	r25, r1
     1ec:	09 f4       	brne	.+2      	; 0x1f0 <parseGUI+0x32>
     1ee:	52 c0       	rjmp	.+164    	; 0x294 <parseGUI+0xd6>
     1f0:	0c f4       	brge	.+2      	; 0x1f4 <parseGUI+0x36>
     1f2:	44 c0       	rjmp	.+136    	; 0x27c <parseGUI+0xbe>
     1f4:	05 97       	sbiw	r24, 0x05	; 5
     1f6:	09 f4       	brne	.+2      	; 0x1fa <parseGUI+0x3c>
     1f8:	58 c0       	rjmp	.+176    	; 0x2aa <parseGUI+0xec>
     1fa:	7d c0       	rjmp	.+250    	; 0x2f6 <parseGUI+0x138>
		
		// 0 = Center, 1 = Upp, 2 = Down, 3 = Left, 4 = Right, 5 = Center Down
		case 1:
			if(self->debounce || !self->pwmGenerators[self->currentChannel]->active) return;
     1fc:	8a 89       	ldd	r24, Y+18	; 0x12
     1fe:	9b 89       	ldd	r25, Y+19	; 0x13
     200:	89 2b       	or	r24, r25
     202:	09 f0       	breq	.+2      	; 0x206 <parseGUI+0x48>
     204:	83 c0       	rjmp	.+262    	; 0x30c <parseGUI+0x14e>
     206:	ee 81       	ldd	r30, Y+6	; 0x06
     208:	ff 81       	ldd	r31, Y+7	; 0x07
     20a:	34 96       	adiw	r30, 0x04	; 4
     20c:	ee 0f       	add	r30, r30
     20e:	ff 1f       	adc	r31, r31
     210:	ec 0f       	add	r30, r28
     212:	fd 1f       	adc	r31, r29
     214:	01 90       	ld	r0, Z+
     216:	f0 81       	ld	r31, Z
     218:	e0 2d       	mov	r30, r0
     21a:	86 85       	ldd	r24, Z+14	; 0x0e
     21c:	97 85       	ldd	r25, Z+15	; 0x0f
     21e:	89 2b       	or	r24, r25
     220:	09 f4       	brne	.+2      	; 0x224 <parseGUI+0x66>
     222:	74 c0       	rjmp	.+232    	; 0x30c <parseGUI+0x14e>
			
			SYNC(self->pwmGenerators[self->currentChannel], &incrementStep, NULL);
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	6d e7       	ldi	r22, 0x7D	; 125
     22a:	78 e0       	ldi	r23, 0x08	; 8
     22c:	cf 01       	movw	r24, r30
     22e:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
			self->debounce = 1;
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	9b 8b       	std	Y+19, r25	; 0x13
     238:	8a 8b       	std	Y+18, r24	; 0x12
			
		break;
     23a:	5d c0       	rjmp	.+186    	; 0x2f6 <parseGUI+0x138>
		
		case 2:
			if(self->debounce || !self->pwmGenerators[self->currentChannel]->active) return;
     23c:	8a 89       	ldd	r24, Y+18	; 0x12
     23e:	9b 89       	ldd	r25, Y+19	; 0x13
     240:	89 2b       	or	r24, r25
     242:	09 f0       	breq	.+2      	; 0x246 <parseGUI+0x88>
     244:	63 c0       	rjmp	.+198    	; 0x30c <parseGUI+0x14e>
     246:	ee 81       	ldd	r30, Y+6	; 0x06
     248:	ff 81       	ldd	r31, Y+7	; 0x07
     24a:	34 96       	adiw	r30, 0x04	; 4
     24c:	ee 0f       	add	r30, r30
     24e:	ff 1f       	adc	r31, r31
     250:	ec 0f       	add	r30, r28
     252:	fd 1f       	adc	r31, r29
     254:	01 90       	ld	r0, Z+
     256:	f0 81       	ld	r31, Z
     258:	e0 2d       	mov	r30, r0
     25a:	86 85       	ldd	r24, Z+14	; 0x0e
     25c:	97 85       	ldd	r25, Z+15	; 0x0f
     25e:	89 2b       	or	r24, r25
     260:	09 f4       	brne	.+2      	; 0x264 <parseGUI+0xa6>
     262:	54 c0       	rjmp	.+168    	; 0x30c <parseGUI+0x14e>
			
			SYNC(self->pwmGenerators[self->currentChannel], &decrementStep, NULL);
     264:	40 e0       	ldi	r20, 0x00	; 0
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	68 e8       	ldi	r22, 0x88	; 136
     26a:	78 e0       	ldi	r23, 0x08	; 8
     26c:	cf 01       	movw	r24, r30
     26e:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
			self->debounce = 1;
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	9b 8b       	std	Y+19, r25	; 0x13
     278:	8a 8b       	std	Y+18, r24	; 0x12
			
		break;
     27a:	3d c0       	rjmp	.+122    	; 0x2f6 <parseGUI+0x138>
		
		case 3:
			if(self->debounce) return;	
     27c:	8a 89       	ldd	r24, Y+18	; 0x12
     27e:	9b 89       	ldd	r25, Y+19	; 0x13
     280:	89 2b       	or	r24, r25
     282:	09 f0       	breq	.+2      	; 0x286 <parseGUI+0xc8>
     284:	43 c0       	rjmp	.+134    	; 0x30c <parseGUI+0x14e>
			self->currentChannel = 0;
     286:	1f 82       	std	Y+7, r1	; 0x07
     288:	1e 82       	std	Y+6, r1	; 0x06
			self->debounce = 1;
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	9b 8b       	std	Y+19, r25	; 0x13
     290:	8a 8b       	std	Y+18, r24	; 0x12
		break;
     292:	31 c0       	rjmp	.+98     	; 0x2f6 <parseGUI+0x138>
		
		case 4:
			if(self->debounce) return;
     294:	8a 89       	ldd	r24, Y+18	; 0x12
     296:	9b 89       	ldd	r25, Y+19	; 0x13
     298:	89 2b       	or	r24, r25
     29a:	c1 f5       	brne	.+112    	; 0x30c <parseGUI+0x14e>
			self->currentChannel = 1;
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	9f 83       	std	Y+7, r25	; 0x07
     2a2:	8e 83       	std	Y+6, r24	; 0x06
			self->debounce = 1;
     2a4:	9b 8b       	std	Y+19, r25	; 0x13
     2a6:	8a 8b       	std	Y+18, r24	; 0x12
		break;
     2a8:	26 c0       	rjmp	.+76     	; 0x2f6 <parseGUI+0x138>
		
		case 5:
			if(self->debounce || !self->pwmGenerators[self->currentChannel]->step) return;
     2aa:	8a 89       	ldd	r24, Y+18	; 0x12
     2ac:	9b 89       	ldd	r25, Y+19	; 0x13
     2ae:	89 2b       	or	r24, r25
     2b0:	69 f5       	brne	.+90     	; 0x30c <parseGUI+0x14e>
     2b2:	ee 81       	ldd	r30, Y+6	; 0x06
     2b4:	ff 81       	ldd	r31, Y+7	; 0x07
     2b6:	34 96       	adiw	r30, 0x04	; 4
     2b8:	ee 0f       	add	r30, r30
     2ba:	ff 1f       	adc	r31, r31
     2bc:	ec 0f       	add	r30, r28
     2be:	fd 1f       	adc	r31, r29
     2c0:	01 90       	ld	r0, Z+
     2c2:	f0 81       	ld	r31, Z
     2c4:	e0 2d       	mov	r30, r0
     2c6:	82 85       	ldd	r24, Z+10	; 0x0a
     2c8:	93 85       	ldd	r25, Z+11	; 0x0b
     2ca:	89 2b       	or	r24, r25
     2cc:	f9 f0       	breq	.+62     	; 0x30c <parseGUI+0x14e>
			
			if(self->pwmGenerators[self->currentChannel]->active){
     2ce:	86 85       	ldd	r24, Z+14	; 0x0e
     2d0:	97 85       	ldd	r25, Z+15	; 0x0f
     2d2:	89 2b       	or	r24, r25
     2d4:	21 f0       	breq	.+8      	; 0x2de <parseGUI+0x120>
				deactivate(self->pwmGenerators[self->currentChannel]);
     2d6:	cf 01       	movw	r24, r30
     2d8:	0e 94 79 08 	call	0x10f2	; 0x10f2 <deactivate>
     2dc:	03 c0       	rjmp	.+6      	; 0x2e4 <parseGUI+0x126>
			}
			else{
				activate(self->pwmGenerators[self->currentChannel]);
     2de:	cf 01       	movw	r24, r30
     2e0:	0e 94 71 08 	call	0x10e2	; 0x10e2 <activate>
			}
			self->debounce = 1;
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	9b 8b       	std	Y+19, r25	; 0x13
     2ea:	8a 8b       	std	Y+18, r24	; 0x12
		break;
     2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <parseGUI+0x138>
		
		case 0:
			self->debounce = 0;
     2ee:	1b 8a       	std	Y+19, r1	; 0x13
     2f0:	1a 8a       	std	Y+18, r1	; 0x12
			self->hold = 0;
     2f2:	1d 8a       	std	Y+21, r1	; 0x15
     2f4:	1c 8a       	std	Y+20, r1	; 0x14
		default:
		break;
		
	}
	
	render(self);
     2f6:	ce 01       	movw	r24, r28
     2f8:	0e 94 a6 00 	call	0x14c	; 0x14c <render>
	SYNC(&(self->lock), &lockState, NULL);
     2fc:	40 e0       	ldi	r20, 0x00	; 0
     2fe:	50 e0       	ldi	r21, 0x00	; 0
     300:	60 ea       	ldi	r22, 0xA0	; 160
     302:	76 e0       	ldi	r23, 0x06	; 6
     304:	ce 01       	movw	r24, r28
     306:	0c 96       	adiw	r24, 0x0c	; 12
     308:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>

}
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	08 95       	ret

00000312 <setPwmGenerators>:

void setPwmGenerators(GUI* self, PwmGenerator* pwmGenerator1, PwmGenerator* pwmGenerator2){
	self->pwmGenerators[0] = pwmGenerator1;
     312:	fc 01       	movw	r30, r24
     314:	71 87       	std	Z+9, r23	; 0x09
     316:	60 87       	std	Z+8, r22	; 0x08
	self->pwmGenerators[1] = pwmGenerator2;
     318:	53 87       	std	Z+11, r21	; 0x0b
     31a:	42 87       	std	Z+10, r20	; 0x0a
     31c:	08 95       	ret

0000031e <cycleUp>:


// Cycles and increments/decrements the pwm step counter if the 
// joystick still has the correct input. Starts itself again after
// a defined time
void cycleUp(Hold* self){
     31e:	cf 92       	push	r12
     320:	df 92       	push	r13
     322:	ef 92       	push	r14
     324:	ff 92       	push	r15
     326:	0f 93       	push	r16
     328:	1f 93       	push	r17
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
     32e:	ec 01       	movw	r28, r24
	
	if(readJoystick() == 1 && self->gui->pwmGenerators[self->gui->currentChannel]->active){
     330:	0e 94 96 02 	call	0x52c	; 0x52c <readJoystick>
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	a9 f5       	brne	.+106    	; 0x3a2 <cycleUp+0x84>
     338:	ac 81       	ldd	r26, Y+4	; 0x04
     33a:	bd 81       	ldd	r27, Y+5	; 0x05
     33c:	16 96       	adiw	r26, 0x06	; 6
     33e:	ed 91       	ld	r30, X+
     340:	fc 91       	ld	r31, X
     342:	17 97       	sbiw	r26, 0x07	; 7
     344:	34 96       	adiw	r30, 0x04	; 4
     346:	ee 0f       	add	r30, r30
     348:	ff 1f       	adc	r31, r31
     34a:	ea 0f       	add	r30, r26
     34c:	fb 1f       	adc	r31, r27
     34e:	01 90       	ld	r0, Z+
     350:	f0 81       	ld	r31, Z
     352:	e0 2d       	mov	r30, r0
     354:	86 85       	ldd	r24, Z+14	; 0x0e
     356:	97 85       	ldd	r25, Z+15	; 0x0f
     358:	89 2b       	or	r24, r25
     35a:	19 f1       	breq	.+70     	; 0x3a2 <cycleUp+0x84>
		
		SYNC(self->gui->pwmGenerators[self->gui->currentChannel], &incrementStep, NULL);
     35c:	40 e0       	ldi	r20, 0x00	; 0
     35e:	50 e0       	ldi	r21, 0x00	; 0
     360:	6d e7       	ldi	r22, 0x7D	; 125
     362:	78 e0       	ldi	r23, 0x08	; 8
     364:	cf 01       	movw	r24, r30
     366:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
		SYNC(self->gui, &render, NULL);
     36a:	40 e0       	ldi	r20, 0x00	; 0
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	66 ea       	ldi	r22, 0xA6	; 166
     370:	70 e0       	ldi	r23, 0x00	; 0
     372:	8c 81       	ldd	r24, Y+4	; 0x04
     374:	9d 81       	ldd	r25, Y+5	; 0x05
     376:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
		SEND(MSEC(STEPDELAY), MSEC(STEPDELAY + 10), self, &cycleUp, NULL);
     37a:	c1 2c       	mov	r12, r1
     37c:	d1 2c       	mov	r13, r1
     37e:	0f 2e       	mov	r0, r31
     380:	ff e8       	ldi	r31, 0x8F	; 143
     382:	ef 2e       	mov	r14, r31
     384:	f1 e0       	ldi	r31, 0x01	; 1
     386:	ff 2e       	mov	r15, r31
     388:	f0 2d       	mov	r31, r0
     38a:	8e 01       	movw	r16, r28
     38c:	2d e6       	ldi	r18, 0x6D	; 109
     38e:	3d e0       	ldi	r19, 0x0D	; 13
     390:	40 e0       	ldi	r20, 0x00	; 0
     392:	50 e0       	ldi	r21, 0x00	; 0
     394:	65 e3       	ldi	r22, 0x35	; 53
     396:	7c e0       	ldi	r23, 0x0C	; 12
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	0e 94 95 12 	call	0x252a	; 0x252a <async>
     3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <cycleUp+0x88>
		
	}
	else{
		self->state = 0;
     3a2:	1f 82       	std	Y+7, r1	; 0x07
     3a4:	1e 82       	std	Y+6, r1	; 0x06
	}
	
}
     3a6:	df 91       	pop	r29
     3a8:	cf 91       	pop	r28
     3aa:	1f 91       	pop	r17
     3ac:	0f 91       	pop	r16
     3ae:	ff 90       	pop	r15
     3b0:	ef 90       	pop	r14
     3b2:	df 90       	pop	r13
     3b4:	cf 90       	pop	r12
     3b6:	08 95       	ret

000003b8 <cycleDown>:

void cycleDown(Hold* self){
     3b8:	cf 92       	push	r12
     3ba:	df 92       	push	r13
     3bc:	ef 92       	push	r14
     3be:	ff 92       	push	r15
     3c0:	0f 93       	push	r16
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	ec 01       	movw	r28, r24
	
	if(readJoystick() == 2 && self->gui->pwmGenerators[self->gui->currentChannel]->active){
     3ca:	0e 94 96 02 	call	0x52c	; 0x52c <readJoystick>
     3ce:	02 97       	sbiw	r24, 0x02	; 2
     3d0:	a9 f5       	brne	.+106    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     3d2:	ac 81       	ldd	r26, Y+4	; 0x04
     3d4:	bd 81       	ldd	r27, Y+5	; 0x05
     3d6:	16 96       	adiw	r26, 0x06	; 6
     3d8:	ed 91       	ld	r30, X+
     3da:	fc 91       	ld	r31, X
     3dc:	17 97       	sbiw	r26, 0x07	; 7
     3de:	34 96       	adiw	r30, 0x04	; 4
     3e0:	ee 0f       	add	r30, r30
     3e2:	ff 1f       	adc	r31, r31
     3e4:	ea 0f       	add	r30, r26
     3e6:	fb 1f       	adc	r31, r27
     3e8:	01 90       	ld	r0, Z+
     3ea:	f0 81       	ld	r31, Z
     3ec:	e0 2d       	mov	r30, r0
     3ee:	86 85       	ldd	r24, Z+14	; 0x0e
     3f0:	97 85       	ldd	r25, Z+15	; 0x0f
     3f2:	89 2b       	or	r24, r25
     3f4:	19 f1       	breq	.+70     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
		
		SYNC(self->gui->pwmGenerators[self->gui->currentChannel], &decrementStep, NULL);
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	50 e0       	ldi	r21, 0x00	; 0
     3fa:	68 e8       	ldi	r22, 0x88	; 136
     3fc:	78 e0       	ldi	r23, 0x08	; 8
     3fe:	cf 01       	movw	r24, r30
     400:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
		SYNC(self->gui, &render, NULL);
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	50 e0       	ldi	r21, 0x00	; 0
     408:	66 ea       	ldi	r22, 0xA6	; 166
     40a:	70 e0       	ldi	r23, 0x00	; 0
     40c:	8c 81       	ldd	r24, Y+4	; 0x04
     40e:	9d 81       	ldd	r25, Y+5	; 0x05
     410:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
		SEND(MSEC(STEPDELAY), MSEC(STEPDELAY + 10), self, &cycleDown, NULL);
     414:	c1 2c       	mov	r12, r1
     416:	d1 2c       	mov	r13, r1
     418:	0f 2e       	mov	r0, r31
     41a:	fc ed       	ldi	r31, 0xDC	; 220
     41c:	ef 2e       	mov	r14, r31
     41e:	f1 e0       	ldi	r31, 0x01	; 1
     420:	ff 2e       	mov	r15, r31
     422:	f0 2d       	mov	r31, r0
     424:	8e 01       	movw	r16, r28
     426:	2d e6       	ldi	r18, 0x6D	; 109
     428:	3d e0       	ldi	r19, 0x0D	; 13
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	65 e3       	ldi	r22, 0x35	; 53
     430:	7c e0       	ldi	r23, 0x0C	; 12
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 95 12 	call	0x252a	; 0x252a <async>
     43a:	02 c0       	rjmp	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
		
	}
	else{
		self->state = 0;
     43c:	1f 82       	std	Y+7, r1	; 0x07
     43e:	1e 82       	std	Y+6, r1	; 0x06
	}
	
}
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	ff 90       	pop	r15
     44a:	ef 90       	pop	r14
     44c:	df 90       	pop	r13
     44e:	cf 90       	pop	r12
     450:	08 95       	ret

00000452 <parseHold>:


// Checks the state of the joystick and starts a cycle up/down after 
// a given delay time
void parseHold(Hold* self){
     452:	cf 92       	push	r12
     454:	df 92       	push	r13
     456:	ef 92       	push	r14
     458:	ff 92       	push	r15
     45a:	0f 93       	push	r16
     45c:	1f 93       	push	r17
	
	if(self->state) return;
     45e:	fc 01       	movw	r30, r24
     460:	26 81       	ldd	r18, Z+6	; 0x06
     462:	37 81       	ldd	r19, Z+7	; 0x07
     464:	23 2b       	or	r18, r19
     466:	e1 f5       	brne	.+120    	; 0x4e0 <parseHold+0x8e>
     468:	8c 01       	movw	r16, r24
	
	switch (readJoystick()) {
     46a:	0e 94 96 02 	call	0x52c	; 0x52c <readJoystick>
     46e:	81 30       	cpi	r24, 0x01	; 1
     470:	91 05       	cpc	r25, r1
     472:	19 f0       	breq	.+6      	; 0x47a <parseHold+0x28>
     474:	02 97       	sbiw	r24, 0x02	; 2
     476:	c9 f0       	breq	.+50     	; 0x4aa <parseHold+0x58>
     478:	30 c0       	rjmp	.+96     	; 0x4da <parseHold+0x88>
		
		case 1:
			self->state = 1;
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	f8 01       	movw	r30, r16
     480:	97 83       	std	Z+7, r25	; 0x07
     482:	86 83       	std	Z+6, r24	; 0x06
			SEND(MSEC(DELAY), MSEC(DELAY + 10), self, &cycleUp, NULL);
     484:	c1 2c       	mov	r12, r1
     486:	d1 2c       	mov	r13, r1
     488:	0f 2e       	mov	r0, r31
     48a:	ff e8       	ldi	r31, 0x8F	; 143
     48c:	ef 2e       	mov	r14, r31
     48e:	f1 e0       	ldi	r31, 0x01	; 1
     490:	ff 2e       	mov	r15, r31
     492:	f0 2d       	mov	r31, r0
     494:	2a e4       	ldi	r18, 0x4A	; 74
     496:	3b e7       	ldi	r19, 0x7B	; 123
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	62 e1       	ldi	r22, 0x12	; 18
     49e:	7a e7       	ldi	r23, 0x7A	; 122
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 95 12 	call	0x252a	; 0x252a <async>
			break;
     4a8:	1b c0       	rjmp	.+54     	; 0x4e0 <parseHold+0x8e>
			
		case 2:
			self->state = 1;
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	f8 01       	movw	r30, r16
     4b0:	97 83       	std	Z+7, r25	; 0x07
     4b2:	86 83       	std	Z+6, r24	; 0x06
			SEND(MSEC(DELAY), MSEC(DELAY + 10), self, &cycleDown, NULL);
     4b4:	c1 2c       	mov	r12, r1
     4b6:	d1 2c       	mov	r13, r1
     4b8:	0f 2e       	mov	r0, r31
     4ba:	fc ed       	ldi	r31, 0xDC	; 220
     4bc:	ef 2e       	mov	r14, r31
     4be:	f1 e0       	ldi	r31, 0x01	; 1
     4c0:	ff 2e       	mov	r15, r31
     4c2:	f0 2d       	mov	r31, r0
     4c4:	2a e4       	ldi	r18, 0x4A	; 74
     4c6:	3b e7       	ldi	r19, 0x7B	; 123
     4c8:	40 e0       	ldi	r20, 0x00	; 0
     4ca:	50 e0       	ldi	r21, 0x00	; 0
     4cc:	62 e1       	ldi	r22, 0x12	; 18
     4ce:	7a e7       	ldi	r23, 0x7A	; 122
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 95 12 	call	0x252a	; 0x252a <async>
			break;
     4d8:	03 c0       	rjmp	.+6      	; 0x4e0 <parseHold+0x8e>
		
		default:
			self->state = 0;
     4da:	f8 01       	movw	r30, r16
     4dc:	17 82       	std	Z+7, r1	; 0x07
     4de:	16 82       	std	Z+6, r1	; 0x06
			break;
		
	}
	
}
     4e0:	1f 91       	pop	r17
     4e2:	0f 91       	pop	r16
     4e4:	ff 90       	pop	r15
     4e6:	ef 90       	pop	r14
     4e8:	df 90       	pop	r13
     4ea:	cf 90       	pop	r12
     4ec:	08 95       	ret

000004ee <initJoystick>:
void initJoystick() {


	//upp = b6, down = b7, center = b4, left = e2, right = e3
	
	DDRB = DDRB & ~((1 << 7) | (1 << 6) |(1 << 4));
     4ee:	84 b1       	in	r24, 0x04	; 4
     4f0:	8f 72       	andi	r24, 0x2F	; 47
     4f2:	84 b9       	out	0x04, r24	; 4
	DDRE = DDRE & ~( ( 1 << 2) | (1 << 3));
     4f4:	8d b1       	in	r24, 0x0d	; 13
     4f6:	83 7f       	andi	r24, 0xF3	; 243
     4f8:	8d b9       	out	0x0d, r24	; 13
	PORTB = PORTB | ((1 << 7)| (1 << 6 ) | (1 << 4));
     4fa:	85 b1       	in	r24, 0x05	; 5
     4fc:	80 6d       	ori	r24, 0xD0	; 208
     4fe:	85 b9       	out	0x05, r24	; 5
	PORTE = PORTE | ( (1 << 2) | ( 1 << 3));
     500:	8e b1       	in	r24, 0x0e	; 14
     502:	8c 60       	ori	r24, 0x0C	; 12
     504:	8e b9       	out	0x0e, r24	; 14
	
	
	// Enables external interrupt and sets the interrupt to PCINT15..8
	EIMSK |= (1 << PCIE1) | (1 << PCIE0);
     506:	8d b3       	in	r24, 0x1d	; 29
     508:	80 6c       	ori	r24, 0xC0	; 192
     50a:	8d bb       	out	0x1d, r24	; 29
	
	// Enables interrupt on PCINT15
	PCMSK1 |= (1 << PCINT15)|(1 << PCINT14)|(1 << PCINT12);
     50c:	ec e6       	ldi	r30, 0x6C	; 108
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	80 6d       	ori	r24, 0xD0	; 208
     514:	80 83       	st	Z, r24
	PCMSK0 |= (1 << PCINT3)|(1 << PCINT2);
     516:	eb e6       	ldi	r30, 0x6B	; 107
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	80 81       	ld	r24, Z
     51c:	8c 60       	ori	r24, 0x0C	; 12
     51e:	80 83       	st	Z, r24
	
	// Sets interrupt control to generate an interruption on a falling edge
	EICRA |= (1 << ISC01);
     520:	e9 e6       	ldi	r30, 0x69	; 105
     522:	f0 e0       	ldi	r31, 0x00	; 0
     524:	80 81       	ld	r24, Z
     526:	82 60       	ori	r24, 0x02	; 2
     528:	80 83       	st	Z, r24
     52a:	08 95       	ret

0000052c <readJoystick>:

// 0 = Center Upp, 1 = Upp, 2 = Down, 3 = Left, 4 = Right, 5 = Center Down
int readJoystick()  {

	//Right
	if(~PINE & (1 << 3)){
     52c:	63 9b       	sbis	0x0c, 3	; 12
     52e:	13 c0       	rjmp	.+38     	; 0x556 <readJoystick+0x2a>
		return 4;
	}

	//Left
	if(~PINE & (1 << 2)){
     530:	62 9b       	sbis	0x0c, 2	; 12
     532:	14 c0       	rjmp	.+40     	; 0x55c <readJoystick+0x30>
		return 3;
	}

	//Center Down
	if(~PINB & ( 1 << 4)){
     534:	1c 9b       	sbis	0x03, 4	; 3
     536:	15 c0       	rjmp	.+42     	; 0x562 <readJoystick+0x36>
		return 5;
	}
		
	//Upp
	if(~PINB & ( 1 << 6)){
     538:	1e 9b       	sbis	0x03, 6	; 3
     53a:	16 c0       	rjmp	.+44     	; 0x568 <readJoystick+0x3c>
		return 1;
	}

	//Down
	if(~PINB & ( 1 << 7 )){
     53c:	83 b1       	in	r24, 0x03	; 3
		return 2;
	}
	//Center
	return 0;
     53e:	08 2e       	mov	r0, r24
     540:	00 0c       	add	r0, r0
     542:	99 0b       	sbc	r25, r25
     544:	80 95       	com	r24
     546:	90 95       	com	r25
     548:	88 27       	eor	r24, r24
     54a:	99 0f       	add	r25, r25
     54c:	88 1f       	adc	r24, r24
     54e:	99 27       	eor	r25, r25
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	08 95       	ret
// 0 = Center Upp, 1 = Upp, 2 = Down, 3 = Left, 4 = Right, 5 = Center Down
int readJoystick()  {

	//Right
	if(~PINE & (1 << 3)){
		return 4;
     556:	84 e0       	ldi	r24, 0x04	; 4
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	08 95       	ret
	}

	//Left
	if(~PINE & (1 << 2)){
		return 3;
     55c:	83 e0       	ldi	r24, 0x03	; 3
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	08 95       	ret
	}

	//Center Down
	if(~PINB & ( 1 << 4)){
		return 5;
     562:	85 e0       	ldi	r24, 0x05	; 5
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	08 95       	ret
	}
		
	//Upp
	if(~PINB & ( 1 << 6)){
		return 1;
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	90 e0       	ldi	r25, 0x00	; 0
		return 2;
	}
	//Center
	return 0;

     56c:	08 95       	ret

0000056e <LCDWritePackage>:
	LCDDR13 = 0x00;
	
	LCDDR15 = 0x00;
	LCDDR16 = 0x00;
	LCDDR17 = 0x00;
	LCDDR18 = 0x00;
     56e:	cf 92       	push	r12
     570:	df 92       	push	r13
     572:	ef 92       	push	r14
     574:	ff 92       	push	r15
     576:	0f 93       	push	r16
     578:	1f 93       	push	r17
     57a:	99 23       	and	r25, r25
     57c:	0c f4       	brge	.+2      	; 0x580 <LCDWritePackage+0x12>
     57e:	f7 c1       	rjmp	.+1006   	; 0x96e <LCDWritePackage+0x400>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	91 05       	cpc	r25, r1
     584:	8c f4       	brge	.+34     	; 0x5a8 <LCDWritePackage+0x3a>
     586:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     58a:	01 97       	sbiw	r24, 0x01	; 1
     58c:	09 f0       	breq	.+2      	; 0x590 <LCDWritePackage+0x22>
     58e:	9b c0       	rjmp	.+310    	; 0x6c6 <LCDWritePackage+0x158>
     590:	48 c0       	rjmp	.+144    	; 0x622 <LCDWritePackage+0xb4>
     592:	04 c0       	rjmp	.+8      	; 0x59c <LCDWritePackage+0x2e>
     594:	00 0f       	add	r16, r16
     596:	11 1f       	adc	r17, r17
     598:	22 1f       	adc	r18, r18
     59a:	33 1f       	adc	r19, r19
     59c:	9a 95       	dec	r25
     59e:	d2 f7       	brpl	.-12     	; 0x594 <LCDWritePackage+0x26>
     5a0:	08 2b       	or	r16, r24
     5a2:	00 93 fb 00 	sts	0x00FB, r16	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     5a6:	e3 c1       	rjmp	.+966    	; 0x96e <LCDWritePackage+0x400>
     5a8:	84 30       	cpi	r24, 0x04	; 4
     5aa:	91 05       	cpc	r25, r1
     5ac:	8c f4       	brge	.+34     	; 0x5d0 <LCDWritePackage+0x62>
     5ae:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     5b2:	03 97       	sbiw	r24, 0x03	; 3
     5b4:	09 f0       	breq	.+2      	; 0x5b8 <LCDWritePackage+0x4a>
     5b6:	9f c0       	rjmp	.+318    	; 0x6f6 <LCDWritePackage+0x188>
     5b8:	b6 c0       	rjmp	.+364    	; 0x726 <LCDWritePackage+0x1b8>
     5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <LCDWritePackage+0x56>
     5bc:	00 0f       	add	r16, r16
     5be:	11 1f       	adc	r17, r17
     5c0:	22 1f       	adc	r18, r18
     5c2:	33 1f       	adc	r19, r19
     5c4:	9a 95       	dec	r25
     5c6:	d2 f7       	brpl	.-12     	; 0x5bc <LCDWritePackage+0x4e>
     5c8:	08 2b       	or	r16, r24
     5ca:	00 93 fc 00 	sts	0x00FC, r16	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     5ce:	cf c1       	rjmp	.+926    	; 0x96e <LCDWritePackage+0x400>
     5d0:	86 30       	cpi	r24, 0x06	; 6
     5d2:	91 05       	cpc	r25, r1
     5d4:	8c f4       	brge	.+34     	; 0x5f8 <LCDWritePackage+0x8a>
     5d6:	e0 91 ee 00 	lds	r30, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     5da:	05 97       	sbiw	r24, 0x05	; 5
     5dc:	09 f0       	breq	.+2      	; 0x5e0 <LCDWritePackage+0x72>
     5de:	f5 c0       	rjmp	.+490    	; 0x7ca <LCDWritePackage+0x25c>
     5e0:	0c c1       	rjmp	.+536    	; 0x7fa <LCDWritePackage+0x28c>
     5e2:	04 c0       	rjmp	.+8      	; 0x5ec <LCDWritePackage+0x7e>
     5e4:	00 0f       	add	r16, r16
     5e6:	11 1f       	adc	r17, r17
     5e8:	22 1f       	adc	r18, r18
     5ea:	33 1f       	adc	r19, r19
     5ec:	9a 95       	dec	r25
     5ee:	d2 f7       	brpl	.-12     	; 0x5e4 <LCDWritePackage+0x76>
     5f0:	08 2b       	or	r16, r24
     5f2:	00 93 fd 00 	sts	0x00FD, r16	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     5f6:	bb c1       	rjmp	.+886    	; 0x96e <LCDWritePackage+0x400>
     5f8:	88 30       	cpi	r24, 0x08	; 8
     5fa:	91 05       	cpc	r25, r1
     5fc:	0c f0       	brlt	.+2      	; 0x600 <LCDWritePackage+0x92>
     5fe:	b7 c1       	rjmp	.+878    	; 0x96e <LCDWritePackage+0x400>
     600:	e0 91 ef 00 	lds	r30, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     604:	07 97       	sbiw	r24, 0x07	; 7
     606:	09 f0       	breq	.+2      	; 0x60a <LCDWritePackage+0x9c>
     608:	4a c1       	rjmp	.+660    	; 0x89e <LCDWritePackage+0x330>
     60a:	61 c1       	rjmp	.+706    	; 0x8ce <LCDWritePackage+0x360>
     60c:	04 c0       	rjmp	.+8      	; 0x616 <LCDWritePackage+0xa8>
     60e:	00 0f       	add	r16, r16
     610:	11 1f       	adc	r17, r17
     612:	22 1f       	adc	r18, r18
     614:	33 1f       	adc	r19, r19
     616:	9a 95       	dec	r25
     618:	d2 f7       	brpl	.-12     	; 0x60e <LCDWritePackage+0xa0>
     61a:	08 2b       	or	r16, r24
     61c:	00 93 fe 00 	sts	0x00FE, r16	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     620:	a6 c1       	rjmp	.+844    	; 0x96e <LCDWritePackage+0x400>
     622:	9e 2f       	mov	r25, r30
     624:	9f 70       	andi	r25, 0x0F	; 15
     626:	6b 01       	movw	r12, r22
     628:	e1 2c       	mov	r14, r1
     62a:	f1 2c       	mov	r15, r1
     62c:	cc 0c       	add	r12, r12
     62e:	dd 1c       	adc	r13, r13
     630:	ee 1c       	adc	r14, r14
     632:	ff 1c       	adc	r15, r15
     634:	cc 0c       	add	r12, r12
     636:	dd 1c       	adc	r13, r13
     638:	ee 1c       	adc	r14, r14
     63a:	ff 1c       	adc	r15, r15
     63c:	cc 0c       	add	r12, r12
     63e:	dd 1c       	adc	r13, r13
     640:	ee 1c       	adc	r14, r14
     642:	ff 1c       	adc	r15, r15
     644:	cc 0c       	add	r12, r12
     646:	dd 1c       	adc	r13, r13
     648:	ee 1c       	adc	r14, r14
     64a:	ff 1c       	adc	r15, r15
     64c:	e9 2f       	mov	r30, r25
     64e:	ec 29       	or	r30, r12
     650:	e0 93 ec 00 	sts	0x00EC, r30	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     654:	e1 ef       	ldi	r30, 0xF1	; 241
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	8f 70       	andi	r24, 0x0F	; 15
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	44 0f       	add	r20, r20
     662:	55 1f       	adc	r21, r21
     664:	66 1f       	adc	r22, r22
     666:	77 1f       	adc	r23, r23
     668:	44 0f       	add	r20, r20
     66a:	55 1f       	adc	r21, r21
     66c:	66 1f       	adc	r22, r22
     66e:	77 1f       	adc	r23, r23
     670:	44 0f       	add	r20, r20
     672:	55 1f       	adc	r21, r21
     674:	66 1f       	adc	r22, r22
     676:	77 1f       	adc	r23, r23
     678:	44 0f       	add	r20, r20
     67a:	55 1f       	adc	r21, r21
     67c:	66 1f       	adc	r22, r22
     67e:	77 1f       	adc	r23, r23
     680:	48 2b       	or	r20, r24
     682:	40 83       	st	Z, r20
     684:	e6 ef       	ldi	r30, 0xF6	; 246
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	80 81       	ld	r24, Z
     68a:	48 2f       	mov	r20, r24
     68c:	4f 70       	andi	r20, 0x0F	; 15
     68e:	c9 01       	movw	r24, r18
     690:	a0 e0       	ldi	r26, 0x00	; 0
     692:	b0 e0       	ldi	r27, 0x00	; 0
     694:	88 0f       	add	r24, r24
     696:	99 1f       	adc	r25, r25
     698:	aa 1f       	adc	r26, r26
     69a:	bb 1f       	adc	r27, r27
     69c:	88 0f       	add	r24, r24
     69e:	99 1f       	adc	r25, r25
     6a0:	aa 1f       	adc	r26, r26
     6a2:	bb 1f       	adc	r27, r27
     6a4:	88 0f       	add	r24, r24
     6a6:	99 1f       	adc	r25, r25
     6a8:	aa 1f       	adc	r26, r26
     6aa:	bb 1f       	adc	r27, r27
     6ac:	88 0f       	add	r24, r24
     6ae:	99 1f       	adc	r25, r25
     6b0:	aa 1f       	adc	r26, r26
     6b2:	bb 1f       	adc	r27, r27
     6b4:	84 2b       	or	r24, r20
     6b6:	80 83       	st	Z, r24
     6b8:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     6bc:	8f 70       	andi	r24, 0x0F	; 15
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	94 e0       	ldi	r25, 0x04	; 4
     6c4:	66 cf       	rjmp	.-308    	; 0x592 <LCDWritePackage+0x24>
     6c6:	8e 2f       	mov	r24, r30
     6c8:	80 7f       	andi	r24, 0xF0	; 240
     6ca:	86 2b       	or	r24, r22
     6cc:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     6d0:	e1 ef       	ldi	r30, 0xF1	; 241
     6d2:	f0 e0       	ldi	r31, 0x00	; 0
     6d4:	80 81       	ld	r24, Z
     6d6:	80 7f       	andi	r24, 0xF0	; 240
     6d8:	48 2b       	or	r20, r24
     6da:	40 83       	st	Z, r20
     6dc:	e6 ef       	ldi	r30, 0xF6	; 246
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	80 81       	ld	r24, Z
     6e2:	80 7f       	andi	r24, 0xF0	; 240
     6e4:	82 2b       	or	r24, r18
     6e6:	80 83       	st	Z, r24
     6e8:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     6ec:	80 7f       	andi	r24, 0xF0	; 240
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	4e cf       	rjmp	.-356    	; 0x592 <LCDWritePackage+0x24>
     6f6:	8e 2f       	mov	r24, r30
     6f8:	80 7f       	andi	r24, 0xF0	; 240
     6fa:	86 2b       	or	r24, r22
     6fc:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     700:	e2 ef       	ldi	r30, 0xF2	; 242
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 81       	ld	r24, Z
     706:	80 7f       	andi	r24, 0xF0	; 240
     708:	48 2b       	or	r20, r24
     70a:	40 83       	st	Z, r20
     70c:	e7 ef       	ldi	r30, 0xF7	; 247
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	80 81       	ld	r24, Z
     712:	80 7f       	andi	r24, 0xF0	; 240
     714:	82 2b       	or	r24, r18
     716:	80 83       	st	Z, r24
     718:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     71c:	80 7f       	andi	r24, 0xF0	; 240
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	4a cf       	rjmp	.-364    	; 0x5ba <LCDWritePackage+0x4c>
     726:	9e 2f       	mov	r25, r30
     728:	9f 70       	andi	r25, 0x0F	; 15
     72a:	6b 01       	movw	r12, r22
     72c:	e1 2c       	mov	r14, r1
     72e:	f1 2c       	mov	r15, r1
     730:	cc 0c       	add	r12, r12
     732:	dd 1c       	adc	r13, r13
     734:	ee 1c       	adc	r14, r14
     736:	ff 1c       	adc	r15, r15
     738:	cc 0c       	add	r12, r12
     73a:	dd 1c       	adc	r13, r13
     73c:	ee 1c       	adc	r14, r14
     73e:	ff 1c       	adc	r15, r15
     740:	cc 0c       	add	r12, r12
     742:	dd 1c       	adc	r13, r13
     744:	ee 1c       	adc	r14, r14
     746:	ff 1c       	adc	r15, r15
     748:	cc 0c       	add	r12, r12
     74a:	dd 1c       	adc	r13, r13
     74c:	ee 1c       	adc	r14, r14
     74e:	ff 1c       	adc	r15, r15
     750:	e9 2f       	mov	r30, r25
     752:	ec 29       	or	r30, r12
     754:	e0 93 ed 00 	sts	0x00ED, r30	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     758:	e2 ef       	ldi	r30, 0xF2	; 242
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	80 81       	ld	r24, Z
     75e:	8f 70       	andi	r24, 0x0F	; 15
     760:	60 e0       	ldi	r22, 0x00	; 0
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	44 0f       	add	r20, r20
     766:	55 1f       	adc	r21, r21
     768:	66 1f       	adc	r22, r22
     76a:	77 1f       	adc	r23, r23
     76c:	44 0f       	add	r20, r20
     76e:	55 1f       	adc	r21, r21
     770:	66 1f       	adc	r22, r22
     772:	77 1f       	adc	r23, r23
     774:	44 0f       	add	r20, r20
     776:	55 1f       	adc	r21, r21
     778:	66 1f       	adc	r22, r22
     77a:	77 1f       	adc	r23, r23
     77c:	44 0f       	add	r20, r20
     77e:	55 1f       	adc	r21, r21
     780:	66 1f       	adc	r22, r22
     782:	77 1f       	adc	r23, r23
     784:	48 2b       	or	r20, r24
     786:	40 83       	st	Z, r20
     788:	e7 ef       	ldi	r30, 0xF7	; 247
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	80 81       	ld	r24, Z
     78e:	48 2f       	mov	r20, r24
     790:	4f 70       	andi	r20, 0x0F	; 15
     792:	c9 01       	movw	r24, r18
     794:	a0 e0       	ldi	r26, 0x00	; 0
     796:	b0 e0       	ldi	r27, 0x00	; 0
     798:	88 0f       	add	r24, r24
     79a:	99 1f       	adc	r25, r25
     79c:	aa 1f       	adc	r26, r26
     79e:	bb 1f       	adc	r27, r27
     7a0:	88 0f       	add	r24, r24
     7a2:	99 1f       	adc	r25, r25
     7a4:	aa 1f       	adc	r26, r26
     7a6:	bb 1f       	adc	r27, r27
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	aa 1f       	adc	r26, r26
     7ae:	bb 1f       	adc	r27, r27
     7b0:	88 0f       	add	r24, r24
     7b2:	99 1f       	adc	r25, r25
     7b4:	aa 1f       	adc	r26, r26
     7b6:	bb 1f       	adc	r27, r27
     7b8:	84 2b       	or	r24, r20
     7ba:	80 83       	st	Z, r24
     7bc:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     7c0:	8f 70       	andi	r24, 0x0F	; 15
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	94 e0       	ldi	r25, 0x04	; 4
     7c8:	f8 ce       	rjmp	.-528    	; 0x5ba <LCDWritePackage+0x4c>
     7ca:	8e 2f       	mov	r24, r30
     7cc:	80 7f       	andi	r24, 0xF0	; 240
     7ce:	86 2b       	or	r24, r22
     7d0:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     7d4:	e3 ef       	ldi	r30, 0xF3	; 243
     7d6:	f0 e0       	ldi	r31, 0x00	; 0
     7d8:	80 81       	ld	r24, Z
     7da:	80 7f       	andi	r24, 0xF0	; 240
     7dc:	48 2b       	or	r20, r24
     7de:	40 83       	st	Z, r20
     7e0:	e8 ef       	ldi	r30, 0xF8	; 248
     7e2:	f0 e0       	ldi	r31, 0x00	; 0
     7e4:	80 81       	ld	r24, Z
     7e6:	80 7f       	andi	r24, 0xF0	; 240
     7e8:	82 2b       	or	r24, r18
     7ea:	80 83       	st	Z, r24
     7ec:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     7f0:	80 7f       	andi	r24, 0xF0	; 240
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	f4 ce       	rjmp	.-536    	; 0x5e2 <LCDWritePackage+0x74>
     7fa:	6b 01       	movw	r12, r22
     7fc:	e1 2c       	mov	r14, r1
     7fe:	f1 2c       	mov	r15, r1
     800:	cc 0c       	add	r12, r12
     802:	dd 1c       	adc	r13, r13
     804:	ee 1c       	adc	r14, r14
     806:	ff 1c       	adc	r15, r15
     808:	cc 0c       	add	r12, r12
     80a:	dd 1c       	adc	r13, r13
     80c:	ee 1c       	adc	r14, r14
     80e:	ff 1c       	adc	r15, r15
     810:	cc 0c       	add	r12, r12
     812:	dd 1c       	adc	r13, r13
     814:	ee 1c       	adc	r14, r14
     816:	ff 1c       	adc	r15, r15
     818:	cc 0c       	add	r12, r12
     81a:	dd 1c       	adc	r13, r13
     81c:	ee 1c       	adc	r14, r14
     81e:	ff 1c       	adc	r15, r15
     820:	9e 2f       	mov	r25, r30
     822:	9f 70       	andi	r25, 0x0F	; 15
     824:	e9 2f       	mov	r30, r25
     826:	ec 29       	or	r30, r12
     828:	e0 93 ee 00 	sts	0x00EE, r30	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     82c:	e3 ef       	ldi	r30, 0xF3	; 243
     82e:	f0 e0       	ldi	r31, 0x00	; 0
     830:	80 81       	ld	r24, Z
     832:	60 e0       	ldi	r22, 0x00	; 0
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	44 0f       	add	r20, r20
     838:	55 1f       	adc	r21, r21
     83a:	66 1f       	adc	r22, r22
     83c:	77 1f       	adc	r23, r23
     83e:	44 0f       	add	r20, r20
     840:	55 1f       	adc	r21, r21
     842:	66 1f       	adc	r22, r22
     844:	77 1f       	adc	r23, r23
     846:	44 0f       	add	r20, r20
     848:	55 1f       	adc	r21, r21
     84a:	66 1f       	adc	r22, r22
     84c:	77 1f       	adc	r23, r23
     84e:	44 0f       	add	r20, r20
     850:	55 1f       	adc	r21, r21
     852:	66 1f       	adc	r22, r22
     854:	77 1f       	adc	r23, r23
     856:	8f 70       	andi	r24, 0x0F	; 15
     858:	48 2b       	or	r20, r24
     85a:	40 83       	st	Z, r20
     85c:	e8 ef       	ldi	r30, 0xF8	; 248
     85e:	f0 e0       	ldi	r31, 0x00	; 0
     860:	40 81       	ld	r20, Z
     862:	c9 01       	movw	r24, r18
     864:	a0 e0       	ldi	r26, 0x00	; 0
     866:	b0 e0       	ldi	r27, 0x00	; 0
     868:	88 0f       	add	r24, r24
     86a:	99 1f       	adc	r25, r25
     86c:	aa 1f       	adc	r26, r26
     86e:	bb 1f       	adc	r27, r27
     870:	88 0f       	add	r24, r24
     872:	99 1f       	adc	r25, r25
     874:	aa 1f       	adc	r26, r26
     876:	bb 1f       	adc	r27, r27
     878:	88 0f       	add	r24, r24
     87a:	99 1f       	adc	r25, r25
     87c:	aa 1f       	adc	r26, r26
     87e:	bb 1f       	adc	r27, r27
     880:	88 0f       	add	r24, r24
     882:	99 1f       	adc	r25, r25
     884:	aa 1f       	adc	r26, r26
     886:	bb 1f       	adc	r27, r27
     888:	24 2f       	mov	r18, r20
     88a:	2f 70       	andi	r18, 0x0F	; 15
     88c:	82 2b       	or	r24, r18
     88e:	80 83       	st	Z, r24
     890:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     894:	8f 70       	andi	r24, 0x0F	; 15
     896:	20 e0       	ldi	r18, 0x00	; 0
     898:	30 e0       	ldi	r19, 0x00	; 0
     89a:	94 e0       	ldi	r25, 0x04	; 4
     89c:	a2 ce       	rjmp	.-700    	; 0x5e2 <LCDWritePackage+0x74>
     89e:	8e 2f       	mov	r24, r30
     8a0:	80 7f       	andi	r24, 0xF0	; 240
     8a2:	86 2b       	or	r24, r22
     8a4:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     8a8:	e3 ef       	ldi	r30, 0xF3	; 243
     8aa:	f0 e0       	ldi	r31, 0x00	; 0
     8ac:	80 81       	ld	r24, Z
     8ae:	80 7f       	andi	r24, 0xF0	; 240
     8b0:	48 2b       	or	r20, r24
     8b2:	40 83       	st	Z, r20
     8b4:	e9 ef       	ldi	r30, 0xF9	; 249
     8b6:	f0 e0       	ldi	r31, 0x00	; 0
     8b8:	80 81       	ld	r24, Z
     8ba:	80 7f       	andi	r24, 0xF0	; 240
     8bc:	82 2b       	or	r24, r18
     8be:	80 83       	st	Z, r24
     8c0:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     8c4:	80 7f       	andi	r24, 0xF0	; 240
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	9f ce       	rjmp	.-706    	; 0x60c <LCDWritePackage+0x9e>
     8ce:	cb 01       	movw	r24, r22
     8d0:	a0 e0       	ldi	r26, 0x00	; 0
     8d2:	b0 e0       	ldi	r27, 0x00	; 0
     8d4:	88 0f       	add	r24, r24
     8d6:	99 1f       	adc	r25, r25
     8d8:	aa 1f       	adc	r26, r26
     8da:	bb 1f       	adc	r27, r27
     8dc:	88 0f       	add	r24, r24
     8de:	99 1f       	adc	r25, r25
     8e0:	aa 1f       	adc	r26, r26
     8e2:	bb 1f       	adc	r27, r27
     8e4:	88 0f       	add	r24, r24
     8e6:	99 1f       	adc	r25, r25
     8e8:	aa 1f       	adc	r26, r26
     8ea:	bb 1f       	adc	r27, r27
     8ec:	88 0f       	add	r24, r24
     8ee:	99 1f       	adc	r25, r25
     8f0:	aa 1f       	adc	r26, r26
     8f2:	bb 1f       	adc	r27, r27
     8f4:	ef 70       	andi	r30, 0x0F	; 15
     8f6:	8e 2b       	or	r24, r30
     8f8:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     8fc:	e3 ef       	ldi	r30, 0xF3	; 243
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	80 81       	ld	r24, Z
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	44 0f       	add	r20, r20
     908:	55 1f       	adc	r21, r21
     90a:	66 1f       	adc	r22, r22
     90c:	77 1f       	adc	r23, r23
     90e:	44 0f       	add	r20, r20
     910:	55 1f       	adc	r21, r21
     912:	66 1f       	adc	r22, r22
     914:	77 1f       	adc	r23, r23
     916:	44 0f       	add	r20, r20
     918:	55 1f       	adc	r21, r21
     91a:	66 1f       	adc	r22, r22
     91c:	77 1f       	adc	r23, r23
     91e:	44 0f       	add	r20, r20
     920:	55 1f       	adc	r21, r21
     922:	66 1f       	adc	r22, r22
     924:	77 1f       	adc	r23, r23
     926:	8f 70       	andi	r24, 0x0F	; 15
     928:	48 2b       	or	r20, r24
     92a:	40 83       	st	Z, r20
     92c:	e9 ef       	ldi	r30, 0xF9	; 249
     92e:	f0 e0       	ldi	r31, 0x00	; 0
     930:	40 81       	ld	r20, Z
     932:	c9 01       	movw	r24, r18
     934:	a0 e0       	ldi	r26, 0x00	; 0
     936:	b0 e0       	ldi	r27, 0x00	; 0
     938:	88 0f       	add	r24, r24
     93a:	99 1f       	adc	r25, r25
     93c:	aa 1f       	adc	r26, r26
     93e:	bb 1f       	adc	r27, r27
     940:	88 0f       	add	r24, r24
     942:	99 1f       	adc	r25, r25
     944:	aa 1f       	adc	r26, r26
     946:	bb 1f       	adc	r27, r27
     948:	88 0f       	add	r24, r24
     94a:	99 1f       	adc	r25, r25
     94c:	aa 1f       	adc	r26, r26
     94e:	bb 1f       	adc	r27, r27
     950:	88 0f       	add	r24, r24
     952:	99 1f       	adc	r25, r25
     954:	aa 1f       	adc	r26, r26
     956:	bb 1f       	adc	r27, r27
     958:	24 2f       	mov	r18, r20
     95a:	2f 70       	andi	r18, 0x0F	; 15
     95c:	82 2b       	or	r24, r18
     95e:	80 83       	st	Z, r24
     960:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     964:	8f 70       	andi	r24, 0x0F	; 15
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	30 e0       	ldi	r19, 0x00	; 0
     96a:	94 e0       	ldi	r25, 0x04	; 4
     96c:	4f ce       	rjmp	.-866    	; 0x60c <LCDWritePackage+0x9e>
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	08 95       	ret

0000097c <writeChar>:
     97c:	0f 93       	push	r16
     97e:	1f 93       	push	r17
     980:	66 30       	cpi	r22, 0x06	; 6
     982:	71 05       	cpc	r23, r1
     984:	08 f0       	brcs	.+2      	; 0x988 <writeChar+0xc>
     986:	c8 c1       	rjmp	.+912    	; 0xd18 <writeChar+0x39c>
     988:	db 01       	movw	r26, r22
     98a:	48 2f       	mov	r20, r24
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	fa 01       	movw	r30, r20
     990:	f0 97       	sbiw	r30, 0x30	; 48
     992:	eb 32       	cpi	r30, 0x2B	; 43
     994:	f1 05       	cpc	r31, r1
     996:	08 f0       	brcs	.+2      	; 0x99a <writeChar+0x1e>
     998:	b4 c1       	rjmp	.+872    	; 0xd02 <writeChar+0x386>
     99a:	e2 5d       	subi	r30, 0xD2	; 210
     99c:	ff 4f       	sbci	r31, 0xFF	; 255
     99e:	0c 94 eb 14 	jmp	0x29d6	; 0x29d6 <__tablejump2__>
     9a2:	05 e0       	ldi	r16, 0x05	; 5
     9a4:	10 e0       	ldi	r17, 0x00	; 0
     9a6:	25 e0       	ldi	r18, 0x05	; 5
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	45 e0       	ldi	r20, 0x05	; 5
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	69 e0       	ldi	r22, 0x09	; 9
     9b0:	70 e0       	ldi	r23, 0x00	; 0
     9b2:	cd 01       	movw	r24, r26
     9b4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     9b8:	af c1       	rjmp	.+862    	; 0xd18 <writeChar+0x39c>
     9ba:	00 e0       	ldi	r16, 0x00	; 0
     9bc:	10 e0       	ldi	r17, 0x00	; 0
     9be:	21 e0       	ldi	r18, 0x01	; 1
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	41 e0       	ldi	r20, 0x01	; 1
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	60 e0       	ldi	r22, 0x00	; 0
     9c8:	70 e0       	ldi	r23, 0x00	; 0
     9ca:	cd 01       	movw	r24, r26
     9cc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     9d0:	a3 c1       	rjmp	.+838    	; 0xd18 <writeChar+0x39c>
     9d2:	05 e0       	ldi	r16, 0x05	; 5
     9d4:	10 e0       	ldi	r17, 0x00	; 0
     9d6:	28 e0       	ldi	r18, 0x08	; 8
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	41 e0       	ldi	r20, 0x01	; 1
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	61 e0       	ldi	r22, 0x01	; 1
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	cd 01       	movw	r24, r26
     9e4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     9e8:	97 c1       	rjmp	.+814    	; 0xd18 <writeChar+0x39c>
     9ea:	01 e0       	ldi	r16, 0x01	; 1
     9ec:	10 e0       	ldi	r17, 0x00	; 0
     9ee:	2b e0       	ldi	r18, 0x0B	; 11
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	41 e0       	ldi	r20, 0x01	; 1
     9f4:	50 e0       	ldi	r21, 0x00	; 0
     9f6:	61 e0       	ldi	r22, 0x01	; 1
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	cd 01       	movw	r24, r26
     9fc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a00:	8b c1       	rjmp	.+790    	; 0xd18 <writeChar+0x39c>
     a02:	00 e0       	ldi	r16, 0x00	; 0
     a04:	10 e0       	ldi	r17, 0x00	; 0
     a06:	2b e0       	ldi	r18, 0x0B	; 11
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	45 e0       	ldi	r20, 0x05	; 5
     a0c:	50 e0       	ldi	r21, 0x00	; 0
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	cd 01       	movw	r24, r26
     a14:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a18:	7f c1       	rjmp	.+766    	; 0xd18 <writeChar+0x39c>
     a1a:	01 e0       	ldi	r16, 0x01	; 1
     a1c:	10 e0       	ldi	r17, 0x00	; 0
     a1e:	2b e0       	ldi	r18, 0x0B	; 11
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	44 e0       	ldi	r20, 0x04	; 4
     a24:	50 e0       	ldi	r21, 0x00	; 0
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	cd 01       	movw	r24, r26
     a2c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a30:	73 c1       	rjmp	.+742    	; 0xd18 <writeChar+0x39c>
     a32:	01 e0       	ldi	r16, 0x01	; 1
     a34:	10 e0       	ldi	r17, 0x00	; 0
     a36:	2f e0       	ldi	r18, 0x0F	; 15
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	44 e0       	ldi	r20, 0x04	; 4
     a3c:	50 e0       	ldi	r21, 0x00	; 0
     a3e:	61 e0       	ldi	r22, 0x01	; 1
     a40:	70 e0       	ldi	r23, 0x00	; 0
     a42:	cd 01       	movw	r24, r26
     a44:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a48:	67 c1       	rjmp	.+718    	; 0xd18 <writeChar+0x39c>
     a4a:	04 e0       	ldi	r16, 0x04	; 4
     a4c:	10 e0       	ldi	r17, 0x00	; 0
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e0       	ldi	r20, 0x00	; 0
     a54:	50 e0       	ldi	r21, 0x00	; 0
     a56:	69 e0       	ldi	r22, 0x09	; 9
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	cd 01       	movw	r24, r26
     a5c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a60:	5b c1       	rjmp	.+694    	; 0xd18 <writeChar+0x39c>
     a62:	01 e0       	ldi	r16, 0x01	; 1
     a64:	10 e0       	ldi	r17, 0x00	; 0
     a66:	2f e0       	ldi	r18, 0x0F	; 15
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	45 e0       	ldi	r20, 0x05	; 5
     a6c:	50 e0       	ldi	r21, 0x00	; 0
     a6e:	61 e0       	ldi	r22, 0x01	; 1
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	cd 01       	movw	r24, r26
     a74:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a78:	4f c1       	rjmp	.+670    	; 0xd18 <writeChar+0x39c>
     a7a:	01 e0       	ldi	r16, 0x01	; 1
     a7c:	10 e0       	ldi	r17, 0x00	; 0
     a7e:	2b e0       	ldi	r18, 0x0B	; 11
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	45 e0       	ldi	r20, 0x05	; 5
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	61 e0       	ldi	r22, 0x01	; 1
     a88:	70 e0       	ldi	r23, 0x00	; 0
     a8a:	cd 01       	movw	r24, r26
     a8c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     a90:	43 c1       	rjmp	.+646    	; 0xd18 <writeChar+0x39c>
     a92:	00 e0       	ldi	r16, 0x00	; 0
     a94:	10 e0       	ldi	r17, 0x00	; 0
     a96:	2f e0       	ldi	r18, 0x0F	; 15
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	45 e0       	ldi	r20, 0x05	; 5
     a9c:	50 e0       	ldi	r21, 0x00	; 0
     a9e:	61 e0       	ldi	r22, 0x01	; 1
     aa0:	70 e0       	ldi	r23, 0x00	; 0
     aa2:	cd 01       	movw	r24, r26
     aa4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     aa8:	37 c1       	rjmp	.+622    	; 0xd18 <writeChar+0x39c>
     aaa:	01 e0       	ldi	r16, 0x01	; 1
     aac:	10 e0       	ldi	r17, 0x00	; 0
     aae:	2f e0       	ldi	r18, 0x0F	; 15
     ab0:	30 e0       	ldi	r19, 0x00	; 0
     ab2:	45 e0       	ldi	r20, 0x05	; 5
     ab4:	50 e0       	ldi	r21, 0x00	; 0
     ab6:	61 e0       	ldi	r22, 0x01	; 1
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	cd 01       	movw	r24, r26
     abc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     ac0:	2b c1       	rjmp	.+598    	; 0xd18 <writeChar+0x39c>
     ac2:	01 e0       	ldi	r16, 0x01	; 1
     ac4:	10 e0       	ldi	r17, 0x00	; 0
     ac6:	24 e0       	ldi	r18, 0x04	; 4
     ac8:	30 e0       	ldi	r19, 0x00	; 0
     aca:	44 e0       	ldi	r20, 0x04	; 4
     acc:	50 e0       	ldi	r21, 0x00	; 0
     ace:	61 e0       	ldi	r22, 0x01	; 1
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	cd 01       	movw	r24, r26
     ad4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     ad8:	1f c1       	rjmp	.+574    	; 0xd18 <writeChar+0x39c>
     ada:	04 e0       	ldi	r16, 0x04	; 4
     adc:	10 e0       	ldi	r17, 0x00	; 0
     ade:	24 e0       	ldi	r18, 0x04	; 4
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	46 e0       	ldi	r20, 0x06	; 6
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	60 e0       	ldi	r22, 0x00	; 0
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	cd 01       	movw	r24, r26
     aec:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     af0:	13 c1       	rjmp	.+550    	; 0xd18 <writeChar+0x39c>
     af2:	01 e0       	ldi	r16, 0x01	; 1
     af4:	10 e0       	ldi	r17, 0x00	; 0
     af6:	26 e0       	ldi	r18, 0x06	; 6
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	44 e0       	ldi	r20, 0x04	; 4
     afc:	50 e0       	ldi	r21, 0x00	; 0
     afe:	61 e0       	ldi	r22, 0x01	; 1
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	cd 01       	movw	r24, r26
     b04:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b08:	07 c1       	rjmp	.+526    	; 0xd18 <writeChar+0x39c>
     b0a:	00 e0       	ldi	r16, 0x00	; 0
     b0c:	10 e0       	ldi	r17, 0x00	; 0
     b0e:	2e e0       	ldi	r18, 0x0E	; 14
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	44 e0       	ldi	r20, 0x04	; 4
     b14:	50 e0       	ldi	r21, 0x00	; 0
     b16:	61 e0       	ldi	r22, 0x01	; 1
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	cd 01       	movw	r24, r26
     b1c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b20:	fb c0       	rjmp	.+502    	; 0xd18 <writeChar+0x39c>
     b22:	01 e0       	ldi	r16, 0x01	; 1
     b24:	10 e0       	ldi	r17, 0x00	; 0
     b26:	2d e0       	ldi	r18, 0x0D	; 13
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	44 e0       	ldi	r20, 0x04	; 4
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	61 e0       	ldi	r22, 0x01	; 1
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	cd 01       	movw	r24, r26
     b34:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b38:	ef c0       	rjmp	.+478    	; 0xd18 <writeChar+0x39c>
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	2f e0       	ldi	r18, 0x0F	; 15
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	45 e0       	ldi	r20, 0x05	; 5
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	60 e0       	ldi	r22, 0x00	; 0
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	cd 01       	movw	r24, r26
     b4c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b50:	e3 c0       	rjmp	.+454    	; 0xd18 <writeChar+0x39c>
     b52:	02 e0       	ldi	r16, 0x02	; 2
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	48 e0       	ldi	r20, 0x08	; 8
     b5c:	50 e0       	ldi	r21, 0x00	; 0
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	cd 01       	movw	r24, r26
     b64:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b68:	d7 c0       	rjmp	.+430    	; 0xd18 <writeChar+0x39c>
     b6a:	01 e0       	ldi	r16, 0x01	; 1
     b6c:	10 e0       	ldi	r17, 0x00	; 0
     b6e:	21 e0       	ldi	r18, 0x01	; 1
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	41 e0       	ldi	r20, 0x01	; 1
     b74:	50 e0       	ldi	r21, 0x00	; 0
     b76:	60 e0       	ldi	r22, 0x00	; 0
     b78:	70 e0       	ldi	r23, 0x00	; 0
     b7a:	cd 01       	movw	r24, r26
     b7c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b80:	cb c0       	rjmp	.+406    	; 0xd18 <writeChar+0x39c>
     b82:	08 e0       	ldi	r16, 0x08	; 8
     b84:	10 e0       	ldi	r17, 0x00	; 0
     b86:	26 e0       	ldi	r18, 0x06	; 6
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	44 e0       	ldi	r20, 0x04	; 4
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	68 e0       	ldi	r22, 0x08	; 8
     b90:	70 e0       	ldi	r23, 0x00	; 0
     b92:	cd 01       	movw	r24, r26
     b94:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     b98:	bf c0       	rjmp	.+382    	; 0xd18 <writeChar+0x39c>
     b9a:	01 e0       	ldi	r16, 0x01	; 1
     b9c:	10 e0       	ldi	r17, 0x00	; 0
     b9e:	24 e0       	ldi	r18, 0x04	; 4
     ba0:	30 e0       	ldi	r19, 0x00	; 0
     ba2:	44 e0       	ldi	r20, 0x04	; 4
     ba4:	50 e0       	ldi	r21, 0x00	; 0
     ba6:	60 e0       	ldi	r22, 0x00	; 0
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	cd 01       	movw	r24, r26
     bac:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     bb0:	b3 c0       	rjmp	.+358    	; 0xd18 <writeChar+0x39c>
     bb2:	00 e0       	ldi	r16, 0x00	; 0
     bb4:	10 e0       	ldi	r17, 0x00	; 0
     bb6:	25 e0       	ldi	r18, 0x05	; 5
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	47 e0       	ldi	r20, 0x07	; 7
     bbc:	50 e0       	ldi	r21, 0x00	; 0
     bbe:	68 e0       	ldi	r22, 0x08	; 8
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	cd 01       	movw	r24, r26
     bc4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     bc8:	a7 c0       	rjmp	.+334    	; 0xd18 <writeChar+0x39c>
     bca:	08 e0       	ldi	r16, 0x08	; 8
     bcc:	10 e0       	ldi	r17, 0x00	; 0
     bce:	25 e0       	ldi	r18, 0x05	; 5
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	47 e0       	ldi	r20, 0x07	; 7
     bd4:	50 e0       	ldi	r21, 0x00	; 0
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	70 e0       	ldi	r23, 0x00	; 0
     bda:	cd 01       	movw	r24, r26
     bdc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     be0:	9b c0       	rjmp	.+310    	; 0xd18 <writeChar+0x39c>
     be2:	01 e0       	ldi	r16, 0x01	; 1
     be4:	10 e0       	ldi	r17, 0x00	; 0
     be6:	25 e0       	ldi	r18, 0x05	; 5
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	45 e0       	ldi	r20, 0x05	; 5
     bec:	50 e0       	ldi	r21, 0x00	; 0
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	cd 01       	movw	r24, r26
     bf4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     bf8:	8f c0       	rjmp	.+286    	; 0xd18 <writeChar+0x39c>
     bfa:	00 e0       	ldi	r16, 0x00	; 0
     bfc:	10 e0       	ldi	r17, 0x00	; 0
     bfe:	2e e0       	ldi	r18, 0x0E	; 14
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	45 e0       	ldi	r20, 0x05	; 5
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	61 e0       	ldi	r22, 0x01	; 1
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	cd 01       	movw	r24, r26
     c0c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c10:	83 c0       	rjmp	.+262    	; 0xd18 <writeChar+0x39c>
     c12:	09 e0       	ldi	r16, 0x09	; 9
     c14:	10 e0       	ldi	r17, 0x00	; 0
     c16:	25 e0       	ldi	r18, 0x05	; 5
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	45 e0       	ldi	r20, 0x05	; 5
     c1c:	50 e0       	ldi	r21, 0x00	; 0
     c1e:	61 e0       	ldi	r22, 0x01	; 1
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	cd 01       	movw	r24, r26
     c24:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c28:	77 c0       	rjmp	.+238    	; 0xd18 <writeChar+0x39c>
     c2a:	08 e0       	ldi	r16, 0x08	; 8
     c2c:	10 e0       	ldi	r17, 0x00	; 0
     c2e:	2e e0       	ldi	r18, 0x0E	; 14
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	45 e0       	ldi	r20, 0x05	; 5
     c34:	50 e0       	ldi	r21, 0x00	; 0
     c36:	61 e0       	ldi	r22, 0x01	; 1
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	cd 01       	movw	r24, r26
     c3c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c40:	6b c0       	rjmp	.+214    	; 0xd18 <writeChar+0x39c>
     c42:	01 e0       	ldi	r16, 0x01	; 1
     c44:	10 e0       	ldi	r17, 0x00	; 0
     c46:	2b e0       	ldi	r18, 0x0B	; 11
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	44 e0       	ldi	r20, 0x04	; 4
     c4c:	50 e0       	ldi	r21, 0x00	; 0
     c4e:	61 e0       	ldi	r22, 0x01	; 1
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	cd 01       	movw	r24, r26
     c54:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c58:	5f c0       	rjmp	.+190    	; 0xd18 <writeChar+0x39c>
     c5a:	02 e0       	ldi	r16, 0x02	; 2
     c5c:	10 e0       	ldi	r17, 0x00	; 0
     c5e:	20 e0       	ldi	r18, 0x00	; 0
     c60:	30 e0       	ldi	r19, 0x00	; 0
     c62:	48 e0       	ldi	r20, 0x08	; 8
     c64:	50 e0       	ldi	r21, 0x00	; 0
     c66:	61 e0       	ldi	r22, 0x01	; 1
     c68:	70 e0       	ldi	r23, 0x00	; 0
     c6a:	cd 01       	movw	r24, r26
     c6c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c70:	53 c0       	rjmp	.+166    	; 0xd18 <writeChar+0x39c>
     c72:	01 e0       	ldi	r16, 0x01	; 1
     c74:	10 e0       	ldi	r17, 0x00	; 0
     c76:	25 e0       	ldi	r18, 0x05	; 5
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	45 e0       	ldi	r20, 0x05	; 5
     c7c:	50 e0       	ldi	r21, 0x00	; 0
     c7e:	60 e0       	ldi	r22, 0x00	; 0
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	cd 01       	movw	r24, r26
     c84:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     c88:	47 c0       	rjmp	.+142    	; 0xd18 <writeChar+0x39c>
     c8a:	04 e0       	ldi	r16, 0x04	; 4
     c8c:	10 e0       	ldi	r17, 0x00	; 0
     c8e:	24 e0       	ldi	r18, 0x04	; 4
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	44 e0       	ldi	r20, 0x04	; 4
     c94:	50 e0       	ldi	r21, 0x00	; 0
     c96:	68 e0       	ldi	r22, 0x08	; 8
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	cd 01       	movw	r24, r26
     c9c:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     ca0:	3b c0       	rjmp	.+118    	; 0xd18 <writeChar+0x39c>
     ca2:	03 e0       	ldi	r16, 0x03	; 3
     ca4:	10 e0       	ldi	r17, 0x00	; 0
     ca6:	25 e0       	ldi	r18, 0x05	; 5
     ca8:	30 e0       	ldi	r19, 0x00	; 0
     caa:	45 e0       	ldi	r20, 0x05	; 5
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	60 e0       	ldi	r22, 0x00	; 0
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	cd 01       	movw	r24, r26
     cb4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     cb8:	2f c0       	rjmp	.+94     	; 0xd18 <writeChar+0x39c>
     cba:	0c e0       	ldi	r16, 0x0C	; 12
     cbc:	10 e0       	ldi	r17, 0x00	; 0
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	42 e0       	ldi	r20, 0x02	; 2
     cc4:	50 e0       	ldi	r21, 0x00	; 0
     cc6:	68 e0       	ldi	r22, 0x08	; 8
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	cd 01       	movw	r24, r26
     ccc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     cd0:	23 c0       	rjmp	.+70     	; 0xd18 <writeChar+0x39c>
     cd2:	02 e0       	ldi	r16, 0x02	; 2
     cd4:	10 e0       	ldi	r17, 0x00	; 0
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	42 e0       	ldi	r20, 0x02	; 2
     cdc:	50 e0       	ldi	r21, 0x00	; 0
     cde:	68 e0       	ldi	r22, 0x08	; 8
     ce0:	70 e0       	ldi	r23, 0x00	; 0
     ce2:	cd 01       	movw	r24, r26
     ce4:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     ce8:	17 c0       	rjmp	.+46     	; 0xd18 <writeChar+0x39c>
     cea:	05 e0       	ldi	r16, 0x05	; 5
     cec:	10 e0       	ldi	r17, 0x00	; 0
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	40 e0       	ldi	r20, 0x00	; 0
     cf4:	50 e0       	ldi	r21, 0x00	; 0
     cf6:	69 e0       	ldi	r22, 0x09	; 9
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	cd 01       	movw	r24, r26
     cfc:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     d00:	0b c0       	rjmp	.+22     	; 0xd18 <writeChar+0x39c>
     d02:	02 e0       	ldi	r16, 0x02	; 2
     d04:	10 e0       	ldi	r17, 0x00	; 0
     d06:	28 e0       	ldi	r18, 0x08	; 8
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	41 e0       	ldi	r20, 0x01	; 1
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	61 e0       	ldi	r22, 0x01	; 1
     d10:	70 e0       	ldi	r23, 0x00	; 0
     d12:	cd 01       	movw	r24, r26
     d14:	0e 94 b7 02 	call	0x56e	; 0x56e <LCDWritePackage>
     d18:	1f 91       	pop	r17
     d1a:	0f 91       	pop	r16
     d1c:	08 95       	ret

00000d1e <initLCD>:

// Inits the LCD by using some magic

void initLCD(){
	
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
     d1e:	87 eb       	ldi	r24, 0xB7	; 183
     d20:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (0<<LCDPS2) | (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
     d24:	87 e0       	ldi	r24, 0x07	; 7
     d26:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
     d2a:	8f e0       	ldi	r24, 0x0F	; 15
     d2c:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	LCDCRA = (1<<LCDEN);
     d30:	80 e8       	ldi	r24, 0x80	; 128
     d32:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     d36:	08 95       	ret

00000d38 <unlockState>:

#define TIMEOUT 40

void unlockState(Lock *self){
	
	self->state = 0;
     d38:	fc 01       	movw	r30, r24
     d3a:	15 82       	std	Z+5, r1	; 0x05
     d3c:	14 82       	std	Z+4, r1	; 0x04
     d3e:	08 95       	ret

00000d40 <lockState>:
}

void lockState(Lock *self){
     d40:	cf 92       	push	r12
     d42:	df 92       	push	r13
     d44:	ef 92       	push	r14
     d46:	ff 92       	push	r15
     d48:	0f 93       	push	r16
     d4a:	1f 93       	push	r17
	
	self->state = 1;
     d4c:	21 e0       	ldi	r18, 0x01	; 1
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	fc 01       	movw	r30, r24
     d52:	35 83       	std	Z+5, r19	; 0x05
     d54:	24 83       	std	Z+4, r18	; 0x04
	SEND(MSEC(TIMEOUT), MSEC(TIMEOUT + 10), self, &unlockState, NULL);
     d56:	c1 2c       	mov	r12, r1
     d58:	d1 2c       	mov	r13, r1
     d5a:	0f 2e       	mov	r0, r31
     d5c:	fc e9       	ldi	r31, 0x9C	; 156
     d5e:	ef 2e       	mov	r14, r31
     d60:	f6 e0       	ldi	r31, 0x06	; 6
     d62:	ff 2e       	mov	r15, r31
     d64:	f0 2d       	mov	r31, r0
     d66:	8c 01       	movw	r16, r24
     d68:	2a e1       	ldi	r18, 0x1A	; 26
     d6a:	36 e0       	ldi	r19, 0x06	; 6
     d6c:	40 e0       	ldi	r20, 0x00	; 0
     d6e:	50 e0       	ldi	r21, 0x00	; 0
     d70:	62 ee       	ldi	r22, 0xE2	; 226
     d72:	74 e0       	ldi	r23, 0x04	; 4
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	0e 94 95 12 	call	0x252a	; 0x252a <async>
	
     d7c:	1f 91       	pop	r17
     d7e:	0f 91       	pop	r16
     d80:	ff 90       	pop	r15
     d82:	ef 90       	pop	r14
     d84:	df 90       	pop	r13
     d86:	cf 90       	pop	r12
     d88:	08 95       	ret

00000d8a <parseJoystickData>:
	
	return TINYTIMBER(&mainObj, &run, NULL);
}

// Runs the parsers for the concerning objects
void parseJoystickData(MainObj *self){
     d8a:	cf 92       	push	r12
     d8c:	df 92       	push	r13
     d8e:	ef 92       	push	r14
     d90:	ff 92       	push	r15
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	cf 93       	push	r28
     d98:	df 93       	push	r29
     d9a:	ec 01       	movw	r28, r24
	
	ASYNC(self->gui, &parseGUI, NULL);
     d9c:	0c 81       	ldd	r16, Y+4	; 0x04
     d9e:	1d 81       	ldd	r17, Y+5	; 0x05
     da0:	c1 2c       	mov	r12, r1
     da2:	d1 2c       	mov	r13, r1
     da4:	0f 2e       	mov	r0, r31
     da6:	ff ed       	ldi	r31, 0xDF	; 223
     da8:	ef 2e       	mov	r14, r31
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	ff 2e       	mov	r15, r31
     dae:	f0 2d       	mov	r31, r0
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	a9 01       	movw	r20, r18
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	cb 01       	movw	r24, r22
     dbc:	0e 94 95 12 	call	0x252a	; 0x252a <async>
	ASYNC(self->hold, &parseHold, NULL);
     dc0:	0a 85       	ldd	r16, Y+10	; 0x0a
     dc2:	1b 85       	ldd	r17, Y+11	; 0x0b
     dc4:	0f 2e       	mov	r0, r31
     dc6:	f9 e2       	ldi	r31, 0x29	; 41
     dc8:	ef 2e       	mov	r14, r31
     dca:	f2 e0       	ldi	r31, 0x02	; 2
     dcc:	ff 2e       	mov	r15, r31
     dce:	f0 2d       	mov	r31, r0
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	a9 01       	movw	r20, r18
     dd6:	60 e0       	ldi	r22, 0x00	; 0
     dd8:	70 e0       	ldi	r23, 0x00	; 0
     dda:	cb 01       	movw	r24, r22
     ddc:	0e 94 95 12 	call	0x252a	; 0x252a <async>
	
}
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	ff 90       	pop	r15
     dea:	ef 90       	pop	r14
     dec:	df 90       	pop	r13
     dee:	cf 90       	pop	r12
     df0:	08 95       	ret

00000df2 <run>:

// Attatches the interrupts in the Kernal and 
// activates the PWM generators
void run(MainObj *self){
     df2:	cf 93       	push	r28
     df4:	df 93       	push	r29
     df6:	ec 01       	movw	r28, r24
	
	INSTALL(self, &parseJoystickData, IRQ_PCINT0);
     df8:	41 e0       	ldi	r20, 0x01	; 1
     dfa:	65 ec       	ldi	r22, 0xC5	; 197
     dfc:	76 e0       	ldi	r23, 0x06	; 6
     dfe:	0e 94 a1 14 	call	0x2942	; 0x2942 <install>
	INSTALL(self, &parseJoystickData, IRQ_PCINT1);
     e02:	42 e0       	ldi	r20, 0x02	; 2
     e04:	65 ec       	ldi	r22, 0xC5	; 197
     e06:	76 e0       	ldi	r23, 0x06	; 6
     e08:	ce 01       	movw	r24, r28
     e0a:	0e 94 a1 14 	call	0x2942	; 0x2942 <install>
	
	SYNC(self->pwmGenerator1, &activate, NULL);
     e0e:	40 e0       	ldi	r20, 0x00	; 0
     e10:	50 e0       	ldi	r21, 0x00	; 0
     e12:	61 e7       	ldi	r22, 0x71	; 113
     e14:	78 e0       	ldi	r23, 0x08	; 8
     e16:	8e 81       	ldd	r24, Y+6	; 0x06
     e18:	9f 81       	ldd	r25, Y+7	; 0x07
     e1a:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
	SYNC(self->pwmGenerator2, &activate, NULL);
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	61 e7       	ldi	r22, 0x71	; 113
     e24:	78 e0       	ldi	r23, 0x08	; 8
     e26:	88 85       	ldd	r24, Y+8	; 0x08
     e28:	99 85       	ldd	r25, Y+9	; 0x09
     e2a:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>

     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	08 95       	ret

00000e34 <main>:
void run(MainObj *self);

// Inits objects and runs the tinyTimber kernel

int main(void)
{
     e34:	af 92       	push	r10
     e36:	bf 92       	push	r11
     e38:	cf 92       	push	r12
     e3a:	df 92       	push	r13
     e3c:	ef 92       	push	r14
     e3e:	ff 92       	push	r15
     e40:	0f 93       	push	r16
     e42:	1f 93       	push	r17
     e44:	cf 93       	push	r28
     e46:	df 93       	push	r29
     e48:	cd b7       	in	r28, 0x3d	; 61
     e4a:	de b7       	in	r29, 0x3e	; 62
     e4c:	ce 54       	subi	r28, 0x4E	; 78
     e4e:	d1 09       	sbc	r29, r1
     e50:	0f b6       	in	r0, 0x3f	; 63
     e52:	f8 94       	cli
     e54:	de bf       	out	0x3e, r29	; 62
     e56:	0f be       	out	0x3f, r0	; 63
     e58:	cd bf       	out	0x3d, r28	; 61
	
	PortEWriter portEWriter = PORTEWRITER_INIT;
     e5a:	1a 82       	std	Y+2, r1	; 0x02
     e5c:	19 82       	std	Y+1, r1	; 0x01
     e5e:	1c 82       	std	Y+4, r1	; 0x04
     e60:	1b 82       	std	Y+3, r1	; 0x03
	
	PwmGenerator pwmGenerators[2] = {PWMGENERATOR_INIT(&portEWriter), PWMGENERATOR_INIT(&portEWriter)};
     e62:	7e 01       	movw	r14, r28
     e64:	85 e0       	ldi	r24, 0x05	; 5
     e66:	e8 0e       	add	r14, r24
     e68:	f1 1c       	adc	r15, r1
     e6a:	80 e2       	ldi	r24, 0x20	; 32
     e6c:	f7 01       	movw	r30, r14
     e6e:	11 92       	st	Z+, r1
     e70:	8a 95       	dec	r24
     e72:	e9 f7       	brne	.-6      	; 0xe6e <main+0x3a>
     e74:	ce 01       	movw	r24, r28
     e76:	01 96       	adiw	r24, 0x01	; 1
     e78:	9a 87       	std	Y+10, r25	; 0x0a
     e7a:	89 87       	std	Y+9, r24	; 0x09
     e7c:	9a 8f       	std	Y+26, r25	; 0x1a
     e7e:	89 8f       	std	Y+25, r24	; 0x19
	initPwmGenerator(&(pwmGenerators[0]), 4, 99);
     e80:	43 e6       	ldi	r20, 0x63	; 99
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	64 e0       	ldi	r22, 0x04	; 4
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	c7 01       	movw	r24, r14
     e8a:	0e 94 59 08 	call	0x10b2	; 0x10b2 <initPwmGenerator>
	initPwmGenerator(&(pwmGenerators[1]), 6, 80);
     e8e:	6e 01       	movw	r12, r28
     e90:	f5 e1       	ldi	r31, 0x15	; 21
     e92:	cf 0e       	add	r12, r31
     e94:	d1 1c       	adc	r13, r1
     e96:	40 e5       	ldi	r20, 0x50	; 80
     e98:	50 e0       	ldi	r21, 0x00	; 0
     e9a:	66 e0       	ldi	r22, 0x06	; 6
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	c6 01       	movw	r24, r12
     ea0:	0e 94 59 08 	call	0x10b2	; 0x10b2 <initPwmGenerator>
	
	GUI gui = GUI_INIT;
     ea4:	8e 01       	movw	r16, r28
     ea6:	0b 5d       	subi	r16, 0xDB	; 219
     ea8:	1f 4f       	sbci	r17, 0xFF	; 255
     eaa:	86 e1       	ldi	r24, 0x16	; 22
     eac:	f8 01       	movw	r30, r16
     eae:	11 92       	st	Z+, r1
     eb0:	8a 95       	dec	r24
     eb2:	e9 f7       	brne	.-6      	; 0xeae <main+0x7a>
	setPwmGenerators(&gui, &(pwmGenerators[0]), &(pwmGenerators[1]));
     eb4:	a6 01       	movw	r20, r12
     eb6:	b7 01       	movw	r22, r14
     eb8:	c8 01       	movw	r24, r16
     eba:	0e 94 89 01 	call	0x312	; 0x312 <setPwmGenerators>
	
	Hold hold = HOLD_INIT(&gui);
     ebe:	5e 01       	movw	r10, r28
     ec0:	fb e3       	ldi	r31, 0x3B	; 59
     ec2:	af 0e       	add	r10, r31
     ec4:	b1 1c       	adc	r11, r1
     ec6:	88 e0       	ldi	r24, 0x08	; 8
     ec8:	f5 01       	movw	r30, r10
     eca:	11 92       	st	Z+, r1
     ecc:	8a 95       	dec	r24
     ece:	e9 f7       	brne	.-6      	; 0xeca <main+0x96>
     ed0:	21 96       	adiw	r28, 0x01	; 1
     ed2:	1f af       	std	Y+63, r17	; 0x3f
     ed4:	0e af       	std	Y+62, r16	; 0x3e
     ed6:	21 97       	sbiw	r28, 0x01	; 1
	
	initGUI(&gui);
     ed8:	c8 01       	movw	r24, r16
     eda:	0e 94 78 00 	call	0xf0	; 0xf0 <initGUI>
	MainObj mainObj = {initObject(), &gui, &(pwmGenerators[0]), &(pwmGenerators[1]), &hold};
     ede:	25 96       	adiw	r28, 0x05	; 5
     ee0:	1f ae       	std	Y+63, r1	; 0x3f
     ee2:	1e ae       	std	Y+62, r1	; 0x3e
     ee4:	25 97       	sbiw	r28, 0x05	; 5
     ee6:	27 96       	adiw	r28, 0x07	; 7
     ee8:	1f ae       	std	Y+63, r1	; 0x3f
     eea:	1e ae       	std	Y+62, r1	; 0x3e
     eec:	27 97       	sbiw	r28, 0x07	; 7
     eee:	29 96       	adiw	r28, 0x09	; 9
     ef0:	1f af       	std	Y+63, r17	; 0x3f
     ef2:	0e af       	std	Y+62, r16	; 0x3e
     ef4:	29 97       	sbiw	r28, 0x09	; 9
     ef6:	2b 96       	adiw	r28, 0x0b	; 11
     ef8:	ff ae       	std	Y+63, r15	; 0x3f
     efa:	ee ae       	std	Y+62, r14	; 0x3e
     efc:	2b 97       	sbiw	r28, 0x0b	; 11
     efe:	2d 96       	adiw	r28, 0x0d	; 13
     f00:	df ae       	std	Y+63, r13	; 0x3f
     f02:	ce ae       	std	Y+62, r12	; 0x3e
     f04:	2d 97       	sbiw	r28, 0x0d	; 13
     f06:	2f 96       	adiw	r28, 0x0f	; 15
     f08:	bf ae       	std	Y+63, r11	; 0x3f
     f0a:	ae ae       	std	Y+62, r10	; 0x3e
     f0c:	2f 97       	sbiw	r28, 0x0f	; 15
	
	return TINYTIMBER(&mainObj, &run, NULL);
     f0e:	40 e0       	ldi	r20, 0x00	; 0
     f10:	50 e0       	ldi	r21, 0x00	; 0
     f12:	69 ef       	ldi	r22, 0xF9	; 249
     f14:	76 e0       	ldi	r23, 0x06	; 6
     f16:	ce 01       	movw	r24, r28
     f18:	8d 5b       	subi	r24, 0xBD	; 189
     f1a:	9f 4f       	sbci	r25, 0xFF	; 255
     f1c:	0e 94 bb 14 	call	0x2976	; 0x2976 <tinytimber>
}
     f20:	c2 5b       	subi	r28, 0xB2	; 178
     f22:	df 4f       	sbci	r29, 0xFF	; 255
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	f8 94       	cli
     f28:	de bf       	out	0x3e, r29	; 62
     f2a:	0f be       	out	0x3f, r0	; 63
     f2c:	cd bf       	out	0x3d, r28	; 61
     f2e:	df 91       	pop	r29
     f30:	cf 91       	pop	r28
     f32:	1f 91       	pop	r17
     f34:	0f 91       	pop	r16
     f36:	ff 90       	pop	r15
     f38:	ef 90       	pop	r14
     f3a:	df 90       	pop	r13
     f3c:	cf 90       	pop	r12
     f3e:	bf 90       	pop	r11
     f40:	af 90       	pop	r10
     f42:	08 95       	ret

00000f44 <write>:
#include <avr/io.h>
#include <stdint-gcc.h>

void write(PortEWriter* self, int* arg){
	
	if(arg[1]){
     f44:	fb 01       	movw	r30, r22
     f46:	82 81       	ldd	r24, Z+2	; 0x02
     f48:	93 81       	ldd	r25, Z+3	; 0x03
     f4a:	89 2b       	or	r24, r25
     f4c:	61 f0       	breq	.+24     	; 0xf66 <write+0x22>
		PORTE |= (1 << arg[0]);
     f4e:	2e b1       	in	r18, 0x0e	; 14
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	00 80       	ld	r0, Z
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <write+0x18>
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	0a 94       	dec	r0
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <write+0x14>
     f60:	82 2b       	or	r24, r18
     f62:	8e b9       	out	0x0e, r24	; 14
     f64:	08 95       	ret

	}
	else{
		PORTE &= ~(1 << arg[0]);
     f66:	2e b1       	in	r18, 0x0e	; 14
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	fb 01       	movw	r30, r22
     f6e:	00 80       	ld	r0, Z
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <write+0x32>
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	0a 94       	dec	r0
     f78:	e2 f7       	brpl	.-8      	; 0xf72 <write+0x2e>
     f7a:	80 95       	com	r24
     f7c:	82 23       	and	r24, r18
     f7e:	8e b9       	out	0x0e, r24	; 14
     f80:	08 95       	ret

00000f82 <cycle>:
// half period of the pwm signal
int stepToHalfPeriod(int step){
	
	return (100 - step);
	
}
     f82:	8f 92       	push	r8
     f84:	9f 92       	push	r9
     f86:	af 92       	push	r10
     f88:	bf 92       	push	r11
     f8a:	cf 92       	push	r12
     f8c:	df 92       	push	r13
     f8e:	ef 92       	push	r14
     f90:	ff 92       	push	r15
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <cycle+0x1a>
     f9c:	00 d0       	rcall	.+0      	; 0xf9e <cycle+0x1c>
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
     fa2:	8c 01       	movw	r16, r24
     fa4:	fc 01       	movw	r30, r24
     fa6:	86 85       	ldd	r24, Z+14	; 0x0e
     fa8:	97 85       	ldd	r25, Z+15	; 0x0f
     faa:	89 2b       	or	r24, r25
     fac:	09 f4       	brne	.+2      	; 0xfb0 <cycle+0x2e>
     fae:	60 c0       	rjmp	.+192    	; 0x1070 <cycle+0xee>
     fb0:	80 85       	ldd	r24, Z+8	; 0x08
     fb2:	91 85       	ldd	r25, Z+9	; 0x09
     fb4:	9a 83       	std	Y+2, r25	; 0x02
     fb6:	89 83       	std	Y+1, r24	; 0x01
     fb8:	84 85       	ldd	r24, Z+12	; 0x0c
     fba:	95 85       	ldd	r25, Z+13	; 0x0d
     fbc:	9c 83       	std	Y+4, r25	; 0x04
     fbe:	8b 83       	std	Y+3, r24	; 0x03
     fc0:	ae 01       	movw	r20, r28
     fc2:	4f 5f       	subi	r20, 0xFF	; 255
     fc4:	5f 4f       	sbci	r21, 0xFF	; 255
     fc6:	62 ea       	ldi	r22, 0xA2	; 162
     fc8:	77 e0       	ldi	r23, 0x07	; 7
     fca:	84 81       	ldd	r24, Z+4	; 0x04
     fcc:	95 81       	ldd	r25, Z+5	; 0x05
     fce:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	f8 01       	movw	r30, r16
     fd8:	24 85       	ldd	r18, Z+12	; 0x0c
     fda:	35 85       	ldd	r19, Z+13	; 0x0d
     fdc:	23 2b       	or	r18, r19
     fde:	11 f0       	breq	.+4      	; 0xfe4 <cycle+0x62>
     fe0:	80 e0       	ldi	r24, 0x00	; 0
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	f8 01       	movw	r30, r16
     fe6:	95 87       	std	Z+13, r25	; 0x0d
     fe8:	84 87       	std	Z+12, r24	; 0x0c
     fea:	42 85       	ldd	r20, Z+10	; 0x0a
     fec:	53 85       	ldd	r21, Z+11	; 0x0b
     fee:	ae e6       	ldi	r26, 0x6E	; 110
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	a4 1b       	sub	r26, r20
     ff4:	b5 0b       	sbc	r27, r21
     ff6:	2d e7       	ldi	r18, 0x7D	; 125
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <__usmulhisi3>
     ffe:	4b 01       	movw	r8, r22
    1000:	5c 01       	movw	r10, r24
    1002:	99 23       	and	r25, r25
    1004:	2c f4       	brge	.+10     	; 0x1010 <cycle+0x8e>
    1006:	f3 e0       	ldi	r31, 0x03	; 3
    1008:	8f 0e       	add	r8, r31
    100a:	91 1c       	adc	r9, r1
    100c:	a1 1c       	adc	r10, r1
    100e:	b1 1c       	adc	r11, r1
    1010:	b5 94       	asr	r11
    1012:	a7 94       	ror	r10
    1014:	97 94       	ror	r9
    1016:	87 94       	ror	r8
    1018:	b5 94       	asr	r11
    101a:	a7 94       	ror	r10
    101c:	97 94       	ror	r9
    101e:	87 94       	ror	r8
    1020:	a4 e6       	ldi	r26, 0x64	; 100
    1022:	b0 e0       	ldi	r27, 0x00	; 0
    1024:	a4 1b       	sub	r26, r20
    1026:	b5 0b       	sbc	r27, r21
    1028:	2d e7       	ldi	r18, 0x7D	; 125
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <__usmulhisi3>
    1030:	6b 01       	movw	r12, r22
    1032:	7c 01       	movw	r14, r24
    1034:	99 23       	and	r25, r25
    1036:	2c f4       	brge	.+10     	; 0x1042 <cycle+0xc0>
    1038:	23 e0       	ldi	r18, 0x03	; 3
    103a:	c2 0e       	add	r12, r18
    103c:	d1 1c       	adc	r13, r1
    103e:	e1 1c       	adc	r14, r1
    1040:	f1 1c       	adc	r15, r1
    1042:	c7 01       	movw	r24, r14
    1044:	b6 01       	movw	r22, r12
    1046:	95 95       	asr	r25
    1048:	87 95       	ror	r24
    104a:	77 95       	ror	r23
    104c:	67 95       	ror	r22
    104e:	95 95       	asr	r25
    1050:	87 95       	ror	r24
    1052:	77 95       	ror	r23
    1054:	67 95       	ror	r22
    1056:	c1 2c       	mov	r12, r1
    1058:	d1 2c       	mov	r13, r1
    105a:	0f 2e       	mov	r0, r31
    105c:	f1 ec       	ldi	r31, 0xC1	; 193
    105e:	ef 2e       	mov	r14, r31
    1060:	f7 e0       	ldi	r31, 0x07	; 7
    1062:	ff 2e       	mov	r15, r31
    1064:	f0 2d       	mov	r31, r0
    1066:	a5 01       	movw	r20, r10
    1068:	94 01       	movw	r18, r8
    106a:	0e 94 95 12 	call	0x252a	; 0x252a <async>
    106e:	10 c0       	rjmp	.+32     	; 0x1090 <cycle+0x10e>
    1070:	f8 01       	movw	r30, r16
    1072:	80 85       	ldd	r24, Z+8	; 0x08
    1074:	91 85       	ldd	r25, Z+9	; 0x09
    1076:	9a 83       	std	Y+2, r25	; 0x02
    1078:	89 83       	std	Y+1, r24	; 0x01
    107a:	1c 82       	std	Y+4, r1	; 0x04
    107c:	1b 82       	std	Y+3, r1	; 0x03
    107e:	ae 01       	movw	r20, r28
    1080:	4f 5f       	subi	r20, 0xFF	; 255
    1082:	5f 4f       	sbci	r21, 0xFF	; 255
    1084:	62 ea       	ldi	r22, 0xA2	; 162
    1086:	77 e0       	ldi	r23, 0x07	; 7
    1088:	84 81       	ldd	r24, Z+4	; 0x04
    108a:	95 81       	ldd	r25, Z+5	; 0x05
    108c:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
    1090:	0f 90       	pop	r0
    1092:	0f 90       	pop	r0
    1094:	0f 90       	pop	r0
    1096:	0f 90       	pop	r0
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	ff 90       	pop	r15
    10a2:	ef 90       	pop	r14
    10a4:	df 90       	pop	r13
    10a6:	cf 90       	pop	r12
    10a8:	bf 90       	pop	r11
    10aa:	af 90       	pop	r10
    10ac:	9f 90       	pop	r9
    10ae:	8f 90       	pop	r8
    10b0:	08 95       	ret

000010b2 <initPwmGenerator>:
    10b2:	fc 01       	movw	r30, r24
    10b4:	21 e0       	ldi	r18, 0x01	; 1
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	37 83       	std	Z+7, r19	; 0x07
    10ba:	26 83       	std	Z+6, r18	; 0x06
    10bc:	60 87       	std	Z+8, r22	; 0x08
    10be:	71 87       	std	Z+9, r23	; 0x09
    10c0:	53 87       	std	Z+11, r21	; 0x0b
    10c2:	42 87       	std	Z+10, r20	; 0x0a
    10c4:	15 86       	std	Z+13, r1	; 0x0d
    10c6:	14 86       	std	Z+12, r1	; 0x0c
    10c8:	17 86       	std	Z+15, r1	; 0x0f
    10ca:	16 86       	std	Z+14, r1	; 0x0e
    10cc:	8d b1       	in	r24, 0x0d	; 13
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <initPwmGenerator+0x22>
    10d0:	22 0f       	add	r18, r18
    10d2:	33 1f       	adc	r19, r19
    10d4:	6a 95       	dec	r22
    10d6:	e2 f7       	brpl	.-8      	; 0x10d0 <initPwmGenerator+0x1e>
    10d8:	28 2b       	or	r18, r24
    10da:	2d b9       	out	0x0d, r18	; 13
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	08 95       	ret

000010e2 <activate>:
	
}

void activate(PwmGenerator* self){
	
	self->active = 1;
    10e2:	21 e0       	ldi	r18, 0x01	; 1
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	fc 01       	movw	r30, r24
    10e8:	37 87       	std	Z+15, r19	; 0x0f
    10ea:	26 87       	std	Z+14, r18	; 0x0e
	cycle(self);
    10ec:	0e 94 c1 07 	call	0xf82	; 0xf82 <cycle>
    10f0:	08 95       	ret

000010f2 <deactivate>:

}

void deactivate(PwmGenerator* self){
	self->active = 0;
    10f2:	fc 01       	movw	r30, r24
    10f4:	17 86       	std	Z+15, r1	; 0x0f
    10f6:	16 86       	std	Z+14, r1	; 0x0e
    10f8:	08 95       	ret

000010fa <incrementStep>:
}

void incrementStep(PwmGenerator* self){
	if(self->step < 99){
    10fa:	fc 01       	movw	r30, r24
    10fc:	22 85       	ldd	r18, Z+10	; 0x0a
    10fe:	33 85       	ldd	r19, Z+11	; 0x0b
    1100:	23 36       	cpi	r18, 0x63	; 99
    1102:	31 05       	cpc	r19, r1
    1104:	24 f4       	brge	.+8      	; 0x110e <incrementStep+0x14>
		self->step++;
    1106:	2f 5f       	subi	r18, 0xFF	; 255
    1108:	3f 4f       	sbci	r19, 0xFF	; 255
    110a:	33 87       	std	Z+11, r19	; 0x0b
    110c:	22 87       	std	Z+10, r18	; 0x0a
    110e:	08 95       	ret

00001110 <decrementStep>:
		
	}
}

void decrementStep(PwmGenerator* self){
	if(self->step > 0){
    1110:	fc 01       	movw	r30, r24
    1112:	22 85       	ldd	r18, Z+10	; 0x0a
    1114:	33 85       	ldd	r19, Z+11	; 0x0b
    1116:	12 16       	cp	r1, r18
    1118:	13 06       	cpc	r1, r19
    111a:	24 f4       	brge	.+8      	; 0x1124 <decrementStep+0x14>
		self->step--;
    111c:	21 50       	subi	r18, 0x01	; 1
    111e:	31 09       	sbc	r19, r1
    1120:	33 87       	std	Z+11, r19	; 0x0b
    1122:	22 87       	std	Z+10, r18	; 0x0a
    1124:	08 95       	ret

00001126 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
    1126:	cf 93       	push	r28
    1128:	df 93       	push	r29
    112a:	00 d0       	rcall	.+0      	; 0x112c <initialize+0x6>
    112c:	00 d0       	rcall	.+0      	; 0x112e <initialize+0x8>
    112e:	cd b7       	in	r28, 0x3d	; 61
    1130:	de b7       	in	r29, 0x3e	; 62
    1132:	8b ef       	ldi	r24, 0xFB	; 251
    1134:	91 e0       	ldi	r25, 0x01	; 1
    1136:	2b ed       	ldi	r18, 0xDB	; 219
    1138:	32 e0       	ldi	r19, 0x02	; 2
    113a:	fc 01       	movw	r30, r24
    113c:	70 97       	sbiw	r30, 0x10	; 16
    113e:	91 83       	std	Z+1, r25	; 0x01
    1140:	80 83       	st	Z, r24
    1142:	40 96       	adiw	r24, 0x10	; 16
    1144:	82 17       	cp	r24, r18
    1146:	93 07       	cpc	r25, r19
    1148:	c1 f7       	brne	.-16     	; 0x113a <initialize+0x14>
    114a:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <messages+0xe1>
    114e:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <messages+0xe0>
    1152:	e6 e3       	ldi	r30, 0x36	; 54
    1154:	f1 e0       	ldi	r31, 0x01	; 1
    1156:	83 e5       	ldi	r24, 0x53	; 83
    1158:	91 e0       	ldi	r25, 0x01	; 1
    115a:	91 83       	std	Z+1, r25	; 0x01
    115c:	80 83       	st	Z, r24
    115e:	80 e7       	ldi	r24, 0x70	; 112
    1160:	91 e0       	ldi	r25, 0x01	; 1
    1162:	96 8f       	std	Z+30, r25	; 0x1e
    1164:	85 8f       	std	Z+29, r24	; 0x1d
    1166:	ad e8       	ldi	r26, 0x8D	; 141
    1168:	b1 e0       	ldi	r27, 0x01	; 1
    116a:	b3 af       	std	Z+59, r27	; 0x3b
    116c:	a2 af       	std	Z+58, r26	; 0x3a
    116e:	1d 92       	st	X+, r1
    1170:	1c 92       	st	X, r1
    1172:	fa 83       	std	Y+2, r31	; 0x02
    1174:	e9 83       	std	Y+1, r30	; 0x01
    1176:	e7 e3       	ldi	r30, 0x37	; 55
    1178:	f3 e0       	ldi	r31, 0x03	; 3
    117a:	fc 83       	std	Y+4, r31	; 0x04
    117c:	eb 83       	std	Y+3, r30	; 0x03
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	9a 81       	ldd	r25, Y+2	; 0x02
    1182:	06 96       	adiw	r24, 0x06	; 6
    1184:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <setjmp>
    1188:	8b 81       	ldd	r24, Y+3	; 0x03
    118a:	9c 81       	ldd	r25, Y+4	; 0x04
    118c:	e9 81       	ldd	r30, Y+1	; 0x01
    118e:	fa 81       	ldd	r31, Y+2	; 0x02
    1190:	97 8b       	std	Z+23, r25	; 0x17
    1192:	86 8b       	std	Z+22, r24	; 0x16
    1194:	91 8f       	std	Z+25, r25	; 0x19
    1196:	80 8f       	std	Z+24, r24	; 0x18
    1198:	83 e3       	ldi	r24, 0x33	; 51
    119a:	94 e1       	ldi	r25, 0x14	; 20
    119c:	94 8f       	std	Z+28, r25	; 0x1c
    119e:	83 8f       	std	Z+27, r24	; 0x1b
    11a0:	15 82       	std	Z+5, r1	; 0x05
    11a2:	14 82       	std	Z+4, r1	; 0x04
    11a4:	7d 96       	adiw	r30, 0x1d	; 29
    11a6:	fa 83       	std	Y+2, r31	; 0x02
    11a8:	e9 83       	std	Y+1, r30	; 0x01
    11aa:	eb 81       	ldd	r30, Y+3	; 0x03
    11ac:	fc 81       	ldd	r31, Y+4	; 0x04
    11ae:	e0 5a       	subi	r30, 0xA0	; 160
    11b0:	ff 4f       	sbci	r31, 0xFF	; 255
    11b2:	fc 83       	std	Y+4, r31	; 0x04
    11b4:	eb 83       	std	Y+3, r30	; 0x03
    11b6:	89 81       	ldd	r24, Y+1	; 0x01
    11b8:	9a 81       	ldd	r25, Y+2	; 0x02
    11ba:	8a 5a       	subi	r24, 0xAA	; 170
    11bc:	91 40       	sbci	r25, 0x01	; 1
    11be:	f9 f6       	brne	.-66     	; 0x117e <initialize+0x58>
    11c0:	ee ec       	ldi	r30, 0xCE	; 206
    11c2:	f1 e0       	ldi	r31, 0x01	; 1
    11c4:	11 82       	std	Z+1, r1	; 0x01
    11c6:	10 82       	st	Z, r1
    11c8:	15 82       	std	Z+5, r1	; 0x05
    11ca:	14 82       	std	Z+4, r1	; 0x04
    11cc:	13 82       	std	Z+3, r1	; 0x03
    11ce:	12 82       	std	Z+2, r1	; 0x02
    11d0:	e1 e6       	ldi	r30, 0x61	; 97
    11d2:	f0 e0       	ldi	r31, 0x00	; 0
    11d4:	80 e8       	ldi	r24, 0x80	; 128
    11d6:	80 83       	st	Z, r24
    11d8:	10 82       	st	Z, r1
    11da:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11de:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11e2:	84 e0       	ldi	r24, 0x04	; 4
    11e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11e8:	81 e0       	ldi	r24, 0x01	; 1
    11ea:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    11ee:	0f 90       	pop	r0
    11f0:	0f 90       	pop	r0
    11f2:	0f 90       	pop	r0
    11f4:	0f 90       	pop	r0
    11f6:	df 91       	pop	r29
    11f8:	cf 91       	pop	r28
    11fa:	08 95       	ret

000011fc <dispatch>:
    11fc:	cf 93       	push	r28
    11fe:	df 93       	push	r29
    1200:	00 d0       	rcall	.+0      	; 0x1202 <dispatch+0x6>
    1202:	cd b7       	in	r28, 0x3d	; 61
    1204:	de b7       	in	r29, 0x3e	; 62
    1206:	9a 83       	std	Y+2, r25	; 0x02
    1208:	89 83       	std	Y+1, r24	; 0x01
    120a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    120e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    1212:	06 96       	adiw	r24, 0x06	; 6
    1214:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <setjmp>
    1218:	89 2b       	or	r24, r25
    121a:	59 f4       	brne	.+22     	; 0x1232 <dispatch+0x36>
    121c:	89 81       	ldd	r24, Y+1	; 0x01
    121e:	9a 81       	ldd	r25, Y+2	; 0x02
    1220:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1224:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1228:	61 e0       	ldi	r22, 0x01	; 1
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	06 96       	adiw	r24, 0x06	; 6
    122e:	0e 94 3b 15 	call	0x2a76	; 0x2a76 <longjmp>
    1232:	0f 90       	pop	r0
    1234:	0f 90       	pop	r0
    1236:	df 91       	pop	r29
    1238:	cf 91       	pop	r28
    123a:	08 95       	ret

0000123c <schedule>:
    123c:	0f 93       	push	r16
    123e:	1f 93       	push	r17
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <msgQ>
    1248:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <msgQ+0x1>
    124c:	30 97       	sbiw	r30, 0x00	; 0
    124e:	61 f1       	breq	.+88     	; 0x12a8 <schedule+0x6c>
    1250:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1254:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1258:	00 97       	sbiw	r24, 0x00	; 0
    125a:	31 f1       	breq	.+76     	; 0x12a8 <schedule+0x6c>
    125c:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
    1260:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
    1264:	aa 81       	ldd	r26, Y+2	; 0x02
    1266:	bb 81       	ldd	r27, Y+3	; 0x03
    1268:	10 97       	sbiw	r26, 0x00	; 0
    126a:	79 f0       	breq	.+30     	; 0x128a <schedule+0x4e>
    126c:	46 81       	ldd	r20, Z+6	; 0x06
    126e:	57 81       	ldd	r21, Z+7	; 0x07
    1270:	60 85       	ldd	r22, Z+8	; 0x08
    1272:	71 85       	ldd	r23, Z+9	; 0x09
    1274:	16 96       	adiw	r26, 0x06	; 6
    1276:	0d 91       	ld	r16, X+
    1278:	1d 91       	ld	r17, X+
    127a:	2d 91       	ld	r18, X+
    127c:	3c 91       	ld	r19, X
    127e:	19 97       	sbiw	r26, 0x09	; 9
    1280:	40 1b       	sub	r20, r16
    1282:	51 0b       	sbc	r21, r17
    1284:	62 0b       	sbc	r22, r18
    1286:	73 0b       	sbc	r23, r19
    1288:	7a f4       	brpl	.+30     	; 0x12a8 <schedule+0x6c>
    128a:	fc 01       	movw	r30, r24
    128c:	20 81       	ld	r18, Z
    128e:	31 81       	ldd	r19, Z+1	; 0x01
    1290:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1294:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1298:	d1 83       	std	Z+1, r29	; 0x01
    129a:	c0 83       	st	Z, r28
    129c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    12a0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    12a4:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dispatch>
    12a8:	df 91       	pop	r29
    12aa:	cf 91       	pop	r28
    12ac:	1f 91       	pop	r17
    12ae:	0f 91       	pop	r16
    12b0:	08 95       	ret

000012b2 <__vector_1>:
    12b2:	1f 92       	push	r1
    12b4:	0f 92       	push	r0
    12b6:	0f b6       	in	r0, 0x3f	; 63
    12b8:	0f 92       	push	r0
    12ba:	11 24       	eor	r1, r1
    12bc:	2f 93       	push	r18
    12be:	3f 93       	push	r19
    12c0:	4f 93       	push	r20
    12c2:	5f 93       	push	r21
    12c4:	6f 93       	push	r22
    12c6:	7f 93       	push	r23
    12c8:	8f 93       	push	r24
    12ca:	9f 93       	push	r25
    12cc:	af 93       	push	r26
    12ce:	bf 93       	push	r27
    12d0:	ef 93       	push	r30
    12d2:	ff 93       	push	r31
    12d4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    12d8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    12dc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12e0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12e4:	c9 01       	movw	r24, r18
    12e6:	03 2e       	mov	r0, r19
    12e8:	00 0c       	add	r0, r0
    12ea:	aa 0b       	sbc	r26, r26
    12ec:	bb 0b       	sbc	r27, r27
    12ee:	dc 01       	movw	r26, r24
    12f0:	99 27       	eor	r25, r25
    12f2:	88 27       	eor	r24, r24
    12f4:	60 e0       	ldi	r22, 0x00	; 0
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	84 2b       	or	r24, r20
    12fa:	95 2b       	or	r25, r21
    12fc:	a6 2b       	or	r26, r22
    12fe:	b7 2b       	or	r27, r23
    1300:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1304:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1308:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    130c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1310:	b0 9b       	sbis	0x16, 0	; 22
    1312:	1b c0       	rjmp	.+54     	; 0x134a <__vector_1+0x98>
    1314:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1318:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    131c:	c9 01       	movw	r24, r18
    131e:	01 96       	adiw	r24, 0x01	; 1
    1320:	09 2e       	mov	r0, r25
    1322:	00 0c       	add	r0, r0
    1324:	aa 0b       	sbc	r26, r26
    1326:	bb 0b       	sbc	r27, r27
    1328:	dc 01       	movw	r26, r24
    132a:	99 27       	eor	r25, r25
    132c:	88 27       	eor	r24, r24
    132e:	60 e0       	ldi	r22, 0x00	; 0
    1330:	70 e0       	ldi	r23, 0x00	; 0
    1332:	84 2b       	or	r24, r20
    1334:	95 2b       	or	r25, r21
    1336:	a6 2b       	or	r26, r22
    1338:	b7 2b       	or	r27, r23
    133a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    133e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1342:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1346:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    134a:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <mtable>
    134e:	f0 91 ab 01 	lds	r31, 0x01AB	; 0x8001ab <mtable+0x1>
    1352:	30 97       	sbiw	r30, 0x00	; 0
    1354:	39 f0       	breq	.+14     	; 0x1364 <__vector_1+0xb2>
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	70 e0       	ldi	r23, 0x00	; 0
    135a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <otable>
    135e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <otable+0x1>
    1362:	09 95       	icall
    1364:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1368:	ff 91       	pop	r31
    136a:	ef 91       	pop	r30
    136c:	bf 91       	pop	r27
    136e:	af 91       	pop	r26
    1370:	9f 91       	pop	r25
    1372:	8f 91       	pop	r24
    1374:	7f 91       	pop	r23
    1376:	6f 91       	pop	r22
    1378:	5f 91       	pop	r21
    137a:	4f 91       	pop	r20
    137c:	3f 91       	pop	r19
    137e:	2f 91       	pop	r18
    1380:	0f 90       	pop	r0
    1382:	0f be       	out	0x3f, r0	; 63
    1384:	0f 90       	pop	r0
    1386:	1f 90       	pop	r1
    1388:	18 95       	reti

0000138a <__vector_2>:
    138a:	1f 92       	push	r1
    138c:	0f 92       	push	r0
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	0f 92       	push	r0
    1392:	11 24       	eor	r1, r1
    1394:	2f 93       	push	r18
    1396:	3f 93       	push	r19
    1398:	4f 93       	push	r20
    139a:	5f 93       	push	r21
    139c:	6f 93       	push	r22
    139e:	7f 93       	push	r23
    13a0:	8f 93       	push	r24
    13a2:	9f 93       	push	r25
    13a4:	af 93       	push	r26
    13a6:	bf 93       	push	r27
    13a8:	ef 93       	push	r30
    13aa:	ff 93       	push	r31
    13ac:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    13b0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    13b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13bc:	c9 01       	movw	r24, r18
    13be:	03 2e       	mov	r0, r19
    13c0:	00 0c       	add	r0, r0
    13c2:	aa 0b       	sbc	r26, r26
    13c4:	bb 0b       	sbc	r27, r27
    13c6:	dc 01       	movw	r26, r24
    13c8:	99 27       	eor	r25, r25
    13ca:	88 27       	eor	r24, r24
    13cc:	60 e0       	ldi	r22, 0x00	; 0
    13ce:	70 e0       	ldi	r23, 0x00	; 0
    13d0:	84 2b       	or	r24, r20
    13d2:	95 2b       	or	r25, r21
    13d4:	a6 2b       	or	r26, r22
    13d6:	b7 2b       	or	r27, r23
    13d8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    13dc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    13e0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    13e4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    13e8:	b0 9b       	sbis	0x16, 0	; 22
    13ea:	1b c0       	rjmp	.+54     	; 0x1422 <__vector_2+0x98>
    13ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13f4:	c9 01       	movw	r24, r18
    13f6:	01 96       	adiw	r24, 0x01	; 1
    13f8:	09 2e       	mov	r0, r25
    13fa:	00 0c       	add	r0, r0
    13fc:	aa 0b       	sbc	r26, r26
    13fe:	bb 0b       	sbc	r27, r27
    1400:	dc 01       	movw	r26, r24
    1402:	99 27       	eor	r25, r25
    1404:	88 27       	eor	r24, r24
    1406:	60 e0       	ldi	r22, 0x00	; 0
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	84 2b       	or	r24, r20
    140c:	95 2b       	or	r25, r21
    140e:	a6 2b       	or	r26, r22
    1410:	b7 2b       	or	r27, r23
    1412:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1416:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    141a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    141e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1422:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <mtable+0x2>
    1426:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <mtable+0x3>
    142a:	30 97       	sbiw	r30, 0x00	; 0
    142c:	39 f0       	breq	.+14     	; 0x143c <__vector_2+0xb2>
    142e:	61 e0       	ldi	r22, 0x01	; 1
    1430:	70 e0       	ldi	r23, 0x00	; 0
    1432:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <otable+0x2>
    1436:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <otable+0x3>
    143a:	09 95       	icall
    143c:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1440:	ff 91       	pop	r31
    1442:	ef 91       	pop	r30
    1444:	bf 91       	pop	r27
    1446:	af 91       	pop	r26
    1448:	9f 91       	pop	r25
    144a:	8f 91       	pop	r24
    144c:	7f 91       	pop	r23
    144e:	6f 91       	pop	r22
    1450:	5f 91       	pop	r21
    1452:	4f 91       	pop	r20
    1454:	3f 91       	pop	r19
    1456:	2f 91       	pop	r18
    1458:	0f 90       	pop	r0
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	0f 90       	pop	r0
    145e:	1f 90       	pop	r1
    1460:	18 95       	reti

00001462 <__vector_3>:
    1462:	1f 92       	push	r1
    1464:	0f 92       	push	r0
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	0f 92       	push	r0
    146a:	11 24       	eor	r1, r1
    146c:	2f 93       	push	r18
    146e:	3f 93       	push	r19
    1470:	4f 93       	push	r20
    1472:	5f 93       	push	r21
    1474:	6f 93       	push	r22
    1476:	7f 93       	push	r23
    1478:	8f 93       	push	r24
    147a:	9f 93       	push	r25
    147c:	af 93       	push	r26
    147e:	bf 93       	push	r27
    1480:	ef 93       	push	r30
    1482:	ff 93       	push	r31
    1484:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1488:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    148c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1490:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1494:	c9 01       	movw	r24, r18
    1496:	03 2e       	mov	r0, r19
    1498:	00 0c       	add	r0, r0
    149a:	aa 0b       	sbc	r26, r26
    149c:	bb 0b       	sbc	r27, r27
    149e:	dc 01       	movw	r26, r24
    14a0:	99 27       	eor	r25, r25
    14a2:	88 27       	eor	r24, r24
    14a4:	60 e0       	ldi	r22, 0x00	; 0
    14a6:	70 e0       	ldi	r23, 0x00	; 0
    14a8:	84 2b       	or	r24, r20
    14aa:	95 2b       	or	r25, r21
    14ac:	a6 2b       	or	r26, r22
    14ae:	b7 2b       	or	r27, r23
    14b0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    14b4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    14b8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    14bc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    14c0:	b0 9b       	sbis	0x16, 0	; 22
    14c2:	1b c0       	rjmp	.+54     	; 0x14fa <__vector_3+0x98>
    14c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14cc:	c9 01       	movw	r24, r18
    14ce:	01 96       	adiw	r24, 0x01	; 1
    14d0:	09 2e       	mov	r0, r25
    14d2:	00 0c       	add	r0, r0
    14d4:	aa 0b       	sbc	r26, r26
    14d6:	bb 0b       	sbc	r27, r27
    14d8:	dc 01       	movw	r26, r24
    14da:	99 27       	eor	r25, r25
    14dc:	88 27       	eor	r24, r24
    14de:	60 e0       	ldi	r22, 0x00	; 0
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	84 2b       	or	r24, r20
    14e4:	95 2b       	or	r25, r21
    14e6:	a6 2b       	or	r26, r22
    14e8:	b7 2b       	or	r27, r23
    14ea:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    14ee:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    14f2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    14f6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    14fa:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable+0x4>
    14fe:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x5>
    1502:	30 97       	sbiw	r30, 0x00	; 0
    1504:	39 f0       	breq	.+14     	; 0x1514 <__vector_3+0xb2>
    1506:	62 e0       	ldi	r22, 0x02	; 2
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable+0x4>
    150e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x5>
    1512:	09 95       	icall
    1514:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1518:	ff 91       	pop	r31
    151a:	ef 91       	pop	r30
    151c:	bf 91       	pop	r27
    151e:	af 91       	pop	r26
    1520:	9f 91       	pop	r25
    1522:	8f 91       	pop	r24
    1524:	7f 91       	pop	r23
    1526:	6f 91       	pop	r22
    1528:	5f 91       	pop	r21
    152a:	4f 91       	pop	r20
    152c:	3f 91       	pop	r19
    152e:	2f 91       	pop	r18
    1530:	0f 90       	pop	r0
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	0f 90       	pop	r0
    1536:	1f 90       	pop	r1
    1538:	18 95       	reti

0000153a <__vector_4>:
    153a:	1f 92       	push	r1
    153c:	0f 92       	push	r0
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	0f 92       	push	r0
    1542:	11 24       	eor	r1, r1
    1544:	2f 93       	push	r18
    1546:	3f 93       	push	r19
    1548:	4f 93       	push	r20
    154a:	5f 93       	push	r21
    154c:	6f 93       	push	r22
    154e:	7f 93       	push	r23
    1550:	8f 93       	push	r24
    1552:	9f 93       	push	r25
    1554:	af 93       	push	r26
    1556:	bf 93       	push	r27
    1558:	ef 93       	push	r30
    155a:	ff 93       	push	r31
    155c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1560:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1564:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1568:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    156c:	c9 01       	movw	r24, r18
    156e:	03 2e       	mov	r0, r19
    1570:	00 0c       	add	r0, r0
    1572:	aa 0b       	sbc	r26, r26
    1574:	bb 0b       	sbc	r27, r27
    1576:	dc 01       	movw	r26, r24
    1578:	99 27       	eor	r25, r25
    157a:	88 27       	eor	r24, r24
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	84 2b       	or	r24, r20
    1582:	95 2b       	or	r25, r21
    1584:	a6 2b       	or	r26, r22
    1586:	b7 2b       	or	r27, r23
    1588:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    158c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1590:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1594:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1598:	b0 9b       	sbis	0x16, 0	; 22
    159a:	1b c0       	rjmp	.+54     	; 0x15d2 <__vector_4+0x98>
    159c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15a4:	c9 01       	movw	r24, r18
    15a6:	01 96       	adiw	r24, 0x01	; 1
    15a8:	09 2e       	mov	r0, r25
    15aa:	00 0c       	add	r0, r0
    15ac:	aa 0b       	sbc	r26, r26
    15ae:	bb 0b       	sbc	r27, r27
    15b0:	dc 01       	movw	r26, r24
    15b2:	99 27       	eor	r25, r25
    15b4:	88 27       	eor	r24, r24
    15b6:	60 e0       	ldi	r22, 0x00	; 0
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	84 2b       	or	r24, r20
    15bc:	95 2b       	or	r25, r21
    15be:	a6 2b       	or	r26, r22
    15c0:	b7 2b       	or	r27, r23
    15c2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    15c6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    15ca:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    15ce:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    15d2:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x6>
    15d6:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x7>
    15da:	30 97       	sbiw	r30, 0x00	; 0
    15dc:	39 f0       	breq	.+14     	; 0x15ec <__vector_4+0xb2>
    15de:	63 e0       	ldi	r22, 0x03	; 3
    15e0:	70 e0       	ldi	r23, 0x00	; 0
    15e2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x6>
    15e6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x7>
    15ea:	09 95       	icall
    15ec:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    15f0:	ff 91       	pop	r31
    15f2:	ef 91       	pop	r30
    15f4:	bf 91       	pop	r27
    15f6:	af 91       	pop	r26
    15f8:	9f 91       	pop	r25
    15fa:	8f 91       	pop	r24
    15fc:	7f 91       	pop	r23
    15fe:	6f 91       	pop	r22
    1600:	5f 91       	pop	r21
    1602:	4f 91       	pop	r20
    1604:	3f 91       	pop	r19
    1606:	2f 91       	pop	r18
    1608:	0f 90       	pop	r0
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	0f 90       	pop	r0
    160e:	1f 90       	pop	r1
    1610:	18 95       	reti

00001612 <__vector_5>:
    1612:	1f 92       	push	r1
    1614:	0f 92       	push	r0
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	0f 92       	push	r0
    161a:	11 24       	eor	r1, r1
    161c:	2f 93       	push	r18
    161e:	3f 93       	push	r19
    1620:	4f 93       	push	r20
    1622:	5f 93       	push	r21
    1624:	6f 93       	push	r22
    1626:	7f 93       	push	r23
    1628:	8f 93       	push	r24
    162a:	9f 93       	push	r25
    162c:	af 93       	push	r26
    162e:	bf 93       	push	r27
    1630:	ef 93       	push	r30
    1632:	ff 93       	push	r31
    1634:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1638:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    163c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1640:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1644:	c9 01       	movw	r24, r18
    1646:	03 2e       	mov	r0, r19
    1648:	00 0c       	add	r0, r0
    164a:	aa 0b       	sbc	r26, r26
    164c:	bb 0b       	sbc	r27, r27
    164e:	dc 01       	movw	r26, r24
    1650:	99 27       	eor	r25, r25
    1652:	88 27       	eor	r24, r24
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	70 e0       	ldi	r23, 0x00	; 0
    1658:	84 2b       	or	r24, r20
    165a:	95 2b       	or	r25, r21
    165c:	a6 2b       	or	r26, r22
    165e:	b7 2b       	or	r27, r23
    1660:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1664:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1668:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    166c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1670:	b0 9b       	sbis	0x16, 0	; 22
    1672:	1b c0       	rjmp	.+54     	; 0x16aa <__vector_5+0x98>
    1674:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1678:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    167c:	c9 01       	movw	r24, r18
    167e:	01 96       	adiw	r24, 0x01	; 1
    1680:	09 2e       	mov	r0, r25
    1682:	00 0c       	add	r0, r0
    1684:	aa 0b       	sbc	r26, r26
    1686:	bb 0b       	sbc	r27, r27
    1688:	dc 01       	movw	r26, r24
    168a:	99 27       	eor	r25, r25
    168c:	88 27       	eor	r24, r24
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	70 e0       	ldi	r23, 0x00	; 0
    1692:	84 2b       	or	r24, r20
    1694:	95 2b       	or	r25, r21
    1696:	a6 2b       	or	r26, r22
    1698:	b7 2b       	or	r27, r23
    169a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    169e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    16a2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    16a6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    16aa:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x8>
    16ae:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x9>
    16b2:	30 97       	sbiw	r30, 0x00	; 0
    16b4:	39 f0       	breq	.+14     	; 0x16c4 <__vector_5+0xb2>
    16b6:	64 e0       	ldi	r22, 0x04	; 4
    16b8:	70 e0       	ldi	r23, 0x00	; 0
    16ba:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x8>
    16be:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x9>
    16c2:	09 95       	icall
    16c4:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    16c8:	ff 91       	pop	r31
    16ca:	ef 91       	pop	r30
    16cc:	bf 91       	pop	r27
    16ce:	af 91       	pop	r26
    16d0:	9f 91       	pop	r25
    16d2:	8f 91       	pop	r24
    16d4:	7f 91       	pop	r23
    16d6:	6f 91       	pop	r22
    16d8:	5f 91       	pop	r21
    16da:	4f 91       	pop	r20
    16dc:	3f 91       	pop	r19
    16de:	2f 91       	pop	r18
    16e0:	0f 90       	pop	r0
    16e2:	0f be       	out	0x3f, r0	; 63
    16e4:	0f 90       	pop	r0
    16e6:	1f 90       	pop	r1
    16e8:	18 95       	reti

000016ea <__vector_10>:
    16ea:	1f 92       	push	r1
    16ec:	0f 92       	push	r0
    16ee:	0f b6       	in	r0, 0x3f	; 63
    16f0:	0f 92       	push	r0
    16f2:	11 24       	eor	r1, r1
    16f4:	2f 93       	push	r18
    16f6:	3f 93       	push	r19
    16f8:	4f 93       	push	r20
    16fa:	5f 93       	push	r21
    16fc:	6f 93       	push	r22
    16fe:	7f 93       	push	r23
    1700:	8f 93       	push	r24
    1702:	9f 93       	push	r25
    1704:	af 93       	push	r26
    1706:	bf 93       	push	r27
    1708:	ef 93       	push	r30
    170a:	ff 93       	push	r31
    170c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1710:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1714:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1718:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    171c:	c9 01       	movw	r24, r18
    171e:	03 2e       	mov	r0, r19
    1720:	00 0c       	add	r0, r0
    1722:	aa 0b       	sbc	r26, r26
    1724:	bb 0b       	sbc	r27, r27
    1726:	dc 01       	movw	r26, r24
    1728:	99 27       	eor	r25, r25
    172a:	88 27       	eor	r24, r24
    172c:	60 e0       	ldi	r22, 0x00	; 0
    172e:	70 e0       	ldi	r23, 0x00	; 0
    1730:	84 2b       	or	r24, r20
    1732:	95 2b       	or	r25, r21
    1734:	a6 2b       	or	r26, r22
    1736:	b7 2b       	or	r27, r23
    1738:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    173c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1740:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1744:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1748:	b0 9b       	sbis	0x16, 0	; 22
    174a:	1b c0       	rjmp	.+54     	; 0x1782 <__vector_10+0x98>
    174c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1750:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1754:	c9 01       	movw	r24, r18
    1756:	01 96       	adiw	r24, 0x01	; 1
    1758:	09 2e       	mov	r0, r25
    175a:	00 0c       	add	r0, r0
    175c:	aa 0b       	sbc	r26, r26
    175e:	bb 0b       	sbc	r27, r27
    1760:	dc 01       	movw	r26, r24
    1762:	99 27       	eor	r25, r25
    1764:	88 27       	eor	r24, r24
    1766:	60 e0       	ldi	r22, 0x00	; 0
    1768:	70 e0       	ldi	r23, 0x00	; 0
    176a:	84 2b       	or	r24, r20
    176c:	95 2b       	or	r25, r21
    176e:	a6 2b       	or	r26, r22
    1770:	b7 2b       	or	r27, r23
    1772:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1776:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    177a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    177e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1782:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0xa>
    1786:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0xb>
    178a:	30 97       	sbiw	r30, 0x00	; 0
    178c:	39 f0       	breq	.+14     	; 0x179c <__vector_10+0xb2>
    178e:	65 e0       	ldi	r22, 0x05	; 5
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0xa>
    1796:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0xb>
    179a:	09 95       	icall
    179c:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    17a0:	ff 91       	pop	r31
    17a2:	ef 91       	pop	r30
    17a4:	bf 91       	pop	r27
    17a6:	af 91       	pop	r26
    17a8:	9f 91       	pop	r25
    17aa:	8f 91       	pop	r24
    17ac:	7f 91       	pop	r23
    17ae:	6f 91       	pop	r22
    17b0:	5f 91       	pop	r21
    17b2:	4f 91       	pop	r20
    17b4:	3f 91       	pop	r19
    17b6:	2f 91       	pop	r18
    17b8:	0f 90       	pop	r0
    17ba:	0f be       	out	0x3f, r0	; 63
    17bc:	0f 90       	pop	r0
    17be:	1f 90       	pop	r1
    17c0:	18 95       	reti

000017c2 <__vector_11>:
    17c2:	1f 92       	push	r1
    17c4:	0f 92       	push	r0
    17c6:	0f b6       	in	r0, 0x3f	; 63
    17c8:	0f 92       	push	r0
    17ca:	11 24       	eor	r1, r1
    17cc:	2f 93       	push	r18
    17ce:	3f 93       	push	r19
    17d0:	4f 93       	push	r20
    17d2:	5f 93       	push	r21
    17d4:	6f 93       	push	r22
    17d6:	7f 93       	push	r23
    17d8:	8f 93       	push	r24
    17da:	9f 93       	push	r25
    17dc:	af 93       	push	r26
    17de:	bf 93       	push	r27
    17e0:	ef 93       	push	r30
    17e2:	ff 93       	push	r31
    17e4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    17e8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    17ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17f4:	c9 01       	movw	r24, r18
    17f6:	03 2e       	mov	r0, r19
    17f8:	00 0c       	add	r0, r0
    17fa:	aa 0b       	sbc	r26, r26
    17fc:	bb 0b       	sbc	r27, r27
    17fe:	dc 01       	movw	r26, r24
    1800:	99 27       	eor	r25, r25
    1802:	88 27       	eor	r24, r24
    1804:	60 e0       	ldi	r22, 0x00	; 0
    1806:	70 e0       	ldi	r23, 0x00	; 0
    1808:	84 2b       	or	r24, r20
    180a:	95 2b       	or	r25, r21
    180c:	a6 2b       	or	r26, r22
    180e:	b7 2b       	or	r27, r23
    1810:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1814:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1818:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    181c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1820:	b0 9b       	sbis	0x16, 0	; 22
    1822:	1b c0       	rjmp	.+54     	; 0x185a <__vector_11+0x98>
    1824:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1828:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    182c:	c9 01       	movw	r24, r18
    182e:	01 96       	adiw	r24, 0x01	; 1
    1830:	09 2e       	mov	r0, r25
    1832:	00 0c       	add	r0, r0
    1834:	aa 0b       	sbc	r26, r26
    1836:	bb 0b       	sbc	r27, r27
    1838:	dc 01       	movw	r26, r24
    183a:	99 27       	eor	r25, r25
    183c:	88 27       	eor	r24, r24
    183e:	60 e0       	ldi	r22, 0x00	; 0
    1840:	70 e0       	ldi	r23, 0x00	; 0
    1842:	84 2b       	or	r24, r20
    1844:	95 2b       	or	r25, r21
    1846:	a6 2b       	or	r26, r22
    1848:	b7 2b       	or	r27, r23
    184a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    184e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1852:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1856:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    185a:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0xc>
    185e:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0xd>
    1862:	30 97       	sbiw	r30, 0x00	; 0
    1864:	39 f0       	breq	.+14     	; 0x1874 <__vector_11+0xb2>
    1866:	66 e0       	ldi	r22, 0x06	; 6
    1868:	70 e0       	ldi	r23, 0x00	; 0
    186a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0xc>
    186e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0xd>
    1872:	09 95       	icall
    1874:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1878:	ff 91       	pop	r31
    187a:	ef 91       	pop	r30
    187c:	bf 91       	pop	r27
    187e:	af 91       	pop	r26
    1880:	9f 91       	pop	r25
    1882:	8f 91       	pop	r24
    1884:	7f 91       	pop	r23
    1886:	6f 91       	pop	r22
    1888:	5f 91       	pop	r21
    188a:	4f 91       	pop	r20
    188c:	3f 91       	pop	r19
    188e:	2f 91       	pop	r18
    1890:	0f 90       	pop	r0
    1892:	0f be       	out	0x3f, r0	; 63
    1894:	0f 90       	pop	r0
    1896:	1f 90       	pop	r1
    1898:	18 95       	reti

0000189a <__vector_12>:
    189a:	1f 92       	push	r1
    189c:	0f 92       	push	r0
    189e:	0f b6       	in	r0, 0x3f	; 63
    18a0:	0f 92       	push	r0
    18a2:	11 24       	eor	r1, r1
    18a4:	2f 93       	push	r18
    18a6:	3f 93       	push	r19
    18a8:	4f 93       	push	r20
    18aa:	5f 93       	push	r21
    18ac:	6f 93       	push	r22
    18ae:	7f 93       	push	r23
    18b0:	8f 93       	push	r24
    18b2:	9f 93       	push	r25
    18b4:	af 93       	push	r26
    18b6:	bf 93       	push	r27
    18b8:	ef 93       	push	r30
    18ba:	ff 93       	push	r31
    18bc:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    18c0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    18c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18cc:	c9 01       	movw	r24, r18
    18ce:	03 2e       	mov	r0, r19
    18d0:	00 0c       	add	r0, r0
    18d2:	aa 0b       	sbc	r26, r26
    18d4:	bb 0b       	sbc	r27, r27
    18d6:	dc 01       	movw	r26, r24
    18d8:	99 27       	eor	r25, r25
    18da:	88 27       	eor	r24, r24
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	70 e0       	ldi	r23, 0x00	; 0
    18e0:	84 2b       	or	r24, r20
    18e2:	95 2b       	or	r25, r21
    18e4:	a6 2b       	or	r26, r22
    18e6:	b7 2b       	or	r27, r23
    18e8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    18ec:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    18f0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    18f4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    18f8:	b0 9b       	sbis	0x16, 0	; 22
    18fa:	1b c0       	rjmp	.+54     	; 0x1932 <__vector_12+0x98>
    18fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1900:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1904:	c9 01       	movw	r24, r18
    1906:	01 96       	adiw	r24, 0x01	; 1
    1908:	09 2e       	mov	r0, r25
    190a:	00 0c       	add	r0, r0
    190c:	aa 0b       	sbc	r26, r26
    190e:	bb 0b       	sbc	r27, r27
    1910:	dc 01       	movw	r26, r24
    1912:	99 27       	eor	r25, r25
    1914:	88 27       	eor	r24, r24
    1916:	60 e0       	ldi	r22, 0x00	; 0
    1918:	70 e0       	ldi	r23, 0x00	; 0
    191a:	84 2b       	or	r24, r20
    191c:	95 2b       	or	r25, r21
    191e:	a6 2b       	or	r26, r22
    1920:	b7 2b       	or	r27, r23
    1922:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1926:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    192a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    192e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1932:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xe>
    1936:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xf>
    193a:	30 97       	sbiw	r30, 0x00	; 0
    193c:	39 f0       	breq	.+14     	; 0x194c <__vector_12+0xb2>
    193e:	67 e0       	ldi	r22, 0x07	; 7
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xe>
    1946:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xf>
    194a:	09 95       	icall
    194c:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1950:	ff 91       	pop	r31
    1952:	ef 91       	pop	r30
    1954:	bf 91       	pop	r27
    1956:	af 91       	pop	r26
    1958:	9f 91       	pop	r25
    195a:	8f 91       	pop	r24
    195c:	7f 91       	pop	r23
    195e:	6f 91       	pop	r22
    1960:	5f 91       	pop	r21
    1962:	4f 91       	pop	r20
    1964:	3f 91       	pop	r19
    1966:	2f 91       	pop	r18
    1968:	0f 90       	pop	r0
    196a:	0f be       	out	0x3f, r0	; 63
    196c:	0f 90       	pop	r0
    196e:	1f 90       	pop	r1
    1970:	18 95       	reti

00001972 <__vector_13>:
    1972:	1f 92       	push	r1
    1974:	0f 92       	push	r0
    1976:	0f b6       	in	r0, 0x3f	; 63
    1978:	0f 92       	push	r0
    197a:	11 24       	eor	r1, r1
    197c:	2f 93       	push	r18
    197e:	3f 93       	push	r19
    1980:	4f 93       	push	r20
    1982:	5f 93       	push	r21
    1984:	6f 93       	push	r22
    1986:	7f 93       	push	r23
    1988:	8f 93       	push	r24
    198a:	9f 93       	push	r25
    198c:	af 93       	push	r26
    198e:	bf 93       	push	r27
    1990:	ef 93       	push	r30
    1992:	ff 93       	push	r31
    1994:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1998:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    199c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    19a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    19a4:	c9 01       	movw	r24, r18
    19a6:	03 2e       	mov	r0, r19
    19a8:	00 0c       	add	r0, r0
    19aa:	aa 0b       	sbc	r26, r26
    19ac:	bb 0b       	sbc	r27, r27
    19ae:	dc 01       	movw	r26, r24
    19b0:	99 27       	eor	r25, r25
    19b2:	88 27       	eor	r24, r24
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	70 e0       	ldi	r23, 0x00	; 0
    19b8:	84 2b       	or	r24, r20
    19ba:	95 2b       	or	r25, r21
    19bc:	a6 2b       	or	r26, r22
    19be:	b7 2b       	or	r27, r23
    19c0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    19c4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    19c8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    19cc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    19d0:	b0 9b       	sbis	0x16, 0	; 22
    19d2:	1b c0       	rjmp	.+54     	; 0x1a0a <__vector_13+0x98>
    19d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    19d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    19dc:	c9 01       	movw	r24, r18
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	09 2e       	mov	r0, r25
    19e2:	00 0c       	add	r0, r0
    19e4:	aa 0b       	sbc	r26, r26
    19e6:	bb 0b       	sbc	r27, r27
    19e8:	dc 01       	movw	r26, r24
    19ea:	99 27       	eor	r25, r25
    19ec:	88 27       	eor	r24, r24
    19ee:	60 e0       	ldi	r22, 0x00	; 0
    19f0:	70 e0       	ldi	r23, 0x00	; 0
    19f2:	84 2b       	or	r24, r20
    19f4:	95 2b       	or	r25, r21
    19f6:	a6 2b       	or	r26, r22
    19f8:	b7 2b       	or	r27, r23
    19fa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    19fe:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1a02:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1a06:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1a0a:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0x10>
    1a0e:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0x11>
    1a12:	30 97       	sbiw	r30, 0x00	; 0
    1a14:	39 f0       	breq	.+14     	; 0x1a24 <__vector_13+0xb2>
    1a16:	68 e0       	ldi	r22, 0x08	; 8
    1a18:	70 e0       	ldi	r23, 0x00	; 0
    1a1a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0x10>
    1a1e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0x11>
    1a22:	09 95       	icall
    1a24:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1a28:	ff 91       	pop	r31
    1a2a:	ef 91       	pop	r30
    1a2c:	bf 91       	pop	r27
    1a2e:	af 91       	pop	r26
    1a30:	9f 91       	pop	r25
    1a32:	8f 91       	pop	r24
    1a34:	7f 91       	pop	r23
    1a36:	6f 91       	pop	r22
    1a38:	5f 91       	pop	r21
    1a3a:	4f 91       	pop	r20
    1a3c:	3f 91       	pop	r19
    1a3e:	2f 91       	pop	r18
    1a40:	0f 90       	pop	r0
    1a42:	0f be       	out	0x3f, r0	; 63
    1a44:	0f 90       	pop	r0
    1a46:	1f 90       	pop	r1
    1a48:	18 95       	reti

00001a4a <__vector_14>:
    1a4a:	1f 92       	push	r1
    1a4c:	0f 92       	push	r0
    1a4e:	0f b6       	in	r0, 0x3f	; 63
    1a50:	0f 92       	push	r0
    1a52:	11 24       	eor	r1, r1
    1a54:	2f 93       	push	r18
    1a56:	3f 93       	push	r19
    1a58:	4f 93       	push	r20
    1a5a:	5f 93       	push	r21
    1a5c:	6f 93       	push	r22
    1a5e:	7f 93       	push	r23
    1a60:	8f 93       	push	r24
    1a62:	9f 93       	push	r25
    1a64:	af 93       	push	r26
    1a66:	bf 93       	push	r27
    1a68:	ef 93       	push	r30
    1a6a:	ff 93       	push	r31
    1a6c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1a70:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1a74:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a78:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a7c:	c9 01       	movw	r24, r18
    1a7e:	03 2e       	mov	r0, r19
    1a80:	00 0c       	add	r0, r0
    1a82:	aa 0b       	sbc	r26, r26
    1a84:	bb 0b       	sbc	r27, r27
    1a86:	dc 01       	movw	r26, r24
    1a88:	99 27       	eor	r25, r25
    1a8a:	88 27       	eor	r24, r24
    1a8c:	60 e0       	ldi	r22, 0x00	; 0
    1a8e:	70 e0       	ldi	r23, 0x00	; 0
    1a90:	84 2b       	or	r24, r20
    1a92:	95 2b       	or	r25, r21
    1a94:	a6 2b       	or	r26, r22
    1a96:	b7 2b       	or	r27, r23
    1a98:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1a9c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1aa0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1aa4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1aa8:	b0 9b       	sbis	0x16, 0	; 22
    1aaa:	1b c0       	rjmp	.+54     	; 0x1ae2 <__vector_14+0x98>
    1aac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ab0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ab4:	c9 01       	movw	r24, r18
    1ab6:	01 96       	adiw	r24, 0x01	; 1
    1ab8:	09 2e       	mov	r0, r25
    1aba:	00 0c       	add	r0, r0
    1abc:	aa 0b       	sbc	r26, r26
    1abe:	bb 0b       	sbc	r27, r27
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	99 27       	eor	r25, r25
    1ac4:	88 27       	eor	r24, r24
    1ac6:	60 e0       	ldi	r22, 0x00	; 0
    1ac8:	70 e0       	ldi	r23, 0x00	; 0
    1aca:	84 2b       	or	r24, r20
    1acc:	95 2b       	or	r25, r21
    1ace:	a6 2b       	or	r26, r22
    1ad0:	b7 2b       	or	r27, r23
    1ad2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1ad6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1ada:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1ade:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1ae2:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0x12>
    1ae6:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0x13>
    1aea:	30 97       	sbiw	r30, 0x00	; 0
    1aec:	39 f0       	breq	.+14     	; 0x1afc <__vector_14+0xb2>
    1aee:	69 e0       	ldi	r22, 0x09	; 9
    1af0:	70 e0       	ldi	r23, 0x00	; 0
    1af2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0x12>
    1af6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0x13>
    1afa:	09 95       	icall
    1afc:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1b00:	ff 91       	pop	r31
    1b02:	ef 91       	pop	r30
    1b04:	bf 91       	pop	r27
    1b06:	af 91       	pop	r26
    1b08:	9f 91       	pop	r25
    1b0a:	8f 91       	pop	r24
    1b0c:	7f 91       	pop	r23
    1b0e:	6f 91       	pop	r22
    1b10:	5f 91       	pop	r21
    1b12:	4f 91       	pop	r20
    1b14:	3f 91       	pop	r19
    1b16:	2f 91       	pop	r18
    1b18:	0f 90       	pop	r0
    1b1a:	0f be       	out	0x3f, r0	; 63
    1b1c:	0f 90       	pop	r0
    1b1e:	1f 90       	pop	r1
    1b20:	18 95       	reti

00001b22 <__vector_15>:
    1b22:	1f 92       	push	r1
    1b24:	0f 92       	push	r0
    1b26:	0f b6       	in	r0, 0x3f	; 63
    1b28:	0f 92       	push	r0
    1b2a:	11 24       	eor	r1, r1
    1b2c:	2f 93       	push	r18
    1b2e:	3f 93       	push	r19
    1b30:	4f 93       	push	r20
    1b32:	5f 93       	push	r21
    1b34:	6f 93       	push	r22
    1b36:	7f 93       	push	r23
    1b38:	8f 93       	push	r24
    1b3a:	9f 93       	push	r25
    1b3c:	af 93       	push	r26
    1b3e:	bf 93       	push	r27
    1b40:	ef 93       	push	r30
    1b42:	ff 93       	push	r31
    1b44:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1b48:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1b4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b54:	c9 01       	movw	r24, r18
    1b56:	03 2e       	mov	r0, r19
    1b58:	00 0c       	add	r0, r0
    1b5a:	aa 0b       	sbc	r26, r26
    1b5c:	bb 0b       	sbc	r27, r27
    1b5e:	dc 01       	movw	r26, r24
    1b60:	99 27       	eor	r25, r25
    1b62:	88 27       	eor	r24, r24
    1b64:	60 e0       	ldi	r22, 0x00	; 0
    1b66:	70 e0       	ldi	r23, 0x00	; 0
    1b68:	84 2b       	or	r24, r20
    1b6a:	95 2b       	or	r25, r21
    1b6c:	a6 2b       	or	r26, r22
    1b6e:	b7 2b       	or	r27, r23
    1b70:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1b74:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1b78:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1b7c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1b80:	b0 9b       	sbis	0x16, 0	; 22
    1b82:	1b c0       	rjmp	.+54     	; 0x1bba <__vector_15+0x98>
    1b84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b8c:	c9 01       	movw	r24, r18
    1b8e:	01 96       	adiw	r24, 0x01	; 1
    1b90:	09 2e       	mov	r0, r25
    1b92:	00 0c       	add	r0, r0
    1b94:	aa 0b       	sbc	r26, r26
    1b96:	bb 0b       	sbc	r27, r27
    1b98:	dc 01       	movw	r26, r24
    1b9a:	99 27       	eor	r25, r25
    1b9c:	88 27       	eor	r24, r24
    1b9e:	60 e0       	ldi	r22, 0x00	; 0
    1ba0:	70 e0       	ldi	r23, 0x00	; 0
    1ba2:	84 2b       	or	r24, r20
    1ba4:	95 2b       	or	r25, r21
    1ba6:	a6 2b       	or	r26, r22
    1ba8:	b7 2b       	or	r27, r23
    1baa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1bae:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1bb2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1bb6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1bba:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x14>
    1bbe:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x15>
    1bc2:	30 97       	sbiw	r30, 0x00	; 0
    1bc4:	39 f0       	breq	.+14     	; 0x1bd4 <__vector_15+0xb2>
    1bc6:	6a e0       	ldi	r22, 0x0A	; 10
    1bc8:	70 e0       	ldi	r23, 0x00	; 0
    1bca:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x14>
    1bce:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x15>
    1bd2:	09 95       	icall
    1bd4:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1bd8:	ff 91       	pop	r31
    1bda:	ef 91       	pop	r30
    1bdc:	bf 91       	pop	r27
    1bde:	af 91       	pop	r26
    1be0:	9f 91       	pop	r25
    1be2:	8f 91       	pop	r24
    1be4:	7f 91       	pop	r23
    1be6:	6f 91       	pop	r22
    1be8:	5f 91       	pop	r21
    1bea:	4f 91       	pop	r20
    1bec:	3f 91       	pop	r19
    1bee:	2f 91       	pop	r18
    1bf0:	0f 90       	pop	r0
    1bf2:	0f be       	out	0x3f, r0	; 63
    1bf4:	0f 90       	pop	r0
    1bf6:	1f 90       	pop	r1
    1bf8:	18 95       	reti

00001bfa <__vector_16>:
    1bfa:	1f 92       	push	r1
    1bfc:	0f 92       	push	r0
    1bfe:	0f b6       	in	r0, 0x3f	; 63
    1c00:	0f 92       	push	r0
    1c02:	11 24       	eor	r1, r1
    1c04:	2f 93       	push	r18
    1c06:	3f 93       	push	r19
    1c08:	4f 93       	push	r20
    1c0a:	5f 93       	push	r21
    1c0c:	6f 93       	push	r22
    1c0e:	7f 93       	push	r23
    1c10:	8f 93       	push	r24
    1c12:	9f 93       	push	r25
    1c14:	af 93       	push	r26
    1c16:	bf 93       	push	r27
    1c18:	ef 93       	push	r30
    1c1a:	ff 93       	push	r31
    1c1c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1c20:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1c24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c2c:	c9 01       	movw	r24, r18
    1c2e:	03 2e       	mov	r0, r19
    1c30:	00 0c       	add	r0, r0
    1c32:	aa 0b       	sbc	r26, r26
    1c34:	bb 0b       	sbc	r27, r27
    1c36:	dc 01       	movw	r26, r24
    1c38:	99 27       	eor	r25, r25
    1c3a:	88 27       	eor	r24, r24
    1c3c:	60 e0       	ldi	r22, 0x00	; 0
    1c3e:	70 e0       	ldi	r23, 0x00	; 0
    1c40:	84 2b       	or	r24, r20
    1c42:	95 2b       	or	r25, r21
    1c44:	a6 2b       	or	r26, r22
    1c46:	b7 2b       	or	r27, r23
    1c48:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1c4c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1c50:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1c54:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1c58:	b0 9b       	sbis	0x16, 0	; 22
    1c5a:	1b c0       	rjmp	.+54     	; 0x1c92 <__vector_16+0x98>
    1c5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c64:	c9 01       	movw	r24, r18
    1c66:	01 96       	adiw	r24, 0x01	; 1
    1c68:	09 2e       	mov	r0, r25
    1c6a:	00 0c       	add	r0, r0
    1c6c:	aa 0b       	sbc	r26, r26
    1c6e:	bb 0b       	sbc	r27, r27
    1c70:	dc 01       	movw	r26, r24
    1c72:	99 27       	eor	r25, r25
    1c74:	88 27       	eor	r24, r24
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	70 e0       	ldi	r23, 0x00	; 0
    1c7a:	84 2b       	or	r24, r20
    1c7c:	95 2b       	or	r25, r21
    1c7e:	a6 2b       	or	r26, r22
    1c80:	b7 2b       	or	r27, r23
    1c82:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1c86:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1c8a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1c8e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1c92:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x16>
    1c96:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x17>
    1c9a:	30 97       	sbiw	r30, 0x00	; 0
    1c9c:	39 f0       	breq	.+14     	; 0x1cac <__vector_16+0xb2>
    1c9e:	6b e0       	ldi	r22, 0x0B	; 11
    1ca0:	70 e0       	ldi	r23, 0x00	; 0
    1ca2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x16>
    1ca6:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x17>
    1caa:	09 95       	icall
    1cac:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1cb0:	ff 91       	pop	r31
    1cb2:	ef 91       	pop	r30
    1cb4:	bf 91       	pop	r27
    1cb6:	af 91       	pop	r26
    1cb8:	9f 91       	pop	r25
    1cba:	8f 91       	pop	r24
    1cbc:	7f 91       	pop	r23
    1cbe:	6f 91       	pop	r22
    1cc0:	5f 91       	pop	r21
    1cc2:	4f 91       	pop	r20
    1cc4:	3f 91       	pop	r19
    1cc6:	2f 91       	pop	r18
    1cc8:	0f 90       	pop	r0
    1cca:	0f be       	out	0x3f, r0	; 63
    1ccc:	0f 90       	pop	r0
    1cce:	1f 90       	pop	r1
    1cd0:	18 95       	reti

00001cd2 <__vector_17>:
    1cd2:	1f 92       	push	r1
    1cd4:	0f 92       	push	r0
    1cd6:	0f b6       	in	r0, 0x3f	; 63
    1cd8:	0f 92       	push	r0
    1cda:	11 24       	eor	r1, r1
    1cdc:	2f 93       	push	r18
    1cde:	3f 93       	push	r19
    1ce0:	4f 93       	push	r20
    1ce2:	5f 93       	push	r21
    1ce4:	6f 93       	push	r22
    1ce6:	7f 93       	push	r23
    1ce8:	8f 93       	push	r24
    1cea:	9f 93       	push	r25
    1cec:	af 93       	push	r26
    1cee:	bf 93       	push	r27
    1cf0:	ef 93       	push	r30
    1cf2:	ff 93       	push	r31
    1cf4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1cf8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1cfc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d04:	c9 01       	movw	r24, r18
    1d06:	03 2e       	mov	r0, r19
    1d08:	00 0c       	add	r0, r0
    1d0a:	aa 0b       	sbc	r26, r26
    1d0c:	bb 0b       	sbc	r27, r27
    1d0e:	dc 01       	movw	r26, r24
    1d10:	99 27       	eor	r25, r25
    1d12:	88 27       	eor	r24, r24
    1d14:	60 e0       	ldi	r22, 0x00	; 0
    1d16:	70 e0       	ldi	r23, 0x00	; 0
    1d18:	84 2b       	or	r24, r20
    1d1a:	95 2b       	or	r25, r21
    1d1c:	a6 2b       	or	r26, r22
    1d1e:	b7 2b       	or	r27, r23
    1d20:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1d24:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1d28:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1d2c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1d30:	b0 9b       	sbis	0x16, 0	; 22
    1d32:	1b c0       	rjmp	.+54     	; 0x1d6a <__vector_17+0x98>
    1d34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d3c:	c9 01       	movw	r24, r18
    1d3e:	01 96       	adiw	r24, 0x01	; 1
    1d40:	09 2e       	mov	r0, r25
    1d42:	00 0c       	add	r0, r0
    1d44:	aa 0b       	sbc	r26, r26
    1d46:	bb 0b       	sbc	r27, r27
    1d48:	dc 01       	movw	r26, r24
    1d4a:	99 27       	eor	r25, r25
    1d4c:	88 27       	eor	r24, r24
    1d4e:	60 e0       	ldi	r22, 0x00	; 0
    1d50:	70 e0       	ldi	r23, 0x00	; 0
    1d52:	84 2b       	or	r24, r20
    1d54:	95 2b       	or	r25, r21
    1d56:	a6 2b       	or	r26, r22
    1d58:	b7 2b       	or	r27, r23
    1d5a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1d5e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1d62:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1d66:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1d6a:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x18>
    1d6e:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x19>
    1d72:	30 97       	sbiw	r30, 0x00	; 0
    1d74:	39 f0       	breq	.+14     	; 0x1d84 <__vector_17+0xb2>
    1d76:	6c e0       	ldi	r22, 0x0C	; 12
    1d78:	70 e0       	ldi	r23, 0x00	; 0
    1d7a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x18>
    1d7e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x19>
    1d82:	09 95       	icall
    1d84:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1d88:	ff 91       	pop	r31
    1d8a:	ef 91       	pop	r30
    1d8c:	bf 91       	pop	r27
    1d8e:	af 91       	pop	r26
    1d90:	9f 91       	pop	r25
    1d92:	8f 91       	pop	r24
    1d94:	7f 91       	pop	r23
    1d96:	6f 91       	pop	r22
    1d98:	5f 91       	pop	r21
    1d9a:	4f 91       	pop	r20
    1d9c:	3f 91       	pop	r19
    1d9e:	2f 91       	pop	r18
    1da0:	0f 90       	pop	r0
    1da2:	0f be       	out	0x3f, r0	; 63
    1da4:	0f 90       	pop	r0
    1da6:	1f 90       	pop	r1
    1da8:	18 95       	reti

00001daa <__vector_18>:
    1daa:	1f 92       	push	r1
    1dac:	0f 92       	push	r0
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	0f 92       	push	r0
    1db2:	11 24       	eor	r1, r1
    1db4:	2f 93       	push	r18
    1db6:	3f 93       	push	r19
    1db8:	4f 93       	push	r20
    1dba:	5f 93       	push	r21
    1dbc:	6f 93       	push	r22
    1dbe:	7f 93       	push	r23
    1dc0:	8f 93       	push	r24
    1dc2:	9f 93       	push	r25
    1dc4:	af 93       	push	r26
    1dc6:	bf 93       	push	r27
    1dc8:	ef 93       	push	r30
    1dca:	ff 93       	push	r31
    1dcc:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1dd0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1dd4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1dd8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ddc:	c9 01       	movw	r24, r18
    1dde:	03 2e       	mov	r0, r19
    1de0:	00 0c       	add	r0, r0
    1de2:	aa 0b       	sbc	r26, r26
    1de4:	bb 0b       	sbc	r27, r27
    1de6:	dc 01       	movw	r26, r24
    1de8:	99 27       	eor	r25, r25
    1dea:	88 27       	eor	r24, r24
    1dec:	60 e0       	ldi	r22, 0x00	; 0
    1dee:	70 e0       	ldi	r23, 0x00	; 0
    1df0:	84 2b       	or	r24, r20
    1df2:	95 2b       	or	r25, r21
    1df4:	a6 2b       	or	r26, r22
    1df6:	b7 2b       	or	r27, r23
    1df8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1dfc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1e00:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1e04:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1e08:	b0 9b       	sbis	0x16, 0	; 22
    1e0a:	1b c0       	rjmp	.+54     	; 0x1e42 <__vector_18+0x98>
    1e0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e14:	c9 01       	movw	r24, r18
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	09 2e       	mov	r0, r25
    1e1a:	00 0c       	add	r0, r0
    1e1c:	aa 0b       	sbc	r26, r26
    1e1e:	bb 0b       	sbc	r27, r27
    1e20:	dc 01       	movw	r26, r24
    1e22:	99 27       	eor	r25, r25
    1e24:	88 27       	eor	r24, r24
    1e26:	60 e0       	ldi	r22, 0x00	; 0
    1e28:	70 e0       	ldi	r23, 0x00	; 0
    1e2a:	84 2b       	or	r24, r20
    1e2c:	95 2b       	or	r25, r21
    1e2e:	a6 2b       	or	r26, r22
    1e30:	b7 2b       	or	r27, r23
    1e32:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1e36:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1e3a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1e3e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1e42:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x1a>
    1e46:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x1b>
    1e4a:	30 97       	sbiw	r30, 0x00	; 0
    1e4c:	39 f0       	breq	.+14     	; 0x1e5c <__vector_18+0xb2>
    1e4e:	6d e0       	ldi	r22, 0x0D	; 13
    1e50:	70 e0       	ldi	r23, 0x00	; 0
    1e52:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x1a>
    1e56:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x1b>
    1e5a:	09 95       	icall
    1e5c:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1e60:	ff 91       	pop	r31
    1e62:	ef 91       	pop	r30
    1e64:	bf 91       	pop	r27
    1e66:	af 91       	pop	r26
    1e68:	9f 91       	pop	r25
    1e6a:	8f 91       	pop	r24
    1e6c:	7f 91       	pop	r23
    1e6e:	6f 91       	pop	r22
    1e70:	5f 91       	pop	r21
    1e72:	4f 91       	pop	r20
    1e74:	3f 91       	pop	r19
    1e76:	2f 91       	pop	r18
    1e78:	0f 90       	pop	r0
    1e7a:	0f be       	out	0x3f, r0	; 63
    1e7c:	0f 90       	pop	r0
    1e7e:	1f 90       	pop	r1
    1e80:	18 95       	reti

00001e82 <__vector_19>:
    1e82:	1f 92       	push	r1
    1e84:	0f 92       	push	r0
    1e86:	0f b6       	in	r0, 0x3f	; 63
    1e88:	0f 92       	push	r0
    1e8a:	11 24       	eor	r1, r1
    1e8c:	2f 93       	push	r18
    1e8e:	3f 93       	push	r19
    1e90:	4f 93       	push	r20
    1e92:	5f 93       	push	r21
    1e94:	6f 93       	push	r22
    1e96:	7f 93       	push	r23
    1e98:	8f 93       	push	r24
    1e9a:	9f 93       	push	r25
    1e9c:	af 93       	push	r26
    1e9e:	bf 93       	push	r27
    1ea0:	ef 93       	push	r30
    1ea2:	ff 93       	push	r31
    1ea4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1ea8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1eac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1eb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1eb4:	c9 01       	movw	r24, r18
    1eb6:	03 2e       	mov	r0, r19
    1eb8:	00 0c       	add	r0, r0
    1eba:	aa 0b       	sbc	r26, r26
    1ebc:	bb 0b       	sbc	r27, r27
    1ebe:	dc 01       	movw	r26, r24
    1ec0:	99 27       	eor	r25, r25
    1ec2:	88 27       	eor	r24, r24
    1ec4:	60 e0       	ldi	r22, 0x00	; 0
    1ec6:	70 e0       	ldi	r23, 0x00	; 0
    1ec8:	84 2b       	or	r24, r20
    1eca:	95 2b       	or	r25, r21
    1ecc:	a6 2b       	or	r26, r22
    1ece:	b7 2b       	or	r27, r23
    1ed0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1ed4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1ed8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1edc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1ee0:	b0 9b       	sbis	0x16, 0	; 22
    1ee2:	1b c0       	rjmp	.+54     	; 0x1f1a <__vector_19+0x98>
    1ee4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ee8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1eec:	c9 01       	movw	r24, r18
    1eee:	01 96       	adiw	r24, 0x01	; 1
    1ef0:	09 2e       	mov	r0, r25
    1ef2:	00 0c       	add	r0, r0
    1ef4:	aa 0b       	sbc	r26, r26
    1ef6:	bb 0b       	sbc	r27, r27
    1ef8:	dc 01       	movw	r26, r24
    1efa:	99 27       	eor	r25, r25
    1efc:	88 27       	eor	r24, r24
    1efe:	60 e0       	ldi	r22, 0x00	; 0
    1f00:	70 e0       	ldi	r23, 0x00	; 0
    1f02:	84 2b       	or	r24, r20
    1f04:	95 2b       	or	r25, r21
    1f06:	a6 2b       	or	r26, r22
    1f08:	b7 2b       	or	r27, r23
    1f0a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1f0e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1f12:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1f16:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1f1a:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x1c>
    1f1e:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x1d>
    1f22:	30 97       	sbiw	r30, 0x00	; 0
    1f24:	39 f0       	breq	.+14     	; 0x1f34 <__vector_19+0xb2>
    1f26:	6e e0       	ldi	r22, 0x0E	; 14
    1f28:	70 e0       	ldi	r23, 0x00	; 0
    1f2a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x1c>
    1f2e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x1d>
    1f32:	09 95       	icall
    1f34:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    1f38:	ff 91       	pop	r31
    1f3a:	ef 91       	pop	r30
    1f3c:	bf 91       	pop	r27
    1f3e:	af 91       	pop	r26
    1f40:	9f 91       	pop	r25
    1f42:	8f 91       	pop	r24
    1f44:	7f 91       	pop	r23
    1f46:	6f 91       	pop	r22
    1f48:	5f 91       	pop	r21
    1f4a:	4f 91       	pop	r20
    1f4c:	3f 91       	pop	r19
    1f4e:	2f 91       	pop	r18
    1f50:	0f 90       	pop	r0
    1f52:	0f be       	out	0x3f, r0	; 63
    1f54:	0f 90       	pop	r0
    1f56:	1f 90       	pop	r1
    1f58:	18 95       	reti

00001f5a <__vector_20>:
    1f5a:	1f 92       	push	r1
    1f5c:	0f 92       	push	r0
    1f5e:	0f b6       	in	r0, 0x3f	; 63
    1f60:	0f 92       	push	r0
    1f62:	11 24       	eor	r1, r1
    1f64:	2f 93       	push	r18
    1f66:	3f 93       	push	r19
    1f68:	4f 93       	push	r20
    1f6a:	5f 93       	push	r21
    1f6c:	6f 93       	push	r22
    1f6e:	7f 93       	push	r23
    1f70:	8f 93       	push	r24
    1f72:	9f 93       	push	r25
    1f74:	af 93       	push	r26
    1f76:	bf 93       	push	r27
    1f78:	ef 93       	push	r30
    1f7a:	ff 93       	push	r31
    1f7c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1f80:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1f84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f8c:	c9 01       	movw	r24, r18
    1f8e:	03 2e       	mov	r0, r19
    1f90:	00 0c       	add	r0, r0
    1f92:	aa 0b       	sbc	r26, r26
    1f94:	bb 0b       	sbc	r27, r27
    1f96:	dc 01       	movw	r26, r24
    1f98:	99 27       	eor	r25, r25
    1f9a:	88 27       	eor	r24, r24
    1f9c:	60 e0       	ldi	r22, 0x00	; 0
    1f9e:	70 e0       	ldi	r23, 0x00	; 0
    1fa0:	84 2b       	or	r24, r20
    1fa2:	95 2b       	or	r25, r21
    1fa4:	a6 2b       	or	r26, r22
    1fa6:	b7 2b       	or	r27, r23
    1fa8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1fac:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1fb0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1fb4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1fb8:	b0 9b       	sbis	0x16, 0	; 22
    1fba:	1b c0       	rjmp	.+54     	; 0x1ff2 <__vector_20+0x98>
    1fbc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1fc0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1fc4:	c9 01       	movw	r24, r18
    1fc6:	01 96       	adiw	r24, 0x01	; 1
    1fc8:	09 2e       	mov	r0, r25
    1fca:	00 0c       	add	r0, r0
    1fcc:	aa 0b       	sbc	r26, r26
    1fce:	bb 0b       	sbc	r27, r27
    1fd0:	dc 01       	movw	r26, r24
    1fd2:	99 27       	eor	r25, r25
    1fd4:	88 27       	eor	r24, r24
    1fd6:	60 e0       	ldi	r22, 0x00	; 0
    1fd8:	70 e0       	ldi	r23, 0x00	; 0
    1fda:	84 2b       	or	r24, r20
    1fdc:	95 2b       	or	r25, r21
    1fde:	a6 2b       	or	r26, r22
    1fe0:	b7 2b       	or	r27, r23
    1fe2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1fe6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1fea:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1fee:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1ff2:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1e>
    1ff6:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1f>
    1ffa:	30 97       	sbiw	r30, 0x00	; 0
    1ffc:	39 f0       	breq	.+14     	; 0x200c <__vector_20+0xb2>
    1ffe:	6f e0       	ldi	r22, 0x0F	; 15
    2000:	70 e0       	ldi	r23, 0x00	; 0
    2002:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1e>
    2006:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1f>
    200a:	09 95       	icall
    200c:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    2010:	ff 91       	pop	r31
    2012:	ef 91       	pop	r30
    2014:	bf 91       	pop	r27
    2016:	af 91       	pop	r26
    2018:	9f 91       	pop	r25
    201a:	8f 91       	pop	r24
    201c:	7f 91       	pop	r23
    201e:	6f 91       	pop	r22
    2020:	5f 91       	pop	r21
    2022:	4f 91       	pop	r20
    2024:	3f 91       	pop	r19
    2026:	2f 91       	pop	r18
    2028:	0f 90       	pop	r0
    202a:	0f be       	out	0x3f, r0	; 63
    202c:	0f 90       	pop	r0
    202e:	1f 90       	pop	r1
    2030:	18 95       	reti

00002032 <__vector_21>:
    2032:	1f 92       	push	r1
    2034:	0f 92       	push	r0
    2036:	0f b6       	in	r0, 0x3f	; 63
    2038:	0f 92       	push	r0
    203a:	11 24       	eor	r1, r1
    203c:	2f 93       	push	r18
    203e:	3f 93       	push	r19
    2040:	4f 93       	push	r20
    2042:	5f 93       	push	r21
    2044:	6f 93       	push	r22
    2046:	7f 93       	push	r23
    2048:	8f 93       	push	r24
    204a:	9f 93       	push	r25
    204c:	af 93       	push	r26
    204e:	bf 93       	push	r27
    2050:	ef 93       	push	r30
    2052:	ff 93       	push	r31
    2054:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    2058:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    205c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2060:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2064:	c9 01       	movw	r24, r18
    2066:	03 2e       	mov	r0, r19
    2068:	00 0c       	add	r0, r0
    206a:	aa 0b       	sbc	r26, r26
    206c:	bb 0b       	sbc	r27, r27
    206e:	dc 01       	movw	r26, r24
    2070:	99 27       	eor	r25, r25
    2072:	88 27       	eor	r24, r24
    2074:	60 e0       	ldi	r22, 0x00	; 0
    2076:	70 e0       	ldi	r23, 0x00	; 0
    2078:	84 2b       	or	r24, r20
    207a:	95 2b       	or	r25, r21
    207c:	a6 2b       	or	r26, r22
    207e:	b7 2b       	or	r27, r23
    2080:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    2084:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    2088:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    208c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    2090:	b0 9b       	sbis	0x16, 0	; 22
    2092:	1b c0       	rjmp	.+54     	; 0x20ca <__vector_21+0x98>
    2094:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2098:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    209c:	c9 01       	movw	r24, r18
    209e:	01 96       	adiw	r24, 0x01	; 1
    20a0:	09 2e       	mov	r0, r25
    20a2:	00 0c       	add	r0, r0
    20a4:	aa 0b       	sbc	r26, r26
    20a6:	bb 0b       	sbc	r27, r27
    20a8:	dc 01       	movw	r26, r24
    20aa:	99 27       	eor	r25, r25
    20ac:	88 27       	eor	r24, r24
    20ae:	60 e0       	ldi	r22, 0x00	; 0
    20b0:	70 e0       	ldi	r23, 0x00	; 0
    20b2:	84 2b       	or	r24, r20
    20b4:	95 2b       	or	r25, r21
    20b6:	a6 2b       	or	r26, r22
    20b8:	b7 2b       	or	r27, r23
    20ba:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    20be:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    20c2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    20c6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    20ca:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x20>
    20ce:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x21>
    20d2:	30 97       	sbiw	r30, 0x00	; 0
    20d4:	39 f0       	breq	.+14     	; 0x20e4 <__vector_21+0xb2>
    20d6:	60 e1       	ldi	r22, 0x10	; 16
    20d8:	70 e0       	ldi	r23, 0x00	; 0
    20da:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x20>
    20de:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x21>
    20e2:	09 95       	icall
    20e4:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    20e8:	ff 91       	pop	r31
    20ea:	ef 91       	pop	r30
    20ec:	bf 91       	pop	r27
    20ee:	af 91       	pop	r26
    20f0:	9f 91       	pop	r25
    20f2:	8f 91       	pop	r24
    20f4:	7f 91       	pop	r23
    20f6:	6f 91       	pop	r22
    20f8:	5f 91       	pop	r21
    20fa:	4f 91       	pop	r20
    20fc:	3f 91       	pop	r19
    20fe:	2f 91       	pop	r18
    2100:	0f 90       	pop	r0
    2102:	0f be       	out	0x3f, r0	; 63
    2104:	0f 90       	pop	r0
    2106:	1f 90       	pop	r1
    2108:	18 95       	reti

0000210a <__vector_22>:
    210a:	1f 92       	push	r1
    210c:	0f 92       	push	r0
    210e:	0f b6       	in	r0, 0x3f	; 63
    2110:	0f 92       	push	r0
    2112:	11 24       	eor	r1, r1
    2114:	2f 93       	push	r18
    2116:	3f 93       	push	r19
    2118:	4f 93       	push	r20
    211a:	5f 93       	push	r21
    211c:	6f 93       	push	r22
    211e:	7f 93       	push	r23
    2120:	8f 93       	push	r24
    2122:	9f 93       	push	r25
    2124:	af 93       	push	r26
    2126:	bf 93       	push	r27
    2128:	ef 93       	push	r30
    212a:	ff 93       	push	r31
    212c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    2130:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    2134:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2138:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    213c:	c9 01       	movw	r24, r18
    213e:	03 2e       	mov	r0, r19
    2140:	00 0c       	add	r0, r0
    2142:	aa 0b       	sbc	r26, r26
    2144:	bb 0b       	sbc	r27, r27
    2146:	dc 01       	movw	r26, r24
    2148:	99 27       	eor	r25, r25
    214a:	88 27       	eor	r24, r24
    214c:	60 e0       	ldi	r22, 0x00	; 0
    214e:	70 e0       	ldi	r23, 0x00	; 0
    2150:	84 2b       	or	r24, r20
    2152:	95 2b       	or	r25, r21
    2154:	a6 2b       	or	r26, r22
    2156:	b7 2b       	or	r27, r23
    2158:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    215c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    2160:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    2164:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    2168:	b0 9b       	sbis	0x16, 0	; 22
    216a:	1b c0       	rjmp	.+54     	; 0x21a2 <__vector_22+0x98>
    216c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2170:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2174:	c9 01       	movw	r24, r18
    2176:	01 96       	adiw	r24, 0x01	; 1
    2178:	09 2e       	mov	r0, r25
    217a:	00 0c       	add	r0, r0
    217c:	aa 0b       	sbc	r26, r26
    217e:	bb 0b       	sbc	r27, r27
    2180:	dc 01       	movw	r26, r24
    2182:	99 27       	eor	r25, r25
    2184:	88 27       	eor	r24, r24
    2186:	60 e0       	ldi	r22, 0x00	; 0
    2188:	70 e0       	ldi	r23, 0x00	; 0
    218a:	84 2b       	or	r24, r20
    218c:	95 2b       	or	r25, r21
    218e:	a6 2b       	or	r26, r22
    2190:	b7 2b       	or	r27, r23
    2192:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    2196:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    219a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    219e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    21a2:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x22>
    21a6:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x23>
    21aa:	30 97       	sbiw	r30, 0x00	; 0
    21ac:	39 f0       	breq	.+14     	; 0x21bc <__vector_22+0xb2>
    21ae:	61 e1       	ldi	r22, 0x11	; 17
    21b0:	70 e0       	ldi	r23, 0x00	; 0
    21b2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x22>
    21b6:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x23>
    21ba:	09 95       	icall
    21bc:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    21c0:	ff 91       	pop	r31
    21c2:	ef 91       	pop	r30
    21c4:	bf 91       	pop	r27
    21c6:	af 91       	pop	r26
    21c8:	9f 91       	pop	r25
    21ca:	8f 91       	pop	r24
    21cc:	7f 91       	pop	r23
    21ce:	6f 91       	pop	r22
    21d0:	5f 91       	pop	r21
    21d2:	4f 91       	pop	r20
    21d4:	3f 91       	pop	r19
    21d6:	2f 91       	pop	r18
    21d8:	0f 90       	pop	r0
    21da:	0f be       	out	0x3f, r0	; 63
    21dc:	0f 90       	pop	r0
    21de:	1f 90       	pop	r1
    21e0:	18 95       	reti

000021e2 <enqueueByDeadline>:
    21e2:	ef 92       	push	r14
    21e4:	ff 92       	push	r15
    21e6:	0f 93       	push	r16
    21e8:	1f 93       	push	r17
    21ea:	cf 93       	push	r28
    21ec:	df 93       	push	r29
    21ee:	7b 01       	movw	r14, r22
    21f0:	eb 01       	movw	r28, r22
    21f2:	a8 81       	ld	r26, Y
    21f4:	b9 81       	ldd	r27, Y+1	; 0x01
    21f6:	10 97       	sbiw	r26, 0x00	; 0
    21f8:	61 f1       	breq	.+88     	; 0x2252 <enqueueByDeadline+0x70>
    21fa:	fc 01       	movw	r30, r24
    21fc:	06 81       	ldd	r16, Z+6	; 0x06
    21fe:	17 81       	ldd	r17, Z+7	; 0x07
    2200:	20 85       	ldd	r18, Z+8	; 0x08
    2202:	31 85       	ldd	r19, Z+9	; 0x09
    2204:	16 96       	adiw	r26, 0x06	; 6
    2206:	4d 91       	ld	r20, X+
    2208:	5d 91       	ld	r21, X+
    220a:	6d 91       	ld	r22, X+
    220c:	7c 91       	ld	r23, X
    220e:	19 97       	sbiw	r26, 0x09	; 9
    2210:	04 17       	cp	r16, r20
    2212:	15 07       	cpc	r17, r21
    2214:	26 07       	cpc	r18, r22
    2216:	37 07       	cpc	r19, r23
    2218:	14 f4       	brge	.+4      	; 0x221e <enqueueByDeadline+0x3c>
    221a:	1b c0       	rjmp	.+54     	; 0x2252 <enqueueByDeadline+0x70>
    221c:	df 01       	movw	r26, r30
    221e:	ed 91       	ld	r30, X+
    2220:	fc 91       	ld	r31, X
    2222:	11 97       	sbiw	r26, 0x01	; 1
    2224:	30 97       	sbiw	r30, 0x00	; 0
    2226:	49 f0       	breq	.+18     	; 0x223a <enqueueByDeadline+0x58>
    2228:	46 81       	ldd	r20, Z+6	; 0x06
    222a:	57 81       	ldd	r21, Z+7	; 0x07
    222c:	60 85       	ldd	r22, Z+8	; 0x08
    222e:	71 85       	ldd	r23, Z+9	; 0x09
    2230:	04 17       	cp	r16, r20
    2232:	15 07       	cpc	r17, r21
    2234:	26 07       	cpc	r18, r22
    2236:	37 07       	cpc	r19, r23
    2238:	8c f7       	brge	.-30     	; 0x221c <enqueueByDeadline+0x3a>
    223a:	ec 01       	movw	r28, r24
    223c:	f9 83       	std	Y+1, r31	; 0x01
    223e:	e8 83       	st	Y, r30
    2240:	10 97       	sbiw	r26, 0x00	; 0
    2242:	21 f4       	brne	.+8      	; 0x224c <enqueueByDeadline+0x6a>
    2244:	f7 01       	movw	r30, r14
    2246:	91 83       	std	Z+1, r25	; 0x01
    2248:	80 83       	st	Z, r24
    224a:	07 c0       	rjmp	.+14     	; 0x225a <enqueueByDeadline+0x78>
    224c:	8d 93       	st	X+, r24
    224e:	9c 93       	st	X, r25
    2250:	04 c0       	rjmp	.+8      	; 0x225a <enqueueByDeadline+0x78>
    2252:	ec 01       	movw	r28, r24
    2254:	b9 83       	std	Y+1, r27	; 0x01
    2256:	a8 83       	st	Y, r26
    2258:	f5 cf       	rjmp	.-22     	; 0x2244 <enqueueByDeadline+0x62>
    225a:	df 91       	pop	r29
    225c:	cf 91       	pop	r28
    225e:	1f 91       	pop	r17
    2260:	0f 91       	pop	r16
    2262:	ff 90       	pop	r15
    2264:	ef 90       	pop	r14
    2266:	08 95       	ret

00002268 <enqueueByBaseline>:
    2268:	ef 92       	push	r14
    226a:	ff 92       	push	r15
    226c:	0f 93       	push	r16
    226e:	1f 93       	push	r17
    2270:	cf 93       	push	r28
    2272:	df 93       	push	r29
    2274:	7b 01       	movw	r14, r22
    2276:	eb 01       	movw	r28, r22
    2278:	a8 81       	ld	r26, Y
    227a:	b9 81       	ldd	r27, Y+1	; 0x01
    227c:	10 97       	sbiw	r26, 0x00	; 0
    227e:	61 f1       	breq	.+88     	; 0x22d8 <enqueueByBaseline+0x70>
    2280:	fc 01       	movw	r30, r24
    2282:	02 81       	ldd	r16, Z+2	; 0x02
    2284:	13 81       	ldd	r17, Z+3	; 0x03
    2286:	24 81       	ldd	r18, Z+4	; 0x04
    2288:	35 81       	ldd	r19, Z+5	; 0x05
    228a:	12 96       	adiw	r26, 0x02	; 2
    228c:	4d 91       	ld	r20, X+
    228e:	5d 91       	ld	r21, X+
    2290:	6d 91       	ld	r22, X+
    2292:	7c 91       	ld	r23, X
    2294:	15 97       	sbiw	r26, 0x05	; 5
    2296:	04 17       	cp	r16, r20
    2298:	15 07       	cpc	r17, r21
    229a:	26 07       	cpc	r18, r22
    229c:	37 07       	cpc	r19, r23
    229e:	14 f4       	brge	.+4      	; 0x22a4 <enqueueByBaseline+0x3c>
    22a0:	1b c0       	rjmp	.+54     	; 0x22d8 <enqueueByBaseline+0x70>
    22a2:	df 01       	movw	r26, r30
    22a4:	ed 91       	ld	r30, X+
    22a6:	fc 91       	ld	r31, X
    22a8:	11 97       	sbiw	r26, 0x01	; 1
    22aa:	30 97       	sbiw	r30, 0x00	; 0
    22ac:	49 f0       	breq	.+18     	; 0x22c0 <enqueueByBaseline+0x58>
    22ae:	42 81       	ldd	r20, Z+2	; 0x02
    22b0:	53 81       	ldd	r21, Z+3	; 0x03
    22b2:	64 81       	ldd	r22, Z+4	; 0x04
    22b4:	75 81       	ldd	r23, Z+5	; 0x05
    22b6:	04 17       	cp	r16, r20
    22b8:	15 07       	cpc	r17, r21
    22ba:	26 07       	cpc	r18, r22
    22bc:	37 07       	cpc	r19, r23
    22be:	8c f7       	brge	.-30     	; 0x22a2 <enqueueByBaseline+0x3a>
    22c0:	ec 01       	movw	r28, r24
    22c2:	f9 83       	std	Y+1, r31	; 0x01
    22c4:	e8 83       	st	Y, r30
    22c6:	10 97       	sbiw	r26, 0x00	; 0
    22c8:	21 f4       	brne	.+8      	; 0x22d2 <enqueueByBaseline+0x6a>
    22ca:	f7 01       	movw	r30, r14
    22cc:	91 83       	std	Z+1, r25	; 0x01
    22ce:	80 83       	st	Z, r24
    22d0:	07 c0       	rjmp	.+14     	; 0x22e0 <enqueueByBaseline+0x78>
    22d2:	8d 93       	st	X+, r24
    22d4:	9c 93       	st	X, r25
    22d6:	04 c0       	rjmp	.+8      	; 0x22e0 <enqueueByBaseline+0x78>
    22d8:	ec 01       	movw	r28, r24
    22da:	b9 83       	std	Y+1, r27	; 0x01
    22dc:	a8 83       	st	Y, r26
    22de:	f5 cf       	rjmp	.-22     	; 0x22ca <enqueueByBaseline+0x62>
    22e0:	df 91       	pop	r29
    22e2:	cf 91       	pop	r28
    22e4:	1f 91       	pop	r17
    22e6:	0f 91       	pop	r16
    22e8:	ff 90       	pop	r15
    22ea:	ef 90       	pop	r14
    22ec:	08 95       	ret

000022ee <dequeue>:
    22ee:	dc 01       	movw	r26, r24
    22f0:	ed 91       	ld	r30, X+
    22f2:	fc 91       	ld	r31, X
    22f4:	11 97       	sbiw	r26, 0x01	; 1
    22f6:	30 97       	sbiw	r30, 0x00	; 0
    22f8:	59 f4       	brne	.+22     	; 0x2310 <dequeue+0x22>
    22fa:	8f ef       	ldi	r24, 0xFF	; 255
    22fc:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2300:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    2304:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	83 bf       	out	0x33, r24	; 51
    230c:	88 95       	sleep
    230e:	fd cf       	rjmp	.-6      	; 0x230a <dequeue+0x1c>
    2310:	20 81       	ld	r18, Z
    2312:	31 81       	ldd	r19, Z+1	; 0x01
    2314:	2d 93       	st	X+, r18
    2316:	3c 93       	st	X, r19
    2318:	cf 01       	movw	r24, r30
    231a:	08 95       	ret

0000231c <__vector_9>:
    231c:	1f 92       	push	r1
    231e:	0f 92       	push	r0
    2320:	0f b6       	in	r0, 0x3f	; 63
    2322:	0f 92       	push	r0
    2324:	11 24       	eor	r1, r1
    2326:	2f 93       	push	r18
    2328:	3f 93       	push	r19
    232a:	4f 93       	push	r20
    232c:	5f 93       	push	r21
    232e:	6f 93       	push	r22
    2330:	7f 93       	push	r23
    2332:	8f 93       	push	r24
    2334:	9f 93       	push	r25
    2336:	ef 93       	push	r30
    2338:	ff 93       	push	r31
    233a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
    233e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
    2342:	01 96       	adiw	r24, 0x01	; 1
    2344:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
    2348:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
    234c:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <timerQ>
    2350:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <timerQ+0x1>
    2354:	30 97       	sbiw	r30, 0x00	; 0
    2356:	01 f1       	breq	.+64     	; 0x2398 <__vector_9+0x7c>
    2358:	42 81       	ldd	r20, Z+2	; 0x02
    235a:	53 81       	ldd	r21, Z+3	; 0x03
    235c:	64 81       	ldd	r22, Z+4	; 0x04
    235e:	75 81       	ldd	r23, Z+5	; 0x05
    2360:	86 17       	cp	r24, r22
    2362:	97 07       	cpc	r25, r23
    2364:	c9 f4       	brne	.+50     	; 0x2398 <__vector_9+0x7c>
    2366:	ca 01       	movw	r24, r20
    2368:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    236c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2370:	42 1b       	sub	r20, r18
    2372:	53 0b       	sbc	r21, r19
    2374:	41 30       	cpi	r20, 0x01	; 1
    2376:	51 05       	cpc	r21, r1
    2378:	29 f4       	brne	.+10     	; 0x2384 <__vector_9+0x68>
    237a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    237e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2382:	01 96       	adiw	r24, 0x01	; 1
    2384:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    2388:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    238c:	ef e6       	ldi	r30, 0x6F	; 111
    238e:	f0 e0       	ldi	r31, 0x00	; 0
    2390:	80 81       	ld	r24, Z
    2392:	82 60       	ori	r24, 0x02	; 2
    2394:	80 83       	st	Z, r24
    2396:	05 c0       	rjmp	.+10     	; 0x23a2 <__vector_9+0x86>
    2398:	ef e6       	ldi	r30, 0x6F	; 111
    239a:	f0 e0       	ldi	r31, 0x00	; 0
    239c:	80 81       	ld	r24, Z
    239e:	8d 7f       	andi	r24, 0xFD	; 253
    23a0:	80 83       	st	Z, r24
    23a2:	ff 91       	pop	r31
    23a4:	ef 91       	pop	r30
    23a6:	9f 91       	pop	r25
    23a8:	8f 91       	pop	r24
    23aa:	7f 91       	pop	r23
    23ac:	6f 91       	pop	r22
    23ae:	5f 91       	pop	r21
    23b0:	4f 91       	pop	r20
    23b2:	3f 91       	pop	r19
    23b4:	2f 91       	pop	r18
    23b6:	0f 90       	pop	r0
    23b8:	0f be       	out	0x3f, r0	; 63
    23ba:	0f 90       	pop	r0
    23bc:	1f 90       	pop	r1
    23be:	18 95       	reti

000023c0 <__vector_7>:
    23c0:	1f 92       	push	r1
    23c2:	0f 92       	push	r0
    23c4:	0f b6       	in	r0, 0x3f	; 63
    23c6:	0f 92       	push	r0
    23c8:	11 24       	eor	r1, r1
    23ca:	cf 92       	push	r12
    23cc:	df 92       	push	r13
    23ce:	ef 92       	push	r14
    23d0:	ff 92       	push	r15
    23d2:	2f 93       	push	r18
    23d4:	3f 93       	push	r19
    23d6:	4f 93       	push	r20
    23d8:	5f 93       	push	r21
    23da:	6f 93       	push	r22
    23dc:	7f 93       	push	r23
    23de:	8f 93       	push	r24
    23e0:	9f 93       	push	r25
    23e2:	af 93       	push	r26
    23e4:	bf 93       	push	r27
    23e6:	ef 93       	push	r30
    23e8:	ff 93       	push	r31
    23ea:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <__data_end>
    23ee:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <__data_end+0x1>
    23f2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    23f6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    23fa:	b0 99       	sbic	0x16, 0	; 22
    23fc:	0f c0       	rjmp	.+30     	; 0x241c <__vector_7+0x5c>
    23fe:	0d 2c       	mov	r0, r13
    2400:	00 0c       	add	r0, r0
    2402:	ee 08       	sbc	r14, r14
    2404:	ff 08       	sbc	r15, r15
    2406:	d6 01       	movw	r26, r12
    2408:	99 27       	eor	r25, r25
    240a:	88 27       	eor	r24, r24
    240c:	69 01       	movw	r12, r18
    240e:	e1 2c       	mov	r14, r1
    2410:	f1 2c       	mov	r15, r1
    2412:	c8 2a       	or	r12, r24
    2414:	d9 2a       	or	r13, r25
    2416:	ea 2a       	or	r14, r26
    2418:	fb 2a       	or	r15, r27
    241a:	15 c0       	rjmp	.+42     	; 0x2446 <__vector_7+0x86>
    241c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2420:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2424:	8f ef       	ldi	r24, 0xFF	; 255
    2426:	c8 1a       	sub	r12, r24
    2428:	d8 0a       	sbc	r13, r24
    242a:	0d 2c       	mov	r0, r13
    242c:	00 0c       	add	r0, r0
    242e:	ee 08       	sbc	r14, r14
    2430:	ff 08       	sbc	r15, r15
    2432:	d6 01       	movw	r26, r12
    2434:	99 27       	eor	r25, r25
    2436:	88 27       	eor	r24, r24
    2438:	69 01       	movw	r12, r18
    243a:	e1 2c       	mov	r14, r1
    243c:	f1 2c       	mov	r15, r1
    243e:	c8 2a       	or	r12, r24
    2440:	d9 2a       	or	r13, r25
    2442:	ea 2a       	or	r14, r26
    2444:	fb 2a       	or	r15, r27
    2446:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <timerQ>
    244a:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <timerQ+0x1>
    244e:	30 97       	sbiw	r30, 0x00	; 0
    2450:	09 f4       	brne	.+2      	; 0x2454 <__vector_7+0x94>
    2452:	42 c0       	rjmp	.+132    	; 0x24d8 <__vector_7+0x118>
    2454:	82 81       	ldd	r24, Z+2	; 0x02
    2456:	93 81       	ldd	r25, Z+3	; 0x03
    2458:	a4 81       	ldd	r26, Z+4	; 0x04
    245a:	b5 81       	ldd	r27, Z+5	; 0x05
    245c:	8c 19       	sub	r24, r12
    245e:	9d 09       	sbc	r25, r13
    2460:	ae 09       	sbc	r26, r14
    2462:	bf 09       	sbc	r27, r15
    2464:	18 16       	cp	r1, r24
    2466:	19 06       	cpc	r1, r25
    2468:	1a 06       	cpc	r1, r26
    246a:	1b 06       	cpc	r1, r27
    246c:	ec f1       	brlt	.+122    	; 0x24e8 <__vector_7+0x128>
    246e:	8e e0       	ldi	r24, 0x0E	; 14
    2470:	91 e0       	ldi	r25, 0x01	; 1
    2472:	0e 94 77 11 	call	0x22ee	; 0x22ee <dequeue>
    2476:	60 e1       	ldi	r22, 0x10	; 16
    2478:	71 e0       	ldi	r23, 0x01	; 1
    247a:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <enqueueByDeadline>
    247e:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <timerQ>
    2482:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <timerQ+0x1>
    2486:	30 97       	sbiw	r30, 0x00	; 0
    2488:	39 f1       	breq	.+78     	; 0x24d8 <__vector_7+0x118>
    248a:	82 81       	ldd	r24, Z+2	; 0x02
    248c:	93 81       	ldd	r25, Z+3	; 0x03
    248e:	a4 81       	ldd	r26, Z+4	; 0x04
    2490:	b5 81       	ldd	r27, Z+5	; 0x05
    2492:	8c 19       	sub	r24, r12
    2494:	9d 09       	sbc	r25, r13
    2496:	ae 09       	sbc	r26, r14
    2498:	bf 09       	sbc	r27, r15
    249a:	18 16       	cp	r1, r24
    249c:	19 06       	cpc	r1, r25
    249e:	1a 06       	cpc	r1, r26
    24a0:	1b 06       	cpc	r1, r27
    24a2:	2c f7       	brge	.-54     	; 0x246e <__vector_7+0xae>
    24a4:	21 c0       	rjmp	.+66     	; 0x24e8 <__vector_7+0x128>
    24a6:	9c 01       	movw	r18, r24
    24a8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    24ac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    24b0:	84 1b       	sub	r24, r20
    24b2:	95 0b       	sbc	r25, r21
    24b4:	01 97       	sbiw	r24, 0x01	; 1
    24b6:	31 f4       	brne	.+12     	; 0x24c4 <__vector_7+0x104>
    24b8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    24bc:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    24c0:	2f 5f       	subi	r18, 0xFF	; 255
    24c2:	3f 4f       	sbci	r19, 0xFF	; 255
    24c4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    24c8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    24cc:	ef e6       	ldi	r30, 0x6F	; 111
    24ce:	f0 e0       	ldi	r31, 0x00	; 0
    24d0:	80 81       	ld	r24, Z
    24d2:	82 60       	ori	r24, 0x02	; 2
    24d4:	80 83       	st	Z, r24
    24d6:	05 c0       	rjmp	.+10     	; 0x24e2 <__vector_7+0x122>
    24d8:	ef e6       	ldi	r30, 0x6F	; 111
    24da:	f0 e0       	ldi	r31, 0x00	; 0
    24dc:	80 81       	ld	r24, Z
    24de:	8d 7f       	andi	r24, 0xFD	; 253
    24e0:	80 83       	st	Z, r24
    24e2:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    24e6:	0c c0       	rjmp	.+24     	; 0x2500 <__vector_7+0x140>
    24e8:	82 81       	ldd	r24, Z+2	; 0x02
    24ea:	93 81       	ldd	r25, Z+3	; 0x03
    24ec:	a4 81       	ldd	r26, Z+4	; 0x04
    24ee:	b5 81       	ldd	r27, Z+5	; 0x05
    24f0:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    24f4:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    24f8:	2a 17       	cp	r18, r26
    24fa:	3b 07       	cpc	r19, r27
    24fc:	69 f7       	brne	.-38     	; 0x24d8 <__vector_7+0x118>
    24fe:	d3 cf       	rjmp	.-90     	; 0x24a6 <__vector_7+0xe6>
    2500:	ff 91       	pop	r31
    2502:	ef 91       	pop	r30
    2504:	bf 91       	pop	r27
    2506:	af 91       	pop	r26
    2508:	9f 91       	pop	r25
    250a:	8f 91       	pop	r24
    250c:	7f 91       	pop	r23
    250e:	6f 91       	pop	r22
    2510:	5f 91       	pop	r21
    2512:	4f 91       	pop	r20
    2514:	3f 91       	pop	r19
    2516:	2f 91       	pop	r18
    2518:	ff 90       	pop	r15
    251a:	ef 90       	pop	r14
    251c:	df 90       	pop	r13
    251e:	cf 90       	pop	r12
    2520:	0f 90       	pop	r0
    2522:	0f be       	out	0x3f, r0	; 63
    2524:	0f 90       	pop	r0
    2526:	1f 90       	pop	r1
    2528:	18 95       	reti

0000252a <async>:
    252a:	3f 92       	push	r3
    252c:	4f 92       	push	r4
    252e:	5f 92       	push	r5
    2530:	6f 92       	push	r6
    2532:	7f 92       	push	r7
    2534:	8f 92       	push	r8
    2536:	9f 92       	push	r9
    2538:	af 92       	push	r10
    253a:	bf 92       	push	r11
    253c:	cf 92       	push	r12
    253e:	df 92       	push	r13
    2540:	ef 92       	push	r14
    2542:	ff 92       	push	r15
    2544:	0f 93       	push	r16
    2546:	1f 93       	push	r17
    2548:	cf 93       	push	r28
    254a:	df 93       	push	r29
    254c:	2b 01       	movw	r4, r22
    254e:	3c 01       	movw	r6, r24
    2550:	49 01       	movw	r8, r18
    2552:	5a 01       	movw	r10, r20
    2554:	8f b7       	in	r24, 0x3f	; 63
    2556:	80 78       	andi	r24, 0x80	; 128
    2558:	38 2e       	mov	r3, r24
    255a:	f8 94       	cli
    255c:	86 e0       	ldi	r24, 0x06	; 6
    255e:	91 e0       	ldi	r25, 0x01	; 1
    2560:	0e 94 77 11 	call	0x22ee	; 0x22ee <dequeue>
    2564:	ec 01       	movw	r28, r24
    2566:	1b 87       	std	Y+11, r17	; 0x0b
    2568:	0a 87       	std	Y+10, r16	; 0x0a
    256a:	fd 86       	std	Y+13, r15	; 0x0d
    256c:	ec 86       	std	Y+12, r14	; 0x0c
    256e:	df 86       	std	Y+15, r13	; 0x0f
    2570:	ce 86       	std	Y+14, r12	; 0x0e
    2572:	33 20       	and	r3, r3
    2574:	61 f0       	breq	.+24     	; 0x258e <async+0x64>
    2576:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    257a:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    257e:	02 80       	ldd	r0, Z+2	; 0x02
    2580:	f3 81       	ldd	r31, Z+3	; 0x03
    2582:	e0 2d       	mov	r30, r0
    2584:	82 81       	ldd	r24, Z+2	; 0x02
    2586:	93 81       	ldd	r25, Z+3	; 0x03
    2588:	a4 81       	ldd	r26, Z+4	; 0x04
    258a:	b5 81       	ldd	r27, Z+5	; 0x05
    258c:	08 c0       	rjmp	.+16     	; 0x259e <async+0x74>
    258e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <timestamp>
    2592:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <timestamp+0x1>
    2596:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <timestamp+0x2>
    259a:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <timestamp+0x3>
    259e:	48 0e       	add	r4, r24
    25a0:	59 1e       	adc	r5, r25
    25a2:	6a 1e       	adc	r6, r26
    25a4:	7b 1e       	adc	r7, r27
    25a6:	4a 82       	std	Y+2, r4	; 0x02
    25a8:	5b 82       	std	Y+3, r5	; 0x03
    25aa:	6c 82       	std	Y+4, r6	; 0x04
    25ac:	7d 82       	std	Y+5, r7	; 0x05
    25ae:	18 14       	cp	r1, r8
    25b0:	19 04       	cpc	r1, r9
    25b2:	1a 04       	cpc	r1, r10
    25b4:	1b 04       	cpc	r1, r11
    25b6:	44 f0       	brlt	.+16     	; 0x25c8 <async+0x9e>
    25b8:	0f 2e       	mov	r0, r31
    25ba:	88 24       	eor	r8, r8
    25bc:	8a 94       	dec	r8
    25be:	98 2c       	mov	r9, r8
    25c0:	a8 2c       	mov	r10, r8
    25c2:	ff e7       	ldi	r31, 0x7F	; 127
    25c4:	bf 2e       	mov	r11, r31
    25c6:	f0 2d       	mov	r31, r0
    25c8:	84 0c       	add	r8, r4
    25ca:	95 1c       	adc	r9, r5
    25cc:	a6 1c       	adc	r10, r6
    25ce:	b7 1c       	adc	r11, r7
    25d0:	8e 82       	std	Y+6, r8	; 0x06
    25d2:	9f 82       	std	Y+7, r9	; 0x07
    25d4:	a8 86       	std	Y+8, r10	; 0x08
    25d6:	b9 86       	std	Y+9, r11	; 0x09
    25d8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
    25dc:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
    25e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    25e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    25e8:	b0 99       	sbic	0x16, 0	; 22
    25ea:	0e c0       	rjmp	.+28     	; 0x2608 <async+0xde>
    25ec:	09 2e       	mov	r0, r25
    25ee:	00 0c       	add	r0, r0
    25f0:	aa 0b       	sbc	r26, r26
    25f2:	bb 0b       	sbc	r27, r27
    25f4:	dc 01       	movw	r26, r24
    25f6:	99 27       	eor	r25, r25
    25f8:	88 27       	eor	r24, r24
    25fa:	60 e0       	ldi	r22, 0x00	; 0
    25fc:	70 e0       	ldi	r23, 0x00	; 0
    25fe:	84 2b       	or	r24, r20
    2600:	95 2b       	or	r25, r21
    2602:	a6 2b       	or	r26, r22
    2604:	b7 2b       	or	r27, r23
    2606:	13 c0       	rjmp	.+38     	; 0x262e <async+0x104>
    2608:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    260c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2610:	01 96       	adiw	r24, 0x01	; 1
    2612:	09 2e       	mov	r0, r25
    2614:	00 0c       	add	r0, r0
    2616:	aa 0b       	sbc	r26, r26
    2618:	bb 0b       	sbc	r27, r27
    261a:	dc 01       	movw	r26, r24
    261c:	99 27       	eor	r25, r25
    261e:	88 27       	eor	r24, r24
    2620:	a9 01       	movw	r20, r18
    2622:	60 e0       	ldi	r22, 0x00	; 0
    2624:	70 e0       	ldi	r23, 0x00	; 0
    2626:	84 2b       	or	r24, r20
    2628:	95 2b       	or	r25, r21
    262a:	a6 2b       	or	r26, r22
    262c:	b7 2b       	or	r27, r23
    262e:	48 1a       	sub	r4, r24
    2630:	59 0a       	sbc	r5, r25
    2632:	6a 0a       	sbc	r6, r26
    2634:	7b 0a       	sbc	r7, r27
    2636:	14 14       	cp	r1, r4
    2638:	15 04       	cpc	r1, r5
    263a:	16 04       	cpc	r1, r6
    263c:	17 04       	cpc	r1, r7
    263e:	ac f5       	brge	.+106    	; 0x26aa <async+0x180>
    2640:	6e e0       	ldi	r22, 0x0E	; 14
    2642:	71 e0       	ldi	r23, 0x01	; 1
    2644:	ce 01       	movw	r24, r28
    2646:	0e 94 34 11 	call	0x2268	; 0x2268 <enqueueByBaseline>
    264a:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <timerQ>
    264e:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <timerQ+0x1>
    2652:	30 97       	sbiw	r30, 0x00	; 0
    2654:	21 f1       	breq	.+72     	; 0x269e <async+0x174>
    2656:	82 81       	ldd	r24, Z+2	; 0x02
    2658:	93 81       	ldd	r25, Z+3	; 0x03
    265a:	a4 81       	ldd	r26, Z+4	; 0x04
    265c:	b5 81       	ldd	r27, Z+5	; 0x05
    265e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    2662:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    2666:	2a 17       	cp	r18, r26
    2668:	3b 07       	cpc	r19, r27
    266a:	c9 f4       	brne	.+50     	; 0x269e <async+0x174>
    266c:	9c 01       	movw	r18, r24
    266e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2672:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2676:	84 1b       	sub	r24, r20
    2678:	95 0b       	sbc	r25, r21
    267a:	01 97       	sbiw	r24, 0x01	; 1
    267c:	31 f4       	brne	.+12     	; 0x268a <async+0x160>
    267e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2682:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2686:	2f 5f       	subi	r18, 0xFF	; 255
    2688:	3f 4f       	sbci	r19, 0xFF	; 255
    268a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    268e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    2692:	ef e6       	ldi	r30, 0x6F	; 111
    2694:	f0 e0       	ldi	r31, 0x00	; 0
    2696:	80 81       	ld	r24, Z
    2698:	82 60       	ori	r24, 0x02	; 2
    269a:	80 83       	st	Z, r24
    269c:	41 c0       	rjmp	.+130    	; 0x2720 <async+0x1f6>
    269e:	ef e6       	ldi	r30, 0x6F	; 111
    26a0:	f0 e0       	ldi	r31, 0x00	; 0
    26a2:	80 81       	ld	r24, Z
    26a4:	8d 7f       	andi	r24, 0xFD	; 253
    26a6:	80 83       	st	Z, r24
    26a8:	3b c0       	rjmp	.+118    	; 0x2720 <async+0x1f6>
    26aa:	60 e1       	ldi	r22, 0x10	; 16
    26ac:	71 e0       	ldi	r23, 0x01	; 1
    26ae:	ce 01       	movw	r24, r28
    26b0:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <enqueueByDeadline>
    26b4:	33 20       	and	r3, r3
    26b6:	b9 f1       	breq	.+110    	; 0x2726 <async+0x1fc>
    26b8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    26bc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    26c0:	00 97       	sbiw	r24, 0x00	; 0
    26c2:	81 f1       	breq	.+96     	; 0x2724 <async+0x1fa>
    26c4:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    26c8:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    26cc:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <msgQ>
    26d0:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <msgQ+0x1>
    26d4:	02 81       	ldd	r16, Z+2	; 0x02
    26d6:	13 81       	ldd	r17, Z+3	; 0x03
    26d8:	d9 01       	movw	r26, r18
    26da:	16 96       	adiw	r26, 0x06	; 6
    26dc:	4d 91       	ld	r20, X+
    26de:	5d 91       	ld	r21, X+
    26e0:	6d 91       	ld	r22, X+
    26e2:	7c 91       	ld	r23, X
    26e4:	19 97       	sbiw	r26, 0x09	; 9
    26e6:	d8 01       	movw	r26, r16
    26e8:	16 96       	adiw	r26, 0x06	; 6
    26ea:	0d 91       	ld	r16, X+
    26ec:	1d 91       	ld	r17, X+
    26ee:	2d 91       	ld	r18, X+
    26f0:	3c 91       	ld	r19, X
    26f2:	19 97       	sbiw	r26, 0x09	; 9
    26f4:	40 1b       	sub	r20, r16
    26f6:	51 0b       	sbc	r21, r17
    26f8:	62 0b       	sbc	r22, r18
    26fa:	73 0b       	sbc	r23, r19
    26fc:	9a f4       	brpl	.+38     	; 0x2724 <async+0x1fa>
    26fe:	dc 01       	movw	r26, r24
    2700:	2d 91       	ld	r18, X+
    2702:	3c 91       	ld	r19, X
    2704:	11 97       	sbiw	r26, 0x01	; 1
    2706:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    270a:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    270e:	ed 93       	st	X+, r30
    2710:	fc 93       	st	X, r31
    2712:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    2716:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    271a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dispatch>
    271e:	02 c0       	rjmp	.+4      	; 0x2724 <async+0x1fa>
    2720:	33 20       	and	r3, r3
    2722:	09 f0       	breq	.+2      	; 0x2726 <async+0x1fc>
    2724:	78 94       	sei
    2726:	ce 01       	movw	r24, r28
    2728:	df 91       	pop	r29
    272a:	cf 91       	pop	r28
    272c:	1f 91       	pop	r17
    272e:	0f 91       	pop	r16
    2730:	ff 90       	pop	r15
    2732:	ef 90       	pop	r14
    2734:	df 90       	pop	r13
    2736:	cf 90       	pop	r12
    2738:	bf 90       	pop	r11
    273a:	af 90       	pop	r10
    273c:	9f 90       	pop	r9
    273e:	8f 90       	pop	r8
    2740:	7f 90       	pop	r7
    2742:	6f 90       	pop	r6
    2744:	5f 90       	pop	r5
    2746:	4f 90       	pop	r4
    2748:	3f 90       	pop	r3
    274a:	08 95       	ret

0000274c <sync>:
    274c:	cf 92       	push	r12
    274e:	df 92       	push	r13
    2750:	ef 92       	push	r14
    2752:	ff 92       	push	r15
    2754:	0f 93       	push	r16
    2756:	1f 93       	push	r17
    2758:	cf 93       	push	r28
    275a:	df 93       	push	r29
    275c:	ec 01       	movw	r28, r24
    275e:	7b 01       	movw	r14, r22
    2760:	6a 01       	movw	r12, r20
    2762:	1f b7       	in	r17, 0x3f	; 63
    2764:	10 78       	andi	r17, 0x80	; 128
    2766:	f8 94       	cli
    2768:	a8 81       	ld	r26, Y
    276a:	b9 81       	ldd	r27, Y+1	; 0x01
    276c:	10 97       	sbiw	r26, 0x00	; 0
    276e:	61 f1       	breq	.+88     	; 0x27c8 <sync+0x7c>
    2770:	14 96       	adiw	r26, 0x04	; 4
    2772:	ed 91       	ld	r30, X+
    2774:	fc 91       	ld	r31, X
    2776:	15 97       	sbiw	r26, 0x05	; 5
    2778:	30 97       	sbiw	r30, 0x00	; 0
    277a:	41 f0       	breq	.+16     	; 0x278c <sync+0x40>
    277c:	a0 81       	ld	r26, Z
    277e:	b1 81       	ldd	r27, Z+1	; 0x01
    2780:	14 96       	adiw	r26, 0x04	; 4
    2782:	ed 91       	ld	r30, X+
    2784:	fc 91       	ld	r31, X
    2786:	15 97       	sbiw	r26, 0x05	; 5
    2788:	30 97       	sbiw	r30, 0x00	; 0
    278a:	c1 f7       	brne	.-16     	; 0x277c <sync+0x30>
    278c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    2790:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    2794:	2a 17       	cp	r18, r26
    2796:	3b 07       	cpc	r19, r27
    2798:	21 f0       	breq	.+8      	; 0x27a2 <sync+0x56>
    279a:	11 23       	and	r17, r17
    279c:	09 f4       	brne	.+2      	; 0x27a0 <sync+0x54>
    279e:	3d c0       	rjmp	.+122    	; 0x281a <sync+0xce>
    27a0:	07 c0       	rjmp	.+14     	; 0x27b0 <sync+0x64>
    27a2:	11 23       	and	r17, r17
    27a4:	09 f4       	brne	.+2      	; 0x27a8 <sync+0x5c>
    27a6:	3c c0       	rjmp	.+120    	; 0x2820 <sync+0xd4>
    27a8:	78 94       	sei
    27aa:	8f ef       	ldi	r24, 0xFF	; 255
    27ac:	9f ef       	ldi	r25, 0xFF	; 255
    27ae:	52 c0       	rjmp	.+164    	; 0x2854 <sync+0x108>
    27b0:	8a 81       	ldd	r24, Y+2	; 0x02
    27b2:	9b 81       	ldd	r25, Y+3	; 0x03
    27b4:	00 97       	sbiw	r24, 0x00	; 0
    27b6:	d1 f1       	breq	.+116    	; 0x282c <sync+0xe0>
    27b8:	fc 01       	movw	r30, r24
    27ba:	15 82       	std	Z+5, r1	; 0x05
    27bc:	14 82       	std	Z+4, r1	; 0x04
    27be:	36 c0       	rjmp	.+108    	; 0x282c <sync+0xe0>
    27c0:	78 94       	sei
    27c2:	80 e0       	ldi	r24, 0x00	; 0
    27c4:	90 e0       	ldi	r25, 0x00	; 0
    27c6:	46 c0       	rjmp	.+140    	; 0x2854 <sync+0x108>
    27c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    27cc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    27d0:	99 83       	std	Y+1, r25	; 0x01
    27d2:	88 83       	st	Y, r24
    27d4:	11 23       	and	r17, r17
    27d6:	29 f0       	breq	.+10     	; 0x27e2 <sync+0x96>
    27d8:	8a 81       	ldd	r24, Y+2	; 0x02
    27da:	9b 81       	ldd	r25, Y+3	; 0x03
    27dc:	01 97       	sbiw	r24, 0x01	; 1
    27de:	09 f0       	breq	.+2      	; 0x27e2 <sync+0x96>
    27e0:	78 94       	sei
    27e2:	b6 01       	movw	r22, r12
    27e4:	ce 01       	movw	r24, r28
    27e6:	f7 01       	movw	r30, r14
    27e8:	09 95       	icall
    27ea:	f8 2e       	mov	r15, r24
    27ec:	09 2f       	mov	r16, r25
    27ee:	8f b7       	in	r24, 0x3f	; 63
    27f0:	f8 94       	cli
    27f2:	19 82       	std	Y+1, r1	; 0x01
    27f4:	18 82       	st	Y, r1
    27f6:	8a 81       	ldd	r24, Y+2	; 0x02
    27f8:	9b 81       	ldd	r25, Y+3	; 0x03
    27fa:	82 30       	cpi	r24, 0x02	; 2
    27fc:	91 05       	cpc	r25, r1
    27fe:	38 f0       	brcs	.+14     	; 0x280e <sync+0xc2>
    2800:	1b 82       	std	Y+3, r1	; 0x03
    2802:	1a 82       	std	Y+2, r1	; 0x02
    2804:	fc 01       	movw	r30, r24
    2806:	15 82       	std	Z+5, r1	; 0x05
    2808:	14 82       	std	Z+4, r1	; 0x04
    280a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dispatch>
    280e:	11 23       	and	r17, r17
    2810:	51 f0       	breq	.+20     	; 0x2826 <sync+0xda>
    2812:	78 94       	sei
    2814:	8f 2d       	mov	r24, r15
    2816:	90 2f       	mov	r25, r16
    2818:	1d c0       	rjmp	.+58     	; 0x2854 <sync+0x108>
    281a:	8f ef       	ldi	r24, 0xFF	; 255
    281c:	9f ef       	ldi	r25, 0xFF	; 255
    281e:	1a c0       	rjmp	.+52     	; 0x2854 <sync+0x108>
    2820:	8f ef       	ldi	r24, 0xFF	; 255
    2822:	9f ef       	ldi	r25, 0xFF	; 255
    2824:	17 c0       	rjmp	.+46     	; 0x2854 <sync+0x108>
    2826:	8f 2d       	mov	r24, r15
    2828:	90 2f       	mov	r25, r16
    282a:	14 c0       	rjmp	.+40     	; 0x2854 <sync+0x108>
    282c:	3b 83       	std	Y+3, r19	; 0x03
    282e:	2a 83       	std	Y+2, r18	; 0x02
    2830:	f9 01       	movw	r30, r18
    2832:	d5 83       	std	Z+5, r29	; 0x05
    2834:	c4 83       	std	Z+4, r28	; 0x04
    2836:	cd 01       	movw	r24, r26
    2838:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dispatch>
    283c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    2840:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    2844:	82 81       	ldd	r24, Z+2	; 0x02
    2846:	93 81       	ldd	r25, Z+3	; 0x03
    2848:	89 2b       	or	r24, r25
    284a:	09 f4       	brne	.+2      	; 0x284e <sync+0x102>
    284c:	b9 cf       	rjmp	.-142    	; 0x27c0 <sync+0x74>
    284e:	f9 83       	std	Y+1, r31	; 0x01
    2850:	e8 83       	st	Y, r30
    2852:	c2 cf       	rjmp	.-124    	; 0x27d8 <sync+0x8c>
    2854:	df 91       	pop	r29
    2856:	cf 91       	pop	r28
    2858:	1f 91       	pop	r17
    285a:	0f 91       	pop	r16
    285c:	ff 90       	pop	r15
    285e:	ef 90       	pop	r14
    2860:	df 90       	pop	r13
    2862:	cf 90       	pop	r12
    2864:	08 95       	ret

00002866 <run>:
    2866:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__data_start>
    286a:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__data_start+0x1>
    286e:	80 e1       	ldi	r24, 0x10	; 16
    2870:	91 e0       	ldi	r25, 0x01	; 1
    2872:	0e 94 77 11 	call	0x22ee	; 0x22ee <dequeue>
    2876:	ec 01       	movw	r28, r24
    2878:	d8 01       	movw	r26, r16
    287a:	13 96       	adiw	r26, 0x03	; 3
    287c:	9c 93       	st	X, r25
    287e:	8e 93       	st	-X, r24
    2880:	12 97       	sbiw	r26, 0x02	; 2
    2882:	78 94       	sei
    2884:	4e 85       	ldd	r20, Y+14	; 0x0e
    2886:	5f 85       	ldd	r21, Y+15	; 0x0f
    2888:	6c 85       	ldd	r22, Y+12	; 0x0c
    288a:	7d 85       	ldd	r23, Y+13	; 0x0d
    288c:	8a 85       	ldd	r24, Y+10	; 0x0a
    288e:	9b 85       	ldd	r25, Y+11	; 0x0b
    2890:	0e 94 a6 13 	call	0x274c	; 0x274c <sync>
    2894:	8f b7       	in	r24, 0x3f	; 63
    2896:	f8 94       	cli
    2898:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    289c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    28a0:	99 83       	std	Y+1, r25	; 0x01
    28a2:	88 83       	st	Y, r24
    28a4:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    28a8:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    28ac:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    28b0:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    28b4:	00 81       	ld	r16, Z
    28b6:	11 81       	ldd	r17, Z+1	; 0x01
    28b8:	e8 01       	movw	r28, r16
    28ba:	2a 81       	ldd	r18, Y+2	; 0x02
    28bc:	3b 81       	ldd	r19, Y+3	; 0x03
    28be:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <msgQ>
    28c2:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <msgQ+0x1>
    28c6:	10 97       	sbiw	r26, 0x00	; 0
    28c8:	c1 f0       	breq	.+48     	; 0x28fa <run+0x94>
    28ca:	21 15       	cp	r18, r1
    28cc:	31 05       	cpc	r19, r1
    28ce:	59 f2       	breq	.-106    	; 0x2866 <run>
    28d0:	16 96       	adiw	r26, 0x06	; 6
    28d2:	8d 91       	ld	r24, X+
    28d4:	9d 91       	ld	r25, X+
    28d6:	0d 90       	ld	r0, X+
    28d8:	bc 91       	ld	r27, X
    28da:	a0 2d       	mov	r26, r0
    28dc:	e9 01       	movw	r28, r18
    28de:	4e 81       	ldd	r20, Y+6	; 0x06
    28e0:	5f 81       	ldd	r21, Y+7	; 0x07
    28e2:	68 85       	ldd	r22, Y+8	; 0x08
    28e4:	79 85       	ldd	r23, Y+9	; 0x09
    28e6:	84 1b       	sub	r24, r20
    28e8:	95 0b       	sbc	r25, r21
    28ea:	a6 0b       	sbc	r26, r22
    28ec:	b7 0b       	sbc	r27, r23
    28ee:	18 16       	cp	r1, r24
    28f0:	19 06       	cpc	r1, r25
    28f2:	1a 06       	cpc	r1, r26
    28f4:	1b 06       	cpc	r1, r27
    28f6:	0c f0       	brlt	.+2      	; 0x28fa <run+0x94>
    28f8:	b6 cf       	rjmp	.-148    	; 0x2866 <run>
    28fa:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <activeStack+0x1>
    28fe:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <activeStack>
    2902:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    2906:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    290a:	91 83       	std	Z+1, r25	; 0x01
    290c:	80 83       	st	Z, r24
    290e:	f0 93 05 01 	sts	0x0105, r31	; 0x800105 <threadPool+0x1>
    2912:	e0 93 04 01 	sts	0x0104, r30	; 0x800104 <threadPool>
    2916:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    291a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    291e:	14 96       	adiw	r26, 0x04	; 4
    2920:	ed 91       	ld	r30, X+
    2922:	fc 91       	ld	r31, X
    2924:	15 97       	sbiw	r26, 0x05	; 5
    2926:	30 97       	sbiw	r30, 0x00	; 0
    2928:	41 f0       	breq	.+16     	; 0x293a <run+0xd4>
    292a:	a0 81       	ld	r26, Z
    292c:	b1 81       	ldd	r27, Z+1	; 0x01
    292e:	14 96       	adiw	r26, 0x04	; 4
    2930:	ed 91       	ld	r30, X+
    2932:	fc 91       	ld	r31, X
    2934:	15 97       	sbiw	r26, 0x05	; 5
    2936:	30 97       	sbiw	r30, 0x00	; 0
    2938:	c1 f7       	brne	.-16     	; 0x292a <run+0xc4>
    293a:	cd 01       	movw	r24, r26
    293c:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dispatch>
    2940:	92 cf       	rjmp	.-220    	; 0x2866 <run>

00002942 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2942:	42 31       	cpi	r20, 0x12	; 18
    2944:	b8 f4       	brcc	.+46     	; 0x2974 <install+0x32>
        char status;
        DISABLE(status);
    2946:	2f b7       	in	r18, 0x3f	; 63
    2948:	f8 94       	cli
        otable[i] = obj;
    294a:	50 e0       	ldi	r21, 0x00	; 0
    294c:	44 0f       	add	r20, r20
    294e:	55 1f       	adc	r21, r21
    2950:	fa 01       	movw	r30, r20
    2952:	ee 5e       	subi	r30, 0xEE	; 238
    2954:	fe 4f       	sbci	r31, 0xFE	; 254
    2956:	91 83       	std	Z+1, r25	; 0x01
    2958:	80 83       	st	Z, r24
        mtable[i] = m;
    295a:	fa 01       	movw	r30, r20
    295c:	e6 55       	subi	r30, 0x56	; 86
    295e:	fe 4f       	sbci	r31, 0xFE	; 254
    2960:	71 83       	std	Z+1, r23	; 0x01
    2962:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2964:	41 e0       	ldi	r20, 0x01	; 1
    2966:	50 e0       	ldi	r21, 0x00	; 0
    2968:	fc 01       	movw	r30, r24
    296a:	53 83       	std	Z+3, r21	; 0x03
    296c:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    296e:	22 23       	and	r18, r18
    2970:	0c f4       	brge	.+2      	; 0x2974 <install+0x32>
    2972:	78 94       	sei
    2974:	08 95       	ret

00002976 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2976:	8c 01       	movw	r16, r24
    2978:	7b 01       	movw	r14, r22
    297a:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    297c:	8f b7       	in	r24, 0x3f	; 63
    297e:	f8 94       	cli
    initialize();
    2980:	0e 94 93 08 	call	0x1126	; 0x1126 <initialize>
    ENABLE(1);
    2984:	78 94       	sei
    if (m != NULL)
    2986:	e1 14       	cp	r14, r1
    2988:	f1 04       	cpc	r15, r1
    298a:	41 f0       	breq	.+16     	; 0x299c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	a9 01       	movw	r20, r18
    2992:	60 e0       	ldi	r22, 0x00	; 0
    2994:	70 e0       	ldi	r23, 0x00	; 0
    2996:	cb 01       	movw	r24, r22
    2998:	0e 94 95 12 	call	0x252a	; 0x252a <async>
    DISABLE(status);
    299c:	8f b7       	in	r24, 0x3f	; 63
    299e:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    29a0:	0e 94 1e 09 	call	0x123c	; 0x123c <schedule>
    ENABLE(1);
    29a4:	78 94       	sei
    while (1) {
        SLEEP();
    29a6:	81 e0       	ldi	r24, 0x01	; 1
    29a8:	83 bf       	out	0x33, r24	; 51
    29aa:	88 95       	sleep
    29ac:	fd cf       	rjmp	.-6      	; 0x29a8 <tinytimber+0x32>

000029ae <__divmodhi4>:
    29ae:	97 fb       	bst	r25, 7
    29b0:	07 2e       	mov	r0, r23
    29b2:	16 f4       	brtc	.+4      	; 0x29b8 <__divmodhi4+0xa>
    29b4:	00 94       	com	r0
    29b6:	07 d0       	rcall	.+14     	; 0x29c6 <__divmodhi4_neg1>
    29b8:	77 fd       	sbrc	r23, 7
    29ba:	09 d0       	rcall	.+18     	; 0x29ce <__divmodhi4_neg2>
    29bc:	0e 94 f8 14 	call	0x29f0	; 0x29f0 <__udivmodhi4>
    29c0:	07 fc       	sbrc	r0, 7
    29c2:	05 d0       	rcall	.+10     	; 0x29ce <__divmodhi4_neg2>
    29c4:	3e f4       	brtc	.+14     	; 0x29d4 <__divmodhi4_exit>

000029c6 <__divmodhi4_neg1>:
    29c6:	90 95       	com	r25
    29c8:	81 95       	neg	r24
    29ca:	9f 4f       	sbci	r25, 0xFF	; 255
    29cc:	08 95       	ret

000029ce <__divmodhi4_neg2>:
    29ce:	70 95       	com	r23
    29d0:	61 95       	neg	r22
    29d2:	7f 4f       	sbci	r23, 0xFF	; 255

000029d4 <__divmodhi4_exit>:
    29d4:	08 95       	ret

000029d6 <__tablejump2__>:
    29d6:	ee 0f       	add	r30, r30
    29d8:	ff 1f       	adc	r31, r31
    29da:	05 90       	lpm	r0, Z+
    29dc:	f4 91       	lpm	r31, Z
    29de:	e0 2d       	mov	r30, r0
    29e0:	09 94       	ijmp

000029e2 <__usmulhisi3>:
    29e2:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <__umulhisi3>

000029e6 <__usmulhisi3_tail>:
    29e6:	b7 ff       	sbrs	r27, 7
    29e8:	08 95       	ret
    29ea:	82 1b       	sub	r24, r18
    29ec:	93 0b       	sbc	r25, r19
    29ee:	08 95       	ret

000029f0 <__udivmodhi4>:
    29f0:	aa 1b       	sub	r26, r26
    29f2:	bb 1b       	sub	r27, r27
    29f4:	51 e1       	ldi	r21, 0x11	; 17
    29f6:	07 c0       	rjmp	.+14     	; 0x2a06 <__udivmodhi4_ep>

000029f8 <__udivmodhi4_loop>:
    29f8:	aa 1f       	adc	r26, r26
    29fa:	bb 1f       	adc	r27, r27
    29fc:	a6 17       	cp	r26, r22
    29fe:	b7 07       	cpc	r27, r23
    2a00:	10 f0       	brcs	.+4      	; 0x2a06 <__udivmodhi4_ep>
    2a02:	a6 1b       	sub	r26, r22
    2a04:	b7 0b       	sbc	r27, r23

00002a06 <__udivmodhi4_ep>:
    2a06:	88 1f       	adc	r24, r24
    2a08:	99 1f       	adc	r25, r25
    2a0a:	5a 95       	dec	r21
    2a0c:	a9 f7       	brne	.-22     	; 0x29f8 <__udivmodhi4_loop>
    2a0e:	80 95       	com	r24
    2a10:	90 95       	com	r25
    2a12:	bc 01       	movw	r22, r24
    2a14:	cd 01       	movw	r24, r26
    2a16:	08 95       	ret

00002a18 <__umulhisi3>:
    2a18:	a2 9f       	mul	r26, r18
    2a1a:	b0 01       	movw	r22, r0
    2a1c:	b3 9f       	mul	r27, r19
    2a1e:	c0 01       	movw	r24, r0
    2a20:	a3 9f       	mul	r26, r19
    2a22:	70 0d       	add	r23, r0
    2a24:	81 1d       	adc	r24, r1
    2a26:	11 24       	eor	r1, r1
    2a28:	91 1d       	adc	r25, r1
    2a2a:	b2 9f       	mul	r27, r18
    2a2c:	70 0d       	add	r23, r0
    2a2e:	81 1d       	adc	r24, r1
    2a30:	11 24       	eor	r1, r1
    2a32:	91 1d       	adc	r25, r1
    2a34:	08 95       	ret

00002a36 <setjmp>:
    2a36:	dc 01       	movw	r26, r24
    2a38:	2d 92       	st	X+, r2
    2a3a:	3d 92       	st	X+, r3
    2a3c:	4d 92       	st	X+, r4
    2a3e:	5d 92       	st	X+, r5
    2a40:	6d 92       	st	X+, r6
    2a42:	7d 92       	st	X+, r7
    2a44:	8d 92       	st	X+, r8
    2a46:	9d 92       	st	X+, r9
    2a48:	ad 92       	st	X+, r10
    2a4a:	bd 92       	st	X+, r11
    2a4c:	cd 92       	st	X+, r12
    2a4e:	dd 92       	st	X+, r13
    2a50:	ed 92       	st	X+, r14
    2a52:	fd 92       	st	X+, r15
    2a54:	0d 93       	st	X+, r16
    2a56:	1d 93       	st	X+, r17
    2a58:	cd 93       	st	X+, r28
    2a5a:	dd 93       	st	X+, r29
    2a5c:	ff 91       	pop	r31
    2a5e:	ef 91       	pop	r30
    2a60:	8d b7       	in	r24, 0x3d	; 61
    2a62:	8d 93       	st	X+, r24
    2a64:	8e b7       	in	r24, 0x3e	; 62
    2a66:	8d 93       	st	X+, r24
    2a68:	8f b7       	in	r24, 0x3f	; 63
    2a6a:	8d 93       	st	X+, r24
    2a6c:	ed 93       	st	X+, r30
    2a6e:	fd 93       	st	X+, r31
    2a70:	88 27       	eor	r24, r24
    2a72:	99 27       	eor	r25, r25
    2a74:	09 94       	ijmp

00002a76 <longjmp>:
    2a76:	dc 01       	movw	r26, r24
    2a78:	cb 01       	movw	r24, r22
    2a7a:	81 30       	cpi	r24, 0x01	; 1
    2a7c:	91 05       	cpc	r25, r1
    2a7e:	81 1d       	adc	r24, r1
    2a80:	2d 90       	ld	r2, X+
    2a82:	3d 90       	ld	r3, X+
    2a84:	4d 90       	ld	r4, X+
    2a86:	5d 90       	ld	r5, X+
    2a88:	6d 90       	ld	r6, X+
    2a8a:	7d 90       	ld	r7, X+
    2a8c:	8d 90       	ld	r8, X+
    2a8e:	9d 90       	ld	r9, X+
    2a90:	ad 90       	ld	r10, X+
    2a92:	bd 90       	ld	r11, X+
    2a94:	cd 90       	ld	r12, X+
    2a96:	dd 90       	ld	r13, X+
    2a98:	ed 90       	ld	r14, X+
    2a9a:	fd 90       	ld	r15, X+
    2a9c:	0d 91       	ld	r16, X+
    2a9e:	1d 91       	ld	r17, X+
    2aa0:	cd 91       	ld	r28, X+
    2aa2:	dd 91       	ld	r29, X+
    2aa4:	ed 91       	ld	r30, X+
    2aa6:	fd 91       	ld	r31, X+
    2aa8:	0d 90       	ld	r0, X+
    2aaa:	f8 94       	cli
    2aac:	fe bf       	out	0x3e, r31	; 62
    2aae:	0f be       	out	0x3f, r0	; 63
    2ab0:	ed bf       	out	0x3d, r30	; 61
    2ab2:	ed 91       	ld	r30, X+
    2ab4:	fd 91       	ld	r31, X+
    2ab6:	09 94       	ijmp

00002ab8 <_exit>:
    2ab8:	f8 94       	cli

00002aba <__stop_program>:
    2aba:	ff cf       	rjmp	.-2      	; 0x2aba <__stop_program>
