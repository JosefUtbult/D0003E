
Labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000287a  0000290e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000287a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080010a  0080010a  00002918  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002918  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002948  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d8  00000000  00000000  00002988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d73  00000000  00000000  00002c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000141a  00000000  00000000  000069d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a71  00000000  00000000  00007ded  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d64  00000000  00000000  00009860  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a64  00000000  00000000  0000a5c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003dfe  00000000  00000000  0000b028  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  0000ee26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
       4:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__vector_1>
       8:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__vector_2>
       c:	0c 94 26 09 	jmp	0x124c	; 0x124c <__vector_3>
      10:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__vector_4>
      14:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__vector_5>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <__vector_7>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 83 10 	jmp	0x2106	; 0x2106 <__vector_9>
      28:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__vector_10>
      2c:	0c 94 d6 0a 	jmp	0x15ac	; 0x15ac <__vector_11>
      30:	0c 94 42 0b 	jmp	0x1684	; 0x1684 <__vector_12>
      34:	0c 94 ae 0b 	jmp	0x175c	; 0x175c <__vector_13>
      38:	0c 94 1a 0c 	jmp	0x1834	; 0x1834 <__vector_14>
      3c:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__vector_15>
      40:	0c 94 f2 0c 	jmp	0x19e4	; 0x19e4 <__vector_16>
      44:	0c 94 5e 0d 	jmp	0x1abc	; 0x1abc <__vector_17>
      48:	0c 94 ca 0d 	jmp	0x1b94	; 0x1b94 <__vector_18>
      4c:	0c 94 36 0e 	jmp	0x1c6c	; 0x1c6c <__vector_19>
      50:	0c 94 a2 0e 	jmp	0x1d44	; 0x1d44 <__vector_20>
      54:	0c 94 0e 0f 	jmp	0x1e1c	; 0x1e1c <__vector_21>
      58:	0c 94 7a 0f 	jmp	0x1ef4	; 0x1ef4 <__vector_22>
      5c:	95 02       	muls	r25, r21
      5e:	a0 02       	muls	r26, r16
      60:	ab 02       	muls	r26, r27
      62:	b6 02       	muls	r27, r22
      64:	c1 02       	muls	r28, r17
      66:	cc 02       	muls	r28, r28
      68:	d7 02       	muls	r29, r23
      6a:	e2 02       	muls	r30, r18
      6c:	ed 02       	muls	r30, r29
      6e:	f8 02       	muls	r31, r24
      70:	21 04       	cpc	r2, r1
      72:	21 04       	cpc	r2, r1
      74:	21 04       	cpc	r2, r1
      76:	21 04       	cpc	r2, r1
      78:	21 04       	cpc	r2, r1
      7a:	21 04       	cpc	r2, r1
      7c:	21 04       	cpc	r2, r1
      7e:	03 03       	mulsu	r16, r19
      80:	0e 03       	fmul	r16, r22
      82:	19 03       	fmul	r17, r17
      84:	24 03       	mulsu	r18, r20
      86:	2f 03       	fmul	r18, r23
      88:	3a 03       	fmul	r19, r18
      8a:	45 03       	mulsu	r20, r21
      8c:	50 03       	mulsu	r21, r16
      8e:	5b 03       	fmul	r21, r19
      90:	66 03       	mulsu	r22, r22
      92:	71 03       	mulsu	r23, r17
      94:	7c 03       	fmul	r23, r20
      96:	87 03       	fmuls	r16, r23
      98:	92 03       	fmuls	r17, r18
      9a:	9d 03       	fmulsu	r17, r21
      9c:	a8 03       	fmulsu	r18, r16
      9e:	b3 03       	fmuls	r19, r19
      a0:	be 03       	fmulsu	r19, r22
      a2:	c9 03       	fmulsu	r20, r17
      a4:	d4 03       	fmuls	r21, r20
      a6:	df 03       	fmulsu	r21, r23
      a8:	ea 03       	fmulsu	r22, r18
      aa:	f5 03       	fmuls	r23, r21
      ac:	00 04       	cpc	r0, r0
      ae:	0b 04       	cpc	r0, r11
      b0:	16 04       	cpc	r1, r6

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d4 e0       	ldi	r29, 0x04	; 4
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	ea e7       	ldi	r30, 0x7A	; 122
      c6:	f8 e2       	ldi	r31, 0x28	; 40
      c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x10>
      ca:	05 90       	lpm	r0, Z+
      cc:	0d 92       	st	X+, r0
      ce:	aa 30       	cpi	r26, 0x0A	; 10
      d0:	b1 07       	cpc	r27, r17
      d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0xc>

000000d4 <__do_clear_bss>:
      d4:	24 e0       	ldi	r18, 0x04	; 4
      d6:	aa e0       	ldi	r26, 0x0A	; 10
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
      dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
      de:	ad 35       	cpi	r26, 0x5D	; 93
      e0:	b2 07       	cpc	r27, r18
      e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
      e4:	0e 94 9d 05 	call	0xb3a	; 0xb3a <main>
      e8:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <LCDWritePackage>:
	LCDDR13 = 0x00;
	
	LCDDR15 = 0x00;
	LCDDR16 = 0x00;
	LCDDR17 = 0x00;
	LCDDR18 = 0x00;
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	99 23       	and	r25, r25
      fe:	0c f4       	brge	.+2      	; 0x102 <LCDWritePackage+0x12>
     100:	f7 c1       	rjmp	.+1006   	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     102:	82 30       	cpi	r24, 0x02	; 2
     104:	91 05       	cpc	r25, r1
     106:	8c f4       	brge	.+34     	; 0x12a <LCDWritePackage+0x3a>
     108:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     10c:	01 97       	sbiw	r24, 0x01	; 1
     10e:	09 f0       	breq	.+2      	; 0x112 <LCDWritePackage+0x22>
     110:	9b c0       	rjmp	.+310    	; 0x248 <LCDWritePackage+0x158>
     112:	48 c0       	rjmp	.+144    	; 0x1a4 <LCDWritePackage+0xb4>
     114:	04 c0       	rjmp	.+8      	; 0x11e <LCDWritePackage+0x2e>
     116:	00 0f       	add	r16, r16
     118:	11 1f       	adc	r17, r17
     11a:	22 1f       	adc	r18, r18
     11c:	33 1f       	adc	r19, r19
     11e:	9a 95       	dec	r25
     120:	d2 f7       	brpl	.-12     	; 0x116 <LCDWritePackage+0x26>
     122:	08 2b       	or	r16, r24
     124:	00 93 fb 00 	sts	0x00FB, r16	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     128:	e3 c1       	rjmp	.+966    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     12a:	84 30       	cpi	r24, 0x04	; 4
     12c:	91 05       	cpc	r25, r1
     12e:	8c f4       	brge	.+34     	; 0x152 <LCDWritePackage+0x62>
     130:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     134:	03 97       	sbiw	r24, 0x03	; 3
     136:	09 f0       	breq	.+2      	; 0x13a <LCDWritePackage+0x4a>
     138:	9f c0       	rjmp	.+318    	; 0x278 <LCDWritePackage+0x188>
     13a:	b6 c0       	rjmp	.+364    	; 0x2a8 <LCDWritePackage+0x1b8>
     13c:	04 c0       	rjmp	.+8      	; 0x146 <LCDWritePackage+0x56>
     13e:	00 0f       	add	r16, r16
     140:	11 1f       	adc	r17, r17
     142:	22 1f       	adc	r18, r18
     144:	33 1f       	adc	r19, r19
     146:	9a 95       	dec	r25
     148:	d2 f7       	brpl	.-12     	; 0x13e <LCDWritePackage+0x4e>
     14a:	08 2b       	or	r16, r24
     14c:	00 93 fc 00 	sts	0x00FC, r16	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     150:	cf c1       	rjmp	.+926    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     152:	86 30       	cpi	r24, 0x06	; 6
     154:	91 05       	cpc	r25, r1
     156:	8c f4       	brge	.+34     	; 0x17a <LCDWritePackage+0x8a>
     158:	e0 91 ee 00 	lds	r30, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     15c:	05 97       	sbiw	r24, 0x05	; 5
     15e:	09 f0       	breq	.+2      	; 0x162 <LCDWritePackage+0x72>
     160:	f5 c0       	rjmp	.+490    	; 0x34c <LCDWritePackage+0x25c>
     162:	0c c1       	rjmp	.+536    	; 0x37c <LCDWritePackage+0x28c>
     164:	04 c0       	rjmp	.+8      	; 0x16e <LCDWritePackage+0x7e>
     166:	00 0f       	add	r16, r16
     168:	11 1f       	adc	r17, r17
     16a:	22 1f       	adc	r18, r18
     16c:	33 1f       	adc	r19, r19
     16e:	9a 95       	dec	r25
     170:	d2 f7       	brpl	.-12     	; 0x166 <LCDWritePackage+0x76>
     172:	08 2b       	or	r16, r24
     174:	00 93 fd 00 	sts	0x00FD, r16	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     178:	bb c1       	rjmp	.+886    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     17a:	88 30       	cpi	r24, 0x08	; 8
     17c:	91 05       	cpc	r25, r1
     17e:	0c f0       	brlt	.+2      	; 0x182 <LCDWritePackage+0x92>
     180:	b7 c1       	rjmp	.+878    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     182:	e0 91 ef 00 	lds	r30, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     186:	07 97       	sbiw	r24, 0x07	; 7
     188:	09 f0       	breq	.+2      	; 0x18c <LCDWritePackage+0x9c>
     18a:	4a c1       	rjmp	.+660    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     18c:	61 c1       	rjmp	.+706    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     18e:	04 c0       	rjmp	.+8      	; 0x198 <LCDWritePackage+0xa8>
     190:	00 0f       	add	r16, r16
     192:	11 1f       	adc	r17, r17
     194:	22 1f       	adc	r18, r18
     196:	33 1f       	adc	r19, r19
     198:	9a 95       	dec	r25
     19a:	d2 f7       	brpl	.-12     	; 0x190 <LCDWritePackage+0xa0>
     19c:	08 2b       	or	r16, r24
     19e:	00 93 fe 00 	sts	0x00FE, r16	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     1a2:	a6 c1       	rjmp	.+844    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     1a4:	9e 2f       	mov	r25, r30
     1a6:	9f 70       	andi	r25, 0x0F	; 15
     1a8:	6b 01       	movw	r12, r22
     1aa:	e1 2c       	mov	r14, r1
     1ac:	f1 2c       	mov	r15, r1
     1ae:	cc 0c       	add	r12, r12
     1b0:	dd 1c       	adc	r13, r13
     1b2:	ee 1c       	adc	r14, r14
     1b4:	ff 1c       	adc	r15, r15
     1b6:	cc 0c       	add	r12, r12
     1b8:	dd 1c       	adc	r13, r13
     1ba:	ee 1c       	adc	r14, r14
     1bc:	ff 1c       	adc	r15, r15
     1be:	cc 0c       	add	r12, r12
     1c0:	dd 1c       	adc	r13, r13
     1c2:	ee 1c       	adc	r14, r14
     1c4:	ff 1c       	adc	r15, r15
     1c6:	cc 0c       	add	r12, r12
     1c8:	dd 1c       	adc	r13, r13
     1ca:	ee 1c       	adc	r14, r14
     1cc:	ff 1c       	adc	r15, r15
     1ce:	e9 2f       	mov	r30, r25
     1d0:	ec 29       	or	r30, r12
     1d2:	e0 93 ec 00 	sts	0x00EC, r30	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     1d6:	e1 ef       	ldi	r30, 0xF1	; 241
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	8f 70       	andi	r24, 0x0F	; 15
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	70 e0       	ldi	r23, 0x00	; 0
     1e2:	44 0f       	add	r20, r20
     1e4:	55 1f       	adc	r21, r21
     1e6:	66 1f       	adc	r22, r22
     1e8:	77 1f       	adc	r23, r23
     1ea:	44 0f       	add	r20, r20
     1ec:	55 1f       	adc	r21, r21
     1ee:	66 1f       	adc	r22, r22
     1f0:	77 1f       	adc	r23, r23
     1f2:	44 0f       	add	r20, r20
     1f4:	55 1f       	adc	r21, r21
     1f6:	66 1f       	adc	r22, r22
     1f8:	77 1f       	adc	r23, r23
     1fa:	44 0f       	add	r20, r20
     1fc:	55 1f       	adc	r21, r21
     1fe:	66 1f       	adc	r22, r22
     200:	77 1f       	adc	r23, r23
     202:	48 2b       	or	r20, r24
     204:	40 83       	st	Z, r20
     206:	e6 ef       	ldi	r30, 0xF6	; 246
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	48 2f       	mov	r20, r24
     20e:	4f 70       	andi	r20, 0x0F	; 15
     210:	c9 01       	movw	r24, r18
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b0 e0       	ldi	r27, 0x00	; 0
     216:	88 0f       	add	r24, r24
     218:	99 1f       	adc	r25, r25
     21a:	aa 1f       	adc	r26, r26
     21c:	bb 1f       	adc	r27, r27
     21e:	88 0f       	add	r24, r24
     220:	99 1f       	adc	r25, r25
     222:	aa 1f       	adc	r26, r26
     224:	bb 1f       	adc	r27, r27
     226:	88 0f       	add	r24, r24
     228:	99 1f       	adc	r25, r25
     22a:	aa 1f       	adc	r26, r26
     22c:	bb 1f       	adc	r27, r27
     22e:	88 0f       	add	r24, r24
     230:	99 1f       	adc	r25, r25
     232:	aa 1f       	adc	r26, r26
     234:	bb 1f       	adc	r27, r27
     236:	84 2b       	or	r24, r20
     238:	80 83       	st	Z, r24
     23a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     23e:	8f 70       	andi	r24, 0x0F	; 15
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	94 e0       	ldi	r25, 0x04	; 4
     246:	66 cf       	rjmp	.-308    	; 0x114 <LCDWritePackage+0x24>
     248:	8e 2f       	mov	r24, r30
     24a:	80 7f       	andi	r24, 0xF0	; 240
     24c:	86 2b       	or	r24, r22
     24e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     252:	e1 ef       	ldi	r30, 0xF1	; 241
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	80 7f       	andi	r24, 0xF0	; 240
     25a:	48 2b       	or	r20, r24
     25c:	40 83       	st	Z, r20
     25e:	e6 ef       	ldi	r30, 0xF6	; 246
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	80 7f       	andi	r24, 0xF0	; 240
     266:	82 2b       	or	r24, r18
     268:	80 83       	st	Z, r24
     26a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     26e:	80 7f       	andi	r24, 0xF0	; 240
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	4e cf       	rjmp	.-356    	; 0x114 <LCDWritePackage+0x24>
     278:	8e 2f       	mov	r24, r30
     27a:	80 7f       	andi	r24, 0xF0	; 240
     27c:	86 2b       	or	r24, r22
     27e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     282:	e2 ef       	ldi	r30, 0xF2	; 242
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	80 7f       	andi	r24, 0xF0	; 240
     28a:	48 2b       	or	r20, r24
     28c:	40 83       	st	Z, r20
     28e:	e7 ef       	ldi	r30, 0xF7	; 247
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	80 7f       	andi	r24, 0xF0	; 240
     296:	82 2b       	or	r24, r18
     298:	80 83       	st	Z, r24
     29a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     29e:	80 7f       	andi	r24, 0xF0	; 240
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	4a cf       	rjmp	.-364    	; 0x13c <LCDWritePackage+0x4c>
     2a8:	9e 2f       	mov	r25, r30
     2aa:	9f 70       	andi	r25, 0x0F	; 15
     2ac:	6b 01       	movw	r12, r22
     2ae:	e1 2c       	mov	r14, r1
     2b0:	f1 2c       	mov	r15, r1
     2b2:	cc 0c       	add	r12, r12
     2b4:	dd 1c       	adc	r13, r13
     2b6:	ee 1c       	adc	r14, r14
     2b8:	ff 1c       	adc	r15, r15
     2ba:	cc 0c       	add	r12, r12
     2bc:	dd 1c       	adc	r13, r13
     2be:	ee 1c       	adc	r14, r14
     2c0:	ff 1c       	adc	r15, r15
     2c2:	cc 0c       	add	r12, r12
     2c4:	dd 1c       	adc	r13, r13
     2c6:	ee 1c       	adc	r14, r14
     2c8:	ff 1c       	adc	r15, r15
     2ca:	cc 0c       	add	r12, r12
     2cc:	dd 1c       	adc	r13, r13
     2ce:	ee 1c       	adc	r14, r14
     2d0:	ff 1c       	adc	r15, r15
     2d2:	e9 2f       	mov	r30, r25
     2d4:	ec 29       	or	r30, r12
     2d6:	e0 93 ed 00 	sts	0x00ED, r30	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     2da:	e2 ef       	ldi	r30, 0xF2	; 242
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	8f 70       	andi	r24, 0x0F	; 15
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	44 0f       	add	r20, r20
     2e8:	55 1f       	adc	r21, r21
     2ea:	66 1f       	adc	r22, r22
     2ec:	77 1f       	adc	r23, r23
     2ee:	44 0f       	add	r20, r20
     2f0:	55 1f       	adc	r21, r21
     2f2:	66 1f       	adc	r22, r22
     2f4:	77 1f       	adc	r23, r23
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	44 0f       	add	r20, r20
     300:	55 1f       	adc	r21, r21
     302:	66 1f       	adc	r22, r22
     304:	77 1f       	adc	r23, r23
     306:	48 2b       	or	r20, r24
     308:	40 83       	st	Z, r20
     30a:	e7 ef       	ldi	r30, 0xF7	; 247
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	48 2f       	mov	r20, r24
     312:	4f 70       	andi	r20, 0x0F	; 15
     314:	c9 01       	movw	r24, r18
     316:	a0 e0       	ldi	r26, 0x00	; 0
     318:	b0 e0       	ldi	r27, 0x00	; 0
     31a:	88 0f       	add	r24, r24
     31c:	99 1f       	adc	r25, r25
     31e:	aa 1f       	adc	r26, r26
     320:	bb 1f       	adc	r27, r27
     322:	88 0f       	add	r24, r24
     324:	99 1f       	adc	r25, r25
     326:	aa 1f       	adc	r26, r26
     328:	bb 1f       	adc	r27, r27
     32a:	88 0f       	add	r24, r24
     32c:	99 1f       	adc	r25, r25
     32e:	aa 1f       	adc	r26, r26
     330:	bb 1f       	adc	r27, r27
     332:	88 0f       	add	r24, r24
     334:	99 1f       	adc	r25, r25
     336:	aa 1f       	adc	r26, r26
     338:	bb 1f       	adc	r27, r27
     33a:	84 2b       	or	r24, r20
     33c:	80 83       	st	Z, r24
     33e:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     342:	8f 70       	andi	r24, 0x0F	; 15
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	94 e0       	ldi	r25, 0x04	; 4
     34a:	f8 ce       	rjmp	.-528    	; 0x13c <LCDWritePackage+0x4c>
     34c:	8e 2f       	mov	r24, r30
     34e:	80 7f       	andi	r24, 0xF0	; 240
     350:	86 2b       	or	r24, r22
     352:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     356:	e3 ef       	ldi	r30, 0xF3	; 243
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	80 81       	ld	r24, Z
     35c:	80 7f       	andi	r24, 0xF0	; 240
     35e:	48 2b       	or	r20, r24
     360:	40 83       	st	Z, r20
     362:	e8 ef       	ldi	r30, 0xF8	; 248
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 7f       	andi	r24, 0xF0	; 240
     36a:	82 2b       	or	r24, r18
     36c:	80 83       	st	Z, r24
     36e:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     372:	80 7f       	andi	r24, 0xF0	; 240
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	f4 ce       	rjmp	.-536    	; 0x164 <LCDWritePackage+0x74>
     37c:	6b 01       	movw	r12, r22
     37e:	e1 2c       	mov	r14, r1
     380:	f1 2c       	mov	r15, r1
     382:	cc 0c       	add	r12, r12
     384:	dd 1c       	adc	r13, r13
     386:	ee 1c       	adc	r14, r14
     388:	ff 1c       	adc	r15, r15
     38a:	cc 0c       	add	r12, r12
     38c:	dd 1c       	adc	r13, r13
     38e:	ee 1c       	adc	r14, r14
     390:	ff 1c       	adc	r15, r15
     392:	cc 0c       	add	r12, r12
     394:	dd 1c       	adc	r13, r13
     396:	ee 1c       	adc	r14, r14
     398:	ff 1c       	adc	r15, r15
     39a:	cc 0c       	add	r12, r12
     39c:	dd 1c       	adc	r13, r13
     39e:	ee 1c       	adc	r14, r14
     3a0:	ff 1c       	adc	r15, r15
     3a2:	9e 2f       	mov	r25, r30
     3a4:	9f 70       	andi	r25, 0x0F	; 15
     3a6:	e9 2f       	mov	r30, r25
     3a8:	ec 29       	or	r30, r12
     3aa:	e0 93 ee 00 	sts	0x00EE, r30	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     3ae:	e3 ef       	ldi	r30, 0xF3	; 243
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	80 81       	ld	r24, Z
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	44 0f       	add	r20, r20
     3ba:	55 1f       	adc	r21, r21
     3bc:	66 1f       	adc	r22, r22
     3be:	77 1f       	adc	r23, r23
     3c0:	44 0f       	add	r20, r20
     3c2:	55 1f       	adc	r21, r21
     3c4:	66 1f       	adc	r22, r22
     3c6:	77 1f       	adc	r23, r23
     3c8:	44 0f       	add	r20, r20
     3ca:	55 1f       	adc	r21, r21
     3cc:	66 1f       	adc	r22, r22
     3ce:	77 1f       	adc	r23, r23
     3d0:	44 0f       	add	r20, r20
     3d2:	55 1f       	adc	r21, r21
     3d4:	66 1f       	adc	r22, r22
     3d6:	77 1f       	adc	r23, r23
     3d8:	8f 70       	andi	r24, 0x0F	; 15
     3da:	48 2b       	or	r20, r24
     3dc:	40 83       	st	Z, r20
     3de:	e8 ef       	ldi	r30, 0xF8	; 248
     3e0:	f0 e0       	ldi	r31, 0x00	; 0
     3e2:	40 81       	ld	r20, Z
     3e4:	c9 01       	movw	r24, r18
     3e6:	a0 e0       	ldi	r26, 0x00	; 0
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	aa 1f       	adc	r26, r26
     3f0:	bb 1f       	adc	r27, r27
     3f2:	88 0f       	add	r24, r24
     3f4:	99 1f       	adc	r25, r25
     3f6:	aa 1f       	adc	r26, r26
     3f8:	bb 1f       	adc	r27, r27
     3fa:	88 0f       	add	r24, r24
     3fc:	99 1f       	adc	r25, r25
     3fe:	aa 1f       	adc	r26, r26
     400:	bb 1f       	adc	r27, r27
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	aa 1f       	adc	r26, r26
     408:	bb 1f       	adc	r27, r27
     40a:	24 2f       	mov	r18, r20
     40c:	2f 70       	andi	r18, 0x0F	; 15
     40e:	82 2b       	or	r24, r18
     410:	80 83       	st	Z, r24
     412:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     416:	8f 70       	andi	r24, 0x0F	; 15
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	94 e0       	ldi	r25, 0x04	; 4
     41e:	a2 ce       	rjmp	.-700    	; 0x164 <LCDWritePackage+0x74>
     420:	8e 2f       	mov	r24, r30
     422:	80 7f       	andi	r24, 0xF0	; 240
     424:	86 2b       	or	r24, r22
     426:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     42a:	e3 ef       	ldi	r30, 0xF3	; 243
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	80 81       	ld	r24, Z
     430:	80 7f       	andi	r24, 0xF0	; 240
     432:	48 2b       	or	r20, r24
     434:	40 83       	st	Z, r20
     436:	e9 ef       	ldi	r30, 0xF9	; 249
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	80 7f       	andi	r24, 0xF0	; 240
     43e:	82 2b       	or	r24, r18
     440:	80 83       	st	Z, r24
     442:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     446:	80 7f       	andi	r24, 0xF0	; 240
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	9f ce       	rjmp	.-706    	; 0x18e <LCDWritePackage+0x9e>
     450:	cb 01       	movw	r24, r22
     452:	a0 e0       	ldi	r26, 0x00	; 0
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	aa 1f       	adc	r26, r26
     45c:	bb 1f       	adc	r27, r27
     45e:	88 0f       	add	r24, r24
     460:	99 1f       	adc	r25, r25
     462:	aa 1f       	adc	r26, r26
     464:	bb 1f       	adc	r27, r27
     466:	88 0f       	add	r24, r24
     468:	99 1f       	adc	r25, r25
     46a:	aa 1f       	adc	r26, r26
     46c:	bb 1f       	adc	r27, r27
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	aa 1f       	adc	r26, r26
     474:	bb 1f       	adc	r27, r27
     476:	ef 70       	andi	r30, 0x0F	; 15
     478:	8e 2b       	or	r24, r30
     47a:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     47e:	e3 ef       	ldi	r30, 0xF3	; 243
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	70 e0       	ldi	r23, 0x00	; 0
     488:	44 0f       	add	r20, r20
     48a:	55 1f       	adc	r21, r21
     48c:	66 1f       	adc	r22, r22
     48e:	77 1f       	adc	r23, r23
     490:	44 0f       	add	r20, r20
     492:	55 1f       	adc	r21, r21
     494:	66 1f       	adc	r22, r22
     496:	77 1f       	adc	r23, r23
     498:	44 0f       	add	r20, r20
     49a:	55 1f       	adc	r21, r21
     49c:	66 1f       	adc	r22, r22
     49e:	77 1f       	adc	r23, r23
     4a0:	44 0f       	add	r20, r20
     4a2:	55 1f       	adc	r21, r21
     4a4:	66 1f       	adc	r22, r22
     4a6:	77 1f       	adc	r23, r23
     4a8:	8f 70       	andi	r24, 0x0F	; 15
     4aa:	48 2b       	or	r20, r24
     4ac:	40 83       	st	Z, r20
     4ae:	e9 ef       	ldi	r30, 0xF9	; 249
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	40 81       	ld	r20, Z
     4b4:	c9 01       	movw	r24, r18
     4b6:	a0 e0       	ldi	r26, 0x00	; 0
     4b8:	b0 e0       	ldi	r27, 0x00	; 0
     4ba:	88 0f       	add	r24, r24
     4bc:	99 1f       	adc	r25, r25
     4be:	aa 1f       	adc	r26, r26
     4c0:	bb 1f       	adc	r27, r27
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	aa 1f       	adc	r26, r26
     4c8:	bb 1f       	adc	r27, r27
     4ca:	88 0f       	add	r24, r24
     4cc:	99 1f       	adc	r25, r25
     4ce:	aa 1f       	adc	r26, r26
     4d0:	bb 1f       	adc	r27, r27
     4d2:	88 0f       	add	r24, r24
     4d4:	99 1f       	adc	r25, r25
     4d6:	aa 1f       	adc	r26, r26
     4d8:	bb 1f       	adc	r27, r27
     4da:	24 2f       	mov	r18, r20
     4dc:	2f 70       	andi	r18, 0x0F	; 15
     4de:	82 2b       	or	r24, r18
     4e0:	80 83       	st	Z, r24
     4e2:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     4e6:	8f 70       	andi	r24, 0x0F	; 15
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	94 e0       	ldi	r25, 0x04	; 4
     4ee:	4f ce       	rjmp	.-866    	; 0x18e <LCDWritePackage+0x9e>
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	08 95       	ret

000004fe <writeChar>:
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	fb 01       	movw	r30, r22
     504:	82 81       	ldd	r24, Z+2	; 0x02
     506:	93 81       	ldd	r25, Z+3	; 0x03
     508:	86 30       	cpi	r24, 0x06	; 6
     50a:	91 05       	cpc	r25, r1
     50c:	08 f0       	brcs	.+2      	; 0x510 <__stack+0x11>
     50e:	a3 c1       	rjmp	.+838    	; 0x856 <__stack+0x357>
     510:	01 90       	ld	r0, Z+
     512:	f0 81       	ld	r31, Z
     514:	e0 2d       	mov	r30, r0
     516:	ff 27       	eor	r31, r31
     518:	f0 97       	sbiw	r30, 0x30	; 48
     51a:	eb 32       	cpi	r30, 0x2B	; 43
     51c:	f1 05       	cpc	r31, r1
     51e:	08 f0       	brcs	.+2      	; 0x522 <__stack+0x23>
     520:	90 c1       	rjmp	.+800    	; 0x842 <__stack+0x343>
     522:	e2 5d       	subi	r30, 0xD2	; 210
     524:	ff 4f       	sbci	r31, 0xFF	; 255
     526:	0c 94 e0 13 	jmp	0x27c0	; 0x27c0 <__tablejump2__>
     52a:	05 e0       	ldi	r16, 0x05	; 5
     52c:	10 e0       	ldi	r17, 0x00	; 0
     52e:	25 e0       	ldi	r18, 0x05	; 5
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	45 e0       	ldi	r20, 0x05	; 5
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	69 e0       	ldi	r22, 0x09	; 9
     538:	70 e0       	ldi	r23, 0x00	; 0
     53a:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     53e:	8b c1       	rjmp	.+790    	; 0x856 <__stack+0x357>
     540:	00 e0       	ldi	r16, 0x00	; 0
     542:	10 e0       	ldi	r17, 0x00	; 0
     544:	21 e0       	ldi	r18, 0x01	; 1
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	41 e0       	ldi	r20, 0x01	; 1
     54a:	50 e0       	ldi	r21, 0x00	; 0
     54c:	60 e0       	ldi	r22, 0x00	; 0
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     554:	80 c1       	rjmp	.+768    	; 0x856 <__stack+0x357>
     556:	05 e0       	ldi	r16, 0x05	; 5
     558:	10 e0       	ldi	r17, 0x00	; 0
     55a:	28 e0       	ldi	r18, 0x08	; 8
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	41 e0       	ldi	r20, 0x01	; 1
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	61 e0       	ldi	r22, 0x01	; 1
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     56a:	75 c1       	rjmp	.+746    	; 0x856 <__stack+0x357>
     56c:	01 e0       	ldi	r16, 0x01	; 1
     56e:	10 e0       	ldi	r17, 0x00	; 0
     570:	2b e0       	ldi	r18, 0x0B	; 11
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	41 e0       	ldi	r20, 0x01	; 1
     576:	50 e0       	ldi	r21, 0x00	; 0
     578:	61 e0       	ldi	r22, 0x01	; 1
     57a:	70 e0       	ldi	r23, 0x00	; 0
     57c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     580:	6a c1       	rjmp	.+724    	; 0x856 <__stack+0x357>
     582:	00 e0       	ldi	r16, 0x00	; 0
     584:	10 e0       	ldi	r17, 0x00	; 0
     586:	2b e0       	ldi	r18, 0x0B	; 11
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	45 e0       	ldi	r20, 0x05	; 5
     58c:	50 e0       	ldi	r21, 0x00	; 0
     58e:	60 e0       	ldi	r22, 0x00	; 0
     590:	70 e0       	ldi	r23, 0x00	; 0
     592:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     596:	5f c1       	rjmp	.+702    	; 0x856 <__stack+0x357>
     598:	01 e0       	ldi	r16, 0x01	; 1
     59a:	10 e0       	ldi	r17, 0x00	; 0
     59c:	2b e0       	ldi	r18, 0x0B	; 11
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	44 e0       	ldi	r20, 0x04	; 4
     5a2:	50 e0       	ldi	r21, 0x00	; 0
     5a4:	61 e0       	ldi	r22, 0x01	; 1
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5ac:	54 c1       	rjmp	.+680    	; 0x856 <__stack+0x357>
     5ae:	01 e0       	ldi	r16, 0x01	; 1
     5b0:	10 e0       	ldi	r17, 0x00	; 0
     5b2:	2f e0       	ldi	r18, 0x0F	; 15
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	44 e0       	ldi	r20, 0x04	; 4
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	61 e0       	ldi	r22, 0x01	; 1
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5c2:	49 c1       	rjmp	.+658    	; 0x856 <__stack+0x357>
     5c4:	04 e0       	ldi	r16, 0x04	; 4
     5c6:	10 e0       	ldi	r17, 0x00	; 0
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	69 e0       	ldi	r22, 0x09	; 9
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5d8:	3e c1       	rjmp	.+636    	; 0x856 <__stack+0x357>
     5da:	01 e0       	ldi	r16, 0x01	; 1
     5dc:	10 e0       	ldi	r17, 0x00	; 0
     5de:	2f e0       	ldi	r18, 0x0F	; 15
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	45 e0       	ldi	r20, 0x05	; 5
     5e4:	50 e0       	ldi	r21, 0x00	; 0
     5e6:	61 e0       	ldi	r22, 0x01	; 1
     5e8:	70 e0       	ldi	r23, 0x00	; 0
     5ea:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5ee:	33 c1       	rjmp	.+614    	; 0x856 <__stack+0x357>
     5f0:	01 e0       	ldi	r16, 0x01	; 1
     5f2:	10 e0       	ldi	r17, 0x00	; 0
     5f4:	2b e0       	ldi	r18, 0x0B	; 11
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	45 e0       	ldi	r20, 0x05	; 5
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	61 e0       	ldi	r22, 0x01	; 1
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     604:	28 c1       	rjmp	.+592    	; 0x856 <__stack+0x357>
     606:	00 e0       	ldi	r16, 0x00	; 0
     608:	10 e0       	ldi	r17, 0x00	; 0
     60a:	2f e0       	ldi	r18, 0x0F	; 15
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	45 e0       	ldi	r20, 0x05	; 5
     610:	50 e0       	ldi	r21, 0x00	; 0
     612:	61 e0       	ldi	r22, 0x01	; 1
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     61a:	1d c1       	rjmp	.+570    	; 0x856 <__stack+0x357>
     61c:	01 e0       	ldi	r16, 0x01	; 1
     61e:	10 e0       	ldi	r17, 0x00	; 0
     620:	2f e0       	ldi	r18, 0x0F	; 15
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	45 e0       	ldi	r20, 0x05	; 5
     626:	50 e0       	ldi	r21, 0x00	; 0
     628:	61 e0       	ldi	r22, 0x01	; 1
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     630:	12 c1       	rjmp	.+548    	; 0x856 <__stack+0x357>
     632:	01 e0       	ldi	r16, 0x01	; 1
     634:	10 e0       	ldi	r17, 0x00	; 0
     636:	24 e0       	ldi	r18, 0x04	; 4
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	44 e0       	ldi	r20, 0x04	; 4
     63c:	50 e0       	ldi	r21, 0x00	; 0
     63e:	61 e0       	ldi	r22, 0x01	; 1
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     646:	07 c1       	rjmp	.+526    	; 0x856 <__stack+0x357>
     648:	04 e0       	ldi	r16, 0x04	; 4
     64a:	10 e0       	ldi	r17, 0x00	; 0
     64c:	24 e0       	ldi	r18, 0x04	; 4
     64e:	30 e0       	ldi	r19, 0x00	; 0
     650:	46 e0       	ldi	r20, 0x06	; 6
     652:	50 e0       	ldi	r21, 0x00	; 0
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     65c:	fc c0       	rjmp	.+504    	; 0x856 <__stack+0x357>
     65e:	01 e0       	ldi	r16, 0x01	; 1
     660:	10 e0       	ldi	r17, 0x00	; 0
     662:	26 e0       	ldi	r18, 0x06	; 6
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	44 e0       	ldi	r20, 0x04	; 4
     668:	50 e0       	ldi	r21, 0x00	; 0
     66a:	61 e0       	ldi	r22, 0x01	; 1
     66c:	70 e0       	ldi	r23, 0x00	; 0
     66e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     672:	f1 c0       	rjmp	.+482    	; 0x856 <__stack+0x357>
     674:	00 e0       	ldi	r16, 0x00	; 0
     676:	10 e0       	ldi	r17, 0x00	; 0
     678:	2e e0       	ldi	r18, 0x0E	; 14
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	44 e0       	ldi	r20, 0x04	; 4
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     688:	e6 c0       	rjmp	.+460    	; 0x856 <__stack+0x357>
     68a:	01 e0       	ldi	r16, 0x01	; 1
     68c:	10 e0       	ldi	r17, 0x00	; 0
     68e:	2d e0       	ldi	r18, 0x0D	; 13
     690:	30 e0       	ldi	r19, 0x00	; 0
     692:	44 e0       	ldi	r20, 0x04	; 4
     694:	50 e0       	ldi	r21, 0x00	; 0
     696:	61 e0       	ldi	r22, 0x01	; 1
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     69e:	db c0       	rjmp	.+438    	; 0x856 <__stack+0x357>
     6a0:	00 e0       	ldi	r16, 0x00	; 0
     6a2:	10 e0       	ldi	r17, 0x00	; 0
     6a4:	2f e0       	ldi	r18, 0x0F	; 15
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	45 e0       	ldi	r20, 0x05	; 5
     6aa:	50 e0       	ldi	r21, 0x00	; 0
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6b4:	d0 c0       	rjmp	.+416    	; 0x856 <__stack+0x357>
     6b6:	02 e0       	ldi	r16, 0x02	; 2
     6b8:	10 e0       	ldi	r17, 0x00	; 0
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	48 e0       	ldi	r20, 0x08	; 8
     6c0:	50 e0       	ldi	r21, 0x00	; 0
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6ca:	c5 c0       	rjmp	.+394    	; 0x856 <__stack+0x357>
     6cc:	01 e0       	ldi	r16, 0x01	; 1
     6ce:	10 e0       	ldi	r17, 0x00	; 0
     6d0:	21 e0       	ldi	r18, 0x01	; 1
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	41 e0       	ldi	r20, 0x01	; 1
     6d6:	50 e0       	ldi	r21, 0x00	; 0
     6d8:	60 e0       	ldi	r22, 0x00	; 0
     6da:	70 e0       	ldi	r23, 0x00	; 0
     6dc:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6e0:	ba c0       	rjmp	.+372    	; 0x856 <__stack+0x357>
     6e2:	08 e0       	ldi	r16, 0x08	; 8
     6e4:	10 e0       	ldi	r17, 0x00	; 0
     6e6:	26 e0       	ldi	r18, 0x06	; 6
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	44 e0       	ldi	r20, 0x04	; 4
     6ec:	50 e0       	ldi	r21, 0x00	; 0
     6ee:	68 e0       	ldi	r22, 0x08	; 8
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6f6:	af c0       	rjmp	.+350    	; 0x856 <__stack+0x357>
     6f8:	01 e0       	ldi	r16, 0x01	; 1
     6fa:	10 e0       	ldi	r17, 0x00	; 0
     6fc:	24 e0       	ldi	r18, 0x04	; 4
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	44 e0       	ldi	r20, 0x04	; 4
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     70c:	a4 c0       	rjmp	.+328    	; 0x856 <__stack+0x357>
     70e:	00 e0       	ldi	r16, 0x00	; 0
     710:	10 e0       	ldi	r17, 0x00	; 0
     712:	25 e0       	ldi	r18, 0x05	; 5
     714:	30 e0       	ldi	r19, 0x00	; 0
     716:	47 e0       	ldi	r20, 0x07	; 7
     718:	50 e0       	ldi	r21, 0x00	; 0
     71a:	68 e0       	ldi	r22, 0x08	; 8
     71c:	70 e0       	ldi	r23, 0x00	; 0
     71e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     722:	99 c0       	rjmp	.+306    	; 0x856 <__stack+0x357>
     724:	08 e0       	ldi	r16, 0x08	; 8
     726:	10 e0       	ldi	r17, 0x00	; 0
     728:	25 e0       	ldi	r18, 0x05	; 5
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	47 e0       	ldi	r20, 0x07	; 7
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     738:	8e c0       	rjmp	.+284    	; 0x856 <__stack+0x357>
     73a:	01 e0       	ldi	r16, 0x01	; 1
     73c:	10 e0       	ldi	r17, 0x00	; 0
     73e:	25 e0       	ldi	r18, 0x05	; 5
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	45 e0       	ldi	r20, 0x05	; 5
     744:	50 e0       	ldi	r21, 0x00	; 0
     746:	61 e0       	ldi	r22, 0x01	; 1
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     74e:	83 c0       	rjmp	.+262    	; 0x856 <__stack+0x357>
     750:	00 e0       	ldi	r16, 0x00	; 0
     752:	10 e0       	ldi	r17, 0x00	; 0
     754:	2e e0       	ldi	r18, 0x0E	; 14
     756:	30 e0       	ldi	r19, 0x00	; 0
     758:	45 e0       	ldi	r20, 0x05	; 5
     75a:	50 e0       	ldi	r21, 0x00	; 0
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	70 e0       	ldi	r23, 0x00	; 0
     760:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     764:	78 c0       	rjmp	.+240    	; 0x856 <__stack+0x357>
     766:	09 e0       	ldi	r16, 0x09	; 9
     768:	10 e0       	ldi	r17, 0x00	; 0
     76a:	25 e0       	ldi	r18, 0x05	; 5
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	45 e0       	ldi	r20, 0x05	; 5
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	61 e0       	ldi	r22, 0x01	; 1
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     77a:	6d c0       	rjmp	.+218    	; 0x856 <__stack+0x357>
     77c:	08 e0       	ldi	r16, 0x08	; 8
     77e:	10 e0       	ldi	r17, 0x00	; 0
     780:	2e e0       	ldi	r18, 0x0E	; 14
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	45 e0       	ldi	r20, 0x05	; 5
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	61 e0       	ldi	r22, 0x01	; 1
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     790:	62 c0       	rjmp	.+196    	; 0x856 <__stack+0x357>
     792:	01 e0       	ldi	r16, 0x01	; 1
     794:	10 e0       	ldi	r17, 0x00	; 0
     796:	2b e0       	ldi	r18, 0x0B	; 11
     798:	30 e0       	ldi	r19, 0x00	; 0
     79a:	44 e0       	ldi	r20, 0x04	; 4
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	61 e0       	ldi	r22, 0x01	; 1
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7a6:	57 c0       	rjmp	.+174    	; 0x856 <__stack+0x357>
     7a8:	02 e0       	ldi	r16, 0x02	; 2
     7aa:	10 e0       	ldi	r17, 0x00	; 0
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	48 e0       	ldi	r20, 0x08	; 8
     7b2:	50 e0       	ldi	r21, 0x00	; 0
     7b4:	61 e0       	ldi	r22, 0x01	; 1
     7b6:	70 e0       	ldi	r23, 0x00	; 0
     7b8:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7bc:	4c c0       	rjmp	.+152    	; 0x856 <__stack+0x357>
     7be:	01 e0       	ldi	r16, 0x01	; 1
     7c0:	10 e0       	ldi	r17, 0x00	; 0
     7c2:	25 e0       	ldi	r18, 0x05	; 5
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	45 e0       	ldi	r20, 0x05	; 5
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	60 e0       	ldi	r22, 0x00	; 0
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7d2:	41 c0       	rjmp	.+130    	; 0x856 <__stack+0x357>
     7d4:	04 e0       	ldi	r16, 0x04	; 4
     7d6:	10 e0       	ldi	r17, 0x00	; 0
     7d8:	24 e0       	ldi	r18, 0x04	; 4
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	44 e0       	ldi	r20, 0x04	; 4
     7de:	50 e0       	ldi	r21, 0x00	; 0
     7e0:	68 e0       	ldi	r22, 0x08	; 8
     7e2:	70 e0       	ldi	r23, 0x00	; 0
     7e4:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7e8:	36 c0       	rjmp	.+108    	; 0x856 <__stack+0x357>
     7ea:	03 e0       	ldi	r16, 0x03	; 3
     7ec:	10 e0       	ldi	r17, 0x00	; 0
     7ee:	25 e0       	ldi	r18, 0x05	; 5
     7f0:	30 e0       	ldi	r19, 0x00	; 0
     7f2:	45 e0       	ldi	r20, 0x05	; 5
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	70 e0       	ldi	r23, 0x00	; 0
     7fa:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7fe:	2b c0       	rjmp	.+86     	; 0x856 <__stack+0x357>
     800:	0c e0       	ldi	r16, 0x0C	; 12
     802:	10 e0       	ldi	r17, 0x00	; 0
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	42 e0       	ldi	r20, 0x02	; 2
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	68 e0       	ldi	r22, 0x08	; 8
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     814:	20 c0       	rjmp	.+64     	; 0x856 <__stack+0x357>
     816:	02 e0       	ldi	r16, 0x02	; 2
     818:	10 e0       	ldi	r17, 0x00	; 0
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	42 e0       	ldi	r20, 0x02	; 2
     820:	50 e0       	ldi	r21, 0x00	; 0
     822:	68 e0       	ldi	r22, 0x08	; 8
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     82a:	15 c0       	rjmp	.+42     	; 0x856 <__stack+0x357>
     82c:	05 e0       	ldi	r16, 0x05	; 5
     82e:	10 e0       	ldi	r17, 0x00	; 0
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	40 e0       	ldi	r20, 0x00	; 0
     836:	50 e0       	ldi	r21, 0x00	; 0
     838:	69 e0       	ldi	r22, 0x09	; 9
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     840:	0a c0       	rjmp	.+20     	; 0x856 <__stack+0x357>
     842:	02 e0       	ldi	r16, 0x02	; 2
     844:	10 e0       	ldi	r17, 0x00	; 0
     846:	28 e0       	ldi	r18, 0x08	; 8
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	41 e0       	ldi	r20, 0x01	; 1
     84c:	50 e0       	ldi	r21, 0x00	; 0
     84e:	61 e0       	ldi	r22, 0x01	; 1
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     856:	1f 91       	pop	r17
     858:	0f 91       	pop	r16
     85a:	08 95       	ret

0000085c <initLCD>:

// Inits the LCD by using some magic

void initLCD(Lcd* self){
		
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
     85c:	87 eb       	ldi	r24, 0xB7	; 183
     85e:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (0<<LCDPS2) | (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
     862:	87 e0       	ldi	r24, 0x07	; 7
     864:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
     868:	8f e0       	ldi	r24, 0x0F	; 15
     86a:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	LCDCRA = (1<<LCDEN);
     86e:	80 e8       	ldi	r24, 0x80	; 128
     870:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     874:	08 95       	ret

00000876 <initLight>:
#include "Light.h"


void initLight(Light* self, Object* onStateChangeObject, void (*onStateChangeFunction)(int)){
	self->onStateChangeObject = onStateChangeObject;
     876:	fc 01       	movw	r30, r24
     878:	77 83       	std	Z+7, r23	; 0x07
     87a:	66 83       	std	Z+6, r22	; 0x06
	self->onStateChangeFunction = onStateChangeFunction;
     87c:	51 87       	std	Z+9, r21	; 0x09
     87e:	40 87       	std	Z+8, r20	; 0x08
     880:	08 95       	ret

00000882 <getLightState>:
}

void getLightState(Light* self, int* state){
	*state = self->state;
     882:	fc 01       	movw	r30, r24
     884:	84 81       	ldd	r24, Z+4	; 0x04
     886:	95 81       	ldd	r25, Z+5	; 0x05
     888:	fb 01       	movw	r30, r22
     88a:	91 83       	std	Z+1, r25	; 0x01
     88c:	80 83       	st	Z, r24
     88e:	08 95       	ret

00000890 <setLight>:
}

void setLight(Light* self, int state){
	
	self->state = state;
     890:	fc 01       	movw	r30, r24
     892:	75 83       	std	Z+5, r23	; 0x05
     894:	64 83       	std	Z+4, r22	; 0x04
     896:	08 95       	ret

00000898 <setDelayedLight>:
	}

}


void setDelayedLight(LightHandler *self, int direction){
     898:	cf 92       	push	r12
     89a:	df 92       	push	r13
     89c:	ef 92       	push	r14
     89e:	ff 92       	push	r15
     8a0:	0f 93       	push	r16
     8a2:	1f 93       	push	r17
     8a4:	8c 01       	movw	r16, r24
	
	SYNC(&(self->light[direction]), &setLight, GREEN);
     8a6:	cb 01       	movw	r24, r22
     8a8:	88 0f       	add	r24, r24
     8aa:	99 1f       	adc	r25, r25
     8ac:	66 0f       	add	r22, r22
     8ae:	77 1f       	adc	r23, r23
     8b0:	66 0f       	add	r22, r22
     8b2:	77 1f       	adc	r23, r23
     8b4:	66 0f       	add	r22, r22
     8b6:	77 1f       	adc	r23, r23
     8b8:	86 0f       	add	r24, r22
     8ba:	97 1f       	adc	r25, r23
     8bc:	06 96       	adiw	r24, 0x06	; 6
     8be:	41 e0       	ldi	r20, 0x01	; 1
     8c0:	50 e0       	ldi	r21, 0x00	; 0
     8c2:	68 e4       	ldi	r22, 0x48	; 72
     8c4:	74 e0       	ldi	r23, 0x04	; 4
     8c6:	80 0f       	add	r24, r16
     8c8:	91 1f       	adc	r25, r17
     8ca:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	ASYNC(self, &onLightChange, NULL);
     8ce:	c1 2c       	mov	r12, r1
     8d0:	d1 2c       	mov	r13, r1
     8d2:	0f 2e       	mov	r0, r31
     8d4:	fe e7       	ldi	r31, 0x7E	; 126
     8d6:	ef 2e       	mov	r14, r31
     8d8:	f4 e0       	ldi	r31, 0x04	; 4
     8da:	ff 2e       	mov	r15, r31
     8dc:	f0 2d       	mov	r31, r0
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	a9 01       	movw	r20, r18
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	cb 01       	movw	r24, r22
     8ea:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
}
     8ee:	1f 91       	pop	r17
     8f0:	0f 91       	pop	r16
     8f2:	ff 90       	pop	r15
     8f4:	ef 90       	pop	r14
     8f6:	df 90       	pop	r13
     8f8:	cf 90       	pop	r12
     8fa:	08 95       	ret

000008fc <onLightChange>:
	
	SYNC(self, &onLightChange, NULL);

}

void onLightChange(LightHandler* self){
     8fc:	af 92       	push	r10
     8fe:	bf 92       	push	r11
     900:	cf 92       	push	r12
     902:	df 92       	push	r13
     904:	ef 92       	push	r14
     906:	ff 92       	push	r15
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	cd b7       	in	r28, 0x3d	; 61
     912:	de b7       	in	r29, 0x3e	; 62
     914:	2a 97       	sbiw	r28, 0x0a	; 10
     916:	0f b6       	in	r0, 0x3f	; 63
     918:	f8 94       	cli
     91a:	de bf       	out	0x3e, r29	; 62
     91c:	0f be       	out	0x3f, r0	; 63
     91e:	cd bf       	out	0x3d, r28	; 61
     920:	8c 01       	movw	r16, r24
	int parsedValue = 0;
	int temp;
	
	for(int i = 0; i < 2; i++){
		
		SYNC(&(self->light[i]), &getLightState, &temp);
     922:	5c 01       	movw	r10, r24
     924:	86 e0       	ldi	r24, 0x06	; 6
     926:	a8 0e       	add	r10, r24
     928:	b1 1c       	adc	r11, r1
     92a:	ae 01       	movw	r20, r28
     92c:	4f 5f       	subi	r20, 0xFF	; 255
     92e:	5f 4f       	sbci	r21, 0xFF	; 255
     930:	61 e4       	ldi	r22, 0x41	; 65
     932:	74 e0       	ldi	r23, 0x04	; 4
     934:	c5 01       	movw	r24, r10
     936:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
		
		if(temp == GREEN){
     93a:	89 81       	ldd	r24, Y+1	; 0x01
     93c:	9a 81       	ldd	r25, Y+2	; 0x02
     93e:	01 97       	sbiw	r24, 0x01	; 1
     940:	29 f0       	breq	.+10     	; 0x94c <onLightChange+0x50>
			parsedValue |= (1 << (i * 2));
		}
		else{
			parsedValue |= (1 << (1 + i * 2));
     942:	68 94       	set
     944:	cc 24       	eor	r12, r12
     946:	c1 f8       	bld	r12, 1
     948:	d1 2c       	mov	r13, r1
     94a:	03 c0       	rjmp	.+6      	; 0x952 <onLightChange+0x56>
	for(int i = 0; i < 2; i++){
		
		SYNC(&(self->light[i]), &getLightState, &temp);
		
		if(temp == GREEN){
			parsedValue |= (1 << (i * 2));
     94c:	cc 24       	eor	r12, r12
     94e:	c3 94       	inc	r12
     950:	d1 2c       	mov	r13, r1
	int parsedValue = 0;
	int temp;
	
	for(int i = 0; i < 2; i++){
		
		SYNC(&(self->light[i]), &getLightState, &temp);
     952:	78 01       	movw	r14, r16
     954:	a0 e1       	ldi	r26, 0x10	; 16
     956:	ea 0e       	add	r14, r26
     958:	f1 1c       	adc	r15, r1
     95a:	ae 01       	movw	r20, r28
     95c:	4f 5f       	subi	r20, 0xFF	; 255
     95e:	5f 4f       	sbci	r21, 0xFF	; 255
     960:	61 e4       	ldi	r22, 0x41	; 65
     962:	74 e0       	ldi	r23, 0x04	; 4
     964:	c7 01       	movw	r24, r14
     966:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
		
		if(temp == GREEN){
     96a:	89 81       	ldd	r24, Y+1	; 0x01
     96c:	9a 81       	ldd	r25, Y+2	; 0x02
     96e:	01 97       	sbiw	r24, 0x01	; 1
     970:	19 f4       	brne	.+6      	; 0x978 <onLightChange+0x7c>
			parsedValue |= (1 << (i * 2));
     972:	68 94       	set
     974:	c2 f8       	bld	r12, 2
     976:	02 c0       	rjmp	.+4      	; 0x97c <onLightChange+0x80>
		}
		else{
			parsedValue |= (1 << (1 + i * 2));
     978:	68 94       	set
     97a:	c3 f8       	bld	r12, 3
		}
		
	}
	
	
	SYNC(&(self->light[0]), &getLightState, &temp);
     97c:	ae 01       	movw	r20, r28
     97e:	4f 5f       	subi	r20, 0xFF	; 255
     980:	5f 4f       	sbci	r21, 0xFF	; 255
     982:	61 e4       	ldi	r22, 0x41	; 65
     984:	74 e0       	ldi	r23, 0x04	; 4
     986:	c5 01       	movw	r24, r10
     988:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	int temp2[2] = {(int)(temp == RED ? 'R' : 'G'), 2};
     98c:	89 81       	ldd	r24, Y+1	; 0x01
     98e:	9a 81       	ldd	r25, Y+2	; 0x02
     990:	89 2b       	or	r24, r25
     992:	19 f0       	breq	.+6      	; 0x99a <onLightChange+0x9e>
     994:	87 e4       	ldi	r24, 0x47	; 71
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	02 c0       	rjmp	.+4      	; 0x99e <onLightChange+0xa2>
     99a:	82 e5       	ldi	r24, 0x52	; 82
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	9c 83       	std	Y+4, r25	; 0x04
     9a0:	8b 83       	std	Y+3, r24	; 0x03
     9a2:	82 e0       	ldi	r24, 0x02	; 2
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	9e 83       	std	Y+6, r25	; 0x06
     9a8:	8d 83       	std	Y+5, r24	; 0x05
	SYNC(&(self->statePusher->serial->lcd), &writeChar, temp2);
     9aa:	d8 01       	movw	r26, r16
     9ac:	14 96       	adiw	r26, 0x04	; 4
     9ae:	ed 91       	ld	r30, X+
     9b0:	fc 91       	ld	r31, X
     9b2:	15 97       	sbiw	r26, 0x05	; 5
     9b4:	84 81       	ldd	r24, Z+4	; 0x04
     9b6:	95 81       	ldd	r25, Z+5	; 0x05
     9b8:	ae 01       	movw	r20, r28
     9ba:	4d 5f       	subi	r20, 0xFD	; 253
     9bc:	5f 4f       	sbci	r21, 0xFF	; 255
     9be:	6f e7       	ldi	r22, 0x7F	; 127
     9c0:	72 e0       	ldi	r23, 0x02	; 2
     9c2:	04 96       	adiw	r24, 0x04	; 4
     9c4:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
	SYNC(&(self->light[1]), &getLightState, &temp);
     9c8:	ae 01       	movw	r20, r28
     9ca:	4f 5f       	subi	r20, 0xFF	; 255
     9cc:	5f 4f       	sbci	r21, 0xFF	; 255
     9ce:	61 e4       	ldi	r22, 0x41	; 65
     9d0:	74 e0       	ldi	r23, 0x04	; 4
     9d2:	c7 01       	movw	r24, r14
     9d4:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	int temp3[2] = {(int)(temp == RED ? 'R' : 'G'), 3};
     9d8:	89 81       	ldd	r24, Y+1	; 0x01
     9da:	9a 81       	ldd	r25, Y+2	; 0x02
     9dc:	89 2b       	or	r24, r25
     9de:	19 f0       	breq	.+6      	; 0x9e6 <onLightChange+0xea>
     9e0:	87 e4       	ldi	r24, 0x47	; 71
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	02 c0       	rjmp	.+4      	; 0x9ea <onLightChange+0xee>
     9e6:	82 e5       	ldi	r24, 0x52	; 82
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	98 87       	std	Y+8, r25	; 0x08
     9ec:	8f 83       	std	Y+7, r24	; 0x07
     9ee:	83 e0       	ldi	r24, 0x03	; 3
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	9a 87       	std	Y+10, r25	; 0x0a
     9f4:	89 87       	std	Y+9, r24	; 0x09
	SYNC(&(self->statePusher->serial->lcd), &writeChar, temp3);
     9f6:	d8 01       	movw	r26, r16
     9f8:	14 96       	adiw	r26, 0x04	; 4
     9fa:	ed 91       	ld	r30, X+
     9fc:	fc 91       	ld	r31, X
     9fe:	15 97       	sbiw	r26, 0x05	; 5
     a00:	84 81       	ldd	r24, Z+4	; 0x04
     a02:	95 81       	ldd	r25, Z+5	; 0x05
     a04:	ae 01       	movw	r20, r28
     a06:	49 5f       	subi	r20, 0xF9	; 249
     a08:	5f 4f       	sbci	r21, 0xFF	; 255
     a0a:	6f e7       	ldi	r22, 0x7F	; 127
     a0c:	72 e0       	ldi	r23, 0x02	; 2
     a0e:	04 96       	adiw	r24, 0x04	; 4
     a10:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
	ASYNC(self->statePusher, &setState, (unsigned char)parsedValue);
     a14:	dd 24       	eor	r13, r13
     a16:	f8 01       	movw	r30, r16
     a18:	04 81       	ldd	r16, Z+4	; 0x04
     a1a:	15 81       	ldd	r17, Z+5	; 0x05
     a1c:	0f 2e       	mov	r0, r31
     a1e:	ff e7       	ldi	r31, 0x7F	; 127
     a20:	ef 2e       	mov	r14, r31
     a22:	f7 e0       	ldi	r31, 0x07	; 7
     a24:	ff 2e       	mov	r15, r31
     a26:	f0 2d       	mov	r31, r0
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	a9 01       	movw	r20, r18
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	cb 01       	movw	r24, r22
     a34:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
	
     a38:	2a 96       	adiw	r28, 0x0a	; 10
     a3a:	0f b6       	in	r0, 0x3f	; 63
     a3c:	f8 94       	cli
     a3e:	de bf       	out	0x3e, r29	; 62
     a40:	0f be       	out	0x3f, r0	; 63
     a42:	cd bf       	out	0x3d, r28	; 61
     a44:	df 91       	pop	r29
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	ff 90       	pop	r15
     a4e:	ef 90       	pop	r14
     a50:	df 90       	pop	r13
     a52:	cf 90       	pop	r12
     a54:	bf 90       	pop	r11
     a56:	af 90       	pop	r10
     a58:	08 95       	ret

00000a5a <initLightHandler>:
#define CROSSINGTIME 5000

#include "LightHandler.h"

void initLightHandler(LightHandler *self, StatePusher *statePusher){
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	ec 01       	movw	r28, r24

	self->statePusher = statePusher;
     a60:	7d 83       	std	Y+5, r23	; 0x05
     a62:	6c 83       	std	Y+4, r22	; 0x04
	int temp;
	
	for(int i = 0; i < 2; i++ ){
		initLight(&(self->light[i]), (Object*)self, (void*)&onLightChange);
     a64:	4e e7       	ldi	r20, 0x7E	; 126
     a66:	54 e0       	ldi	r21, 0x04	; 4
     a68:	bc 01       	movw	r22, r24
     a6a:	06 96       	adiw	r24, 0x06	; 6
     a6c:	0e 94 3b 04 	call	0x876	; 0x876 <initLight>
     a70:	4e e7       	ldi	r20, 0x7E	; 126
     a72:	54 e0       	ldi	r21, 0x04	; 4
     a74:	be 01       	movw	r22, r28
     a76:	ce 01       	movw	r24, r28
     a78:	40 96       	adiw	r24, 0x10	; 16
     a7a:	0e 94 3b 04 	call	0x876	; 0x876 <initLight>

	}

}
     a7e:	df 91       	pop	r29
     a80:	cf 91       	pop	r28
     a82:	08 95       	ret

00000a84 <setLightPassingDirection>:
	ASYNC(self, &onLightChange, NULL);
	
}


void setLightPassingDirection(LightHandler *self, int direction){
     a84:	cf 92       	push	r12
     a86:	df 92       	push	r13
     a88:	ef 92       	push	r14
     a8a:	ff 92       	push	r15
     a8c:	0f 93       	push	r16
     a8e:	1f 93       	push	r17
     a90:	cf 93       	push	r28
     a92:	df 93       	push	r29
     a94:	ec 01       	movw	r28, r24
     a96:	6b 01       	movw	r12, r22
	
	SYNC(&(self->light[direction]), &setLight, RED);
     a98:	9b 01       	movw	r18, r22
     a9a:	22 0f       	add	r18, r18
     a9c:	33 1f       	adc	r19, r19
     a9e:	cb 01       	movw	r24, r22
     aa0:	88 0f       	add	r24, r24
     aa2:	99 1f       	adc	r25, r25
     aa4:	88 0f       	add	r24, r24
     aa6:	99 1f       	adc	r25, r25
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	82 0f       	add	r24, r18
     aae:	93 1f       	adc	r25, r19
     ab0:	06 96       	adiw	r24, 0x06	; 6
     ab2:	40 e0       	ldi	r20, 0x00	; 0
     ab4:	50 e0       	ldi	r21, 0x00	; 0
     ab6:	68 e4       	ldi	r22, 0x48	; 72
     ab8:	74 e0       	ldi	r23, 0x04	; 4
     aba:	8c 0f       	add	r24, r28
     abc:	9d 1f       	adc	r25, r29
     abe:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	SYNC(&(self->light[direction == NORTH ? SOUTH : NORTH]), &setLight, RED);
     ac2:	21 e0       	ldi	r18, 0x01	; 1
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	c1 14       	cp	r12, r1
     ac8:	d1 04       	cpc	r13, r1
     aca:	11 f0       	breq	.+4      	; 0xad0 <setLightPassingDirection+0x4c>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	c9 01       	movw	r24, r18
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	22 0f       	add	r18, r18
     ad8:	33 1f       	adc	r19, r19
     ada:	22 0f       	add	r18, r18
     adc:	33 1f       	adc	r19, r19
     ade:	22 0f       	add	r18, r18
     ae0:	33 1f       	adc	r19, r19
     ae2:	82 0f       	add	r24, r18
     ae4:	93 1f       	adc	r25, r19
     ae6:	06 96       	adiw	r24, 0x06	; 6
     ae8:	40 e0       	ldi	r20, 0x00	; 0
     aea:	50 e0       	ldi	r21, 0x00	; 0
     aec:	68 e4       	ldi	r22, 0x48	; 72
     aee:	74 e0       	ldi	r23, 0x04	; 4
     af0:	8c 0f       	add	r24, r28
     af2:	9d 1f       	adc	r25, r29
     af4:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	SEND(MSEC(CROSSINGTIME), MSEC(CROSSINGTIME + 10), self, &setDelayedLight, direction);
     af8:	0f 2e       	mov	r0, r31
     afa:	fc e4       	ldi	r31, 0x4C	; 76
     afc:	ef 2e       	mov	r14, r31
     afe:	f4 e0       	ldi	r31, 0x04	; 4
     b00:	ff 2e       	mov	r15, r31
     b02:	f0 2d       	mov	r31, r0
     b04:	8e 01       	movw	r16, r28
     b06:	22 e9       	ldi	r18, 0x92	; 146
     b08:	33 e6       	ldi	r19, 0x63	; 99
     b0a:	42 e0       	ldi	r20, 0x02	; 2
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	6a e5       	ldi	r22, 0x5A	; 90
     b10:	72 e6       	ldi	r23, 0x62	; 98
     b12:	82 e0       	ldi	r24, 0x02	; 2
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
	SYNC(self, &onLightChange, NULL);
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	6e e7       	ldi	r22, 0x7E	; 126
     b20:	74 e0       	ldi	r23, 0x04	; 4
     b22:	ce 01       	movw	r24, r28
     b24:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>

}
     b28:	df 91       	pop	r29
     b2a:	cf 91       	pop	r28
     b2c:	1f 91       	pop	r17
     b2e:	0f 91       	pop	r16
     b30:	ff 90       	pop	r15
     b32:	ef 90       	pop	r14
     b34:	df 90       	pop	r13
     b36:	cf 90       	pop	r12
     b38:	08 95       	ret

00000b3a <main>:
#include "LCD.h"

#define F_CPU 8000000
#include <util/delay.h>

int main(void){
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	e5 97       	sbiw	r28, 0x35	; 53
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	cd bf       	out	0x3d, r28	; 61
	
	CLKPR = 0x80;
     b4e:	e1 e6       	ldi	r30, 0x61	; 97
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	80 e8       	ldi	r24, 0x80	; 128
     b54:	80 83       	st	Z, r24
	CLKPR = 0x00;
     b56:	10 82       	st	Z, r1
	
	MainClass mainClass = INIT_MAIN_CLASS;
     b58:	ce 01       	movw	r24, r28
     b5a:	01 96       	adiw	r24, 0x01	; 1
     b5c:	25 e3       	ldi	r18, 0x35	; 53
     b5e:	fc 01       	movw	r30, r24
     b60:	11 92       	st	Z+, r1
     b62:	2a 95       	dec	r18
     b64:	e9 f7       	brne	.-6      	; 0xb60 <main+0x26>
     b66:	21 e0       	ldi	r18, 0x01	; 1
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	3b a3       	std	Y+35, r19	; 0x23
     b6c:	2a a3       	std	Y+34, r18	; 0x22
     b6e:	3d a7       	std	Y+45, r19	; 0x2d
     b70:	2c a7       	std	Y+44, r18	; 0x2c
	TINYTIMBER(&mainClass, &runMain, NULL);
     b72:	40 e0       	ldi	r20, 0x00	; 0
     b74:	50 e0       	ldi	r21, 0x00	; 0
     b76:	6a ec       	ldi	r22, 0xCA	; 202
     b78:	75 e0       	ldi	r23, 0x05	; 5
     b7a:	0e 94 b0 13 	call	0x2760	; 0x2760 <tinytimber>
}
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	e5 96       	adiw	r28, 0x35	; 53
     b84:	0f b6       	in	r0, 0x3f	; 63
     b86:	f8 94       	cli
     b88:	de bf       	out	0x3e, r29	; 62
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	cd bf       	out	0x3d, r28	; 61
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <runMain>:
	
}

int checkCarArrival(char input, int instance){
	return (input & (1 << (instance == NORTH ? 0 : 2)));
}
     b94:	ef 92       	push	r14
     b96:	ff 92       	push	r15
     b98:	0f 93       	push	r16
     b9a:	1f 93       	push	r17
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	ec 01       	movw	r28, r24
     ba2:	7c 01       	movw	r14, r24
     ba4:	84 e0       	ldi	r24, 0x04	; 4
     ba6:	e8 0e       	add	r14, r24
     ba8:	f1 1c       	adc	r15, r1
     baa:	43 e5       	ldi	r20, 0x53	; 83
     bac:	56 e0       	ldi	r21, 0x06	; 6
     bae:	be 01       	movw	r22, r28
     bb0:	c7 01       	movw	r24, r14
     bb2:	0e 94 ce 06 	call	0xd9c	; 0xd9c <initSerial>
     bb6:	8e 01       	movw	r16, r28
     bb8:	00 5f       	subi	r16, 0xF0	; 240
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	b7 01       	movw	r22, r14
     bbe:	c8 01       	movw	r24, r16
     bc0:	0e 94 75 07 	call	0xeea	; 0xeea <initStatePusher>
     bc4:	67 96       	adiw	r28, 0x17	; 23
     bc6:	b8 01       	movw	r22, r16
     bc8:	ce 01       	movw	r24, r28
     bca:	0e 94 2d 05 	call	0xa5a	; 0xa5a <initLightHandler>
     bce:	40 e0       	ldi	r20, 0x00	; 0
     bd0:	50 e0       	ldi	r21, 0x00	; 0
     bd2:	6e e7       	ldi	r22, 0x7E	; 126
     bd4:	74 e0       	ldi	r23, 0x04	; 4
     bd6:	ce 01       	movw	r24, r28
     bd8:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
     bdc:	df 91       	pop	r29
     bde:	cf 91       	pop	r28
     be0:	1f 91       	pop	r17
     be2:	0f 91       	pop	r16
     be4:	ff 90       	pop	r15
     be6:	ef 90       	pop	r14
     be8:	08 95       	ret

00000bea <checkCarCrossing>:

int checkCarCrossing(MainClass* self, char input, int instance){
     bea:	ff 92       	push	r15
     bec:	0f 93       	push	r16
     bee:	1f 93       	push	r17
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	00 d0       	rcall	.+0      	; 0xbf6 <checkCarCrossing+0xc>
     bf6:	cd b7       	in	r28, 0x3d	; 61
     bf8:	de b7       	in	r29, 0x3e	; 62
     bfa:	f6 2e       	mov	r15, r22
     bfc:	8a 01       	movw	r16, r20
	
	int state;
	SYNC(&(self->lightHandler.light[instance == NORTH ? SOUTH : NORTH]), &getLightState, &state);
     bfe:	21 e0       	ldi	r18, 0x01	; 1
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	45 2b       	or	r20, r21
     c04:	11 f0       	breq	.+4      	; 0xc0a <checkCarCrossing+0x20>
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	a9 01       	movw	r20, r18
     c0c:	44 0f       	add	r20, r20
     c0e:	55 1f       	adc	r21, r21
     c10:	22 0f       	add	r18, r18
     c12:	33 1f       	adc	r19, r19
     c14:	22 0f       	add	r18, r18
     c16:	33 1f       	adc	r19, r19
     c18:	22 0f       	add	r18, r18
     c1a:	33 1f       	adc	r19, r19
     c1c:	24 0f       	add	r18, r20
     c1e:	35 1f       	adc	r19, r21
     c20:	23 5e       	subi	r18, 0xE3	; 227
     c22:	3f 4f       	sbci	r19, 0xFF	; 255
     c24:	ae 01       	movw	r20, r28
     c26:	4f 5f       	subi	r20, 0xFF	; 255
     c28:	5f 4f       	sbci	r21, 0xFF	; 255
     c2a:	61 e4       	ldi	r22, 0x41	; 65
     c2c:	74 e0       	ldi	r23, 0x04	; 4
     c2e:	82 0f       	add	r24, r18
     c30:	93 1f       	adc	r25, r19
     c32:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
	return (input & (1 << (instance == NORTH ? 1 : 3))) && state == RED;
     c36:	6f 2d       	mov	r22, r15
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	01 2b       	or	r16, r17
     c3c:	19 f0       	breq	.+6      	; 0xc44 <checkCarCrossing+0x5a>
     c3e:	88 e0       	ldi	r24, 0x08	; 8
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <checkCarCrossing+0x5e>
     c44:	82 e0       	ldi	r24, 0x02	; 2
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	86 23       	and	r24, r22
     c4a:	97 23       	and	r25, r23
     c4c:	00 97       	sbiw	r24, 0x00	; 0
     c4e:	49 f0       	breq	.+18     	; 0xc62 <checkCarCrossing+0x78>
     c50:	31 e0       	ldi	r19, 0x01	; 1
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	89 81       	ldd	r24, Y+1	; 0x01
     c56:	9a 81       	ldd	r25, Y+2	; 0x02
     c58:	89 2b       	or	r24, r25
     c5a:	09 f0       	breq	.+2      	; 0xc5e <checkCarCrossing+0x74>
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	83 2f       	mov	r24, r19
     c60:	92 2f       	mov	r25, r18
}
     c62:	0f 90       	pop	r0
     c64:	0f 90       	pop	r0
     c66:	df 91       	pop	r29
     c68:	cf 91       	pop	r28
     c6a:	1f 91       	pop	r17
     c6c:	0f 91       	pop	r16
     c6e:	ff 90       	pop	r15
     c70:	08 95       	ret

00000c72 <letCarCross>:

void letCarCross(MainClass* self, int instance){
     c72:	0f 93       	push	r16
     c74:	1f 93       	push	r17
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	8c 01       	movw	r16, r24
     c7c:	eb 01       	movw	r28, r22
	
	SYNC(&(self->lightHandler), &setLightPassingDirection, instance);
     c7e:	ab 01       	movw	r20, r22
     c80:	62 e4       	ldi	r22, 0x42	; 66
     c82:	75 e0       	ldi	r23, 0x05	; 5
     c84:	47 96       	adiw	r24, 0x17	; 23
     c86:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
void addCar(MainClass* self, int direction){
	self->queue[direction]++;
}

void removeCar(MainClass* self, int direction){
	self->queue[direction]--;
     c8a:	cc 0f       	add	r28, r28
     c8c:	dd 1f       	adc	r29, r29
     c8e:	c0 0f       	add	r28, r16
     c90:	d1 1f       	adc	r29, r17
     c92:	89 a9       	ldd	r24, Y+49	; 0x31
     c94:	9a a9       	ldd	r25, Y+50	; 0x32
     c96:	01 97       	sbiw	r24, 0x01	; 1
     c98:	9a ab       	std	Y+50, r25	; 0x32
     c9a:	89 ab       	std	Y+49, r24	; 0x31
void letCarCross(MainClass* self, int instance){
	
	SYNC(&(self->lightHandler), &setLightPassingDirection, instance);
	
	removeCar(self, instance);
}
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	08 95       	ret

00000ca6 <onSensorRead>:
	//self->lightHandler.light[NORTH].state = RED;
	
	SYNC(&(self->lightHandler), &onLightChange, NULL);
}

void onSensorRead(MainClass* self, unsigned char input){
     ca6:	1f 93       	push	r17
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	ec 01       	movw	r28, r24
     cae:	16 2f       	mov	r17, r22
	
	//Northbound car arrival sensor activated
	if(checkCarArrival(input, NORTH)){
     cb0:	60 ff       	sbrs	r22, 0
     cb2:	05 c0       	rjmp	.+10     	; 0xcbe <onSensorRead+0x18>
	
	return input == 0b1010;
}

void addCar(MainClass* self, int direction){
	self->queue[direction]++;
     cb4:	89 a9       	ldd	r24, Y+49	; 0x31
     cb6:	9a a9       	ldd	r25, Y+50	; 0x32
     cb8:	01 96       	adiw	r24, 0x01	; 1
     cba:	9a ab       	std	Y+50, r25	; 0x32
     cbc:	89 ab       	std	Y+49, r24	; 0x31
	
	//Northbound car arrival sensor activated
	if(checkCarArrival(input, NORTH)){
		addCar(self, NORTH);
	}
	if(checkCarArrival(input, SOUTH)){
     cbe:	12 ff       	sbrs	r17, 2
     cc0:	05 c0       	rjmp	.+10     	; 0xccc <onSensorRead+0x26>
	
	return input == 0b1010;
}

void addCar(MainClass* self, int direction){
	self->queue[direction]++;
     cc2:	8b a9       	ldd	r24, Y+51	; 0x33
     cc4:	9c a9       	ldd	r25, Y+52	; 0x34
     cc6:	01 96       	adiw	r24, 0x01	; 1
     cc8:	9c ab       	std	Y+52, r25	; 0x34
     cca:	8b ab       	std	Y+51, r24	; 0x33
	}
	if(checkCarArrival(input, SOUTH)){
		addCar(self, SOUTH);
	}
	
	if(checkCarCrossing(self, input, NORTH)){
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	50 e0       	ldi	r21, 0x00	; 0
     cd0:	61 2f       	mov	r22, r17
     cd2:	ce 01       	movw	r24, r28
     cd4:	0e 94 f5 05 	call	0xbea	; 0xbea <checkCarCrossing>
     cd8:	89 2b       	or	r24, r25
     cda:	29 f0       	breq	.+10     	; 0xce6 <onSensorRead+0x40>
		letCarCross(self, NORTH);
     cdc:	60 e0       	ldi	r22, 0x00	; 0
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	ce 01       	movw	r24, r28
     ce2:	0e 94 39 06 	call	0xc72	; 0xc72 <letCarCross>
	}
	if(checkCarCrossing(self, input, SOUTH)){
     ce6:	41 e0       	ldi	r20, 0x01	; 1
     ce8:	50 e0       	ldi	r21, 0x00	; 0
     cea:	61 2f       	mov	r22, r17
     cec:	ce 01       	movw	r24, r28
     cee:	0e 94 f5 05 	call	0xbea	; 0xbea <checkCarCrossing>
     cf2:	89 2b       	or	r24, r25
     cf4:	29 f0       	breq	.+10     	; 0xd00 <onSensorRead+0x5a>
		letCarCross(self, SOUTH);
     cf6:	61 e0       	ldi	r22, 0x01	; 1
     cf8:	70 e0       	ldi	r23, 0x00	; 0
     cfa:	ce 01       	movw	r24, r28
     cfc:	0e 94 39 06 	call	0xc72	; 0xc72 <letCarCross>
	}
	
	SYNC(&(self->lightHandler), &onLightChange, NULL);
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	50 e0       	ldi	r21, 0x00	; 0
     d04:	6e e7       	ldi	r22, 0x7E	; 126
     d06:	74 e0       	ldi	r23, 0x04	; 4
     d08:	ce 01       	movw	r24, r28
     d0a:	47 96       	adiw	r24, 0x17	; 23
     d0c:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
}
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	1f 91       	pop	r17
     d16:	08 95       	ret

00000d18 <read>:
	int args[2] = {(int)('0' + (input % 10)), 5};
	ASYNC(&(self->lcd), &writeChar, args);
	
}

void read(Serial* self){
     d18:	cf 92       	push	r12
     d1a:	df 92       	push	r13
     d1c:	ef 92       	push	r14
     d1e:	ff 92       	push	r15
     d20:	0f 93       	push	r16
     d22:	1f 93       	push	r17
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
     d28:	00 d0       	rcall	.+0      	; 0xd2a <read+0x12>
     d2a:	00 d0       	rcall	.+0      	; 0xd2c <read+0x14>
     d2c:	cd b7       	in	r28, 0x3d	; 61
     d2e:	de b7       	in	r29, 0x3e	; 62
     d30:	8c 01       	movw	r16, r24
	
	while(!(UCSR0A & (1<<RXC0)));
     d32:	e0 ec       	ldi	r30, 0xC0	; 192
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	80 81       	ld	r24, Z
     d38:	88 23       	and	r24, r24
     d3a:	ec f7       	brge	.-6      	; 0xd36 <read+0x1e>
	
	int temp = UDR0;
     d3c:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     d40:	d1 2c       	mov	r13, r1
	
	//if(temp == 10) return;
	
	int args[2] = {(int)'0' + (temp % 10), 0};
     d42:	c6 01       	movw	r24, r12
     d44:	6a e0       	ldi	r22, 0x0A	; 10
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	0e 94 cc 13 	call	0x2798	; 0x2798 <__divmodhi4>
     d4c:	c0 96       	adiw	r24, 0x30	; 48
     d4e:	9a 83       	std	Y+2, r25	; 0x02
     d50:	89 83       	std	Y+1, r24	; 0x01
     d52:	1c 82       	std	Y+4, r1	; 0x04
     d54:	1b 82       	std	Y+3, r1	; 0x03
	SYNC(&(self->lcd), &writeChar, args);
     d56:	ae 01       	movw	r20, r28
     d58:	4f 5f       	subi	r20, 0xFF	; 255
     d5a:	5f 4f       	sbci	r21, 0xFF	; 255
     d5c:	6f e7       	ldi	r22, 0x7F	; 127
     d5e:	72 e0       	ldi	r23, 0x02	; 2
     d60:	c8 01       	movw	r24, r16
     d62:	04 96       	adiw	r24, 0x04	; 4
     d64:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
	ASYNC(self->onReadObject, self->onReadFunction, (unsigned char)temp);
     d68:	f8 01       	movw	r30, r16
     d6a:	e2 84       	ldd	r14, Z+10	; 0x0a
     d6c:	f3 84       	ldd	r15, Z+11	; 0x0b
     d6e:	00 85       	ldd	r16, Z+8	; 0x08
     d70:	11 85       	ldd	r17, Z+9	; 0x09
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	a9 01       	movw	r20, r18
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	cb 01       	movw	r24, r22
     d7e:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
}
     d82:	0f 90       	pop	r0
     d84:	0f 90       	pop	r0
     d86:	0f 90       	pop	r0
     d88:	0f 90       	pop	r0
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	1f 91       	pop	r17
     d90:	0f 91       	pop	r16
     d92:	ff 90       	pop	r15
     d94:	ef 90       	pop	r14
     d96:	df 90       	pop	r13
     d98:	cf 90       	pop	r12
     d9a:	08 95       	ret

00000d9c <initSerial>:

unsigned int uber = MYUBER;

void read(Serial* self);

void initSerial(Serial* self, Object* onReadObject, void (*onReadFunction)(unsigned char)){
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
     da0:	ec 01       	movw	r28, r24
	
	self->onReadObject = onReadObject;
     da2:	79 87       	std	Y+9, r23	; 0x09
     da4:	68 87       	std	Y+8, r22	; 0x08
	self->onReadFunction = onReadFunction;
     da6:	5b 87       	std	Y+11, r21	; 0x0b
     da8:	4a 87       	std	Y+10, r20	; 0x0a
	
	// Sets baud rate
	UBRR0H = (unsigned char)(uber >> 8);
     daa:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
     dae:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)(uber);
     db2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     db6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	
	
	// Enable receive and transmit, and enable and transmit interrupts
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0) | (1 << TXCIE0);
     dba:	88 ed       	ldi	r24, 0xD8	; 216
     dbc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	// Set frame format: 8data, 1stop bit
	UCSR0C = (3 << UCSZ00) & ~(1 << USBS0);
     dc0:	86 e0       	ldi	r24, 0x06	; 6
     dc2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	
	INSTALL(self, &read, IRQ_USART0_RX);
     dc6:	48 e0       	ldi	r20, 0x08	; 8
     dc8:	6c e8       	ldi	r22, 0x8C	; 140
     dca:	76 e0       	ldi	r23, 0x06	; 6
     dcc:	ce 01       	movw	r24, r28
     dce:	0e 94 96 13 	call	0x272c	; 0x272c <install>
	
	SYNC(&(self->lcd), &initLCD, NULL);
     dd2:	40 e0       	ldi	r20, 0x00	; 0
     dd4:	50 e0       	ldi	r21, 0x00	; 0
     dd6:	6e e2       	ldi	r22, 0x2E	; 46
     dd8:	74 e0       	ldi	r23, 0x04	; 4
     dda:	ce 01       	movw	r24, r28
     ddc:	04 96       	adiw	r24, 0x04	; 4
     dde:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
	
}
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <send>:

void send(Serial* self, unsigned char input){
     de8:	cf 92       	push	r12
     dea:	df 92       	push	r13
     dec:	ef 92       	push	r14
     dee:	ff 92       	push	r15
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	00 d0       	rcall	.+0      	; 0xdfa <send+0x12>
     dfa:	00 d0       	rcall	.+0      	; 0xdfc <send+0x14>
     dfc:	cd b7       	in	r28, 0x3d	; 61
     dfe:	de b7       	in	r29, 0x3e	; 62
     e00:	8c 01       	movw	r16, r24
	while(!(UCSR0A & (1 << UDRE0)));
     e02:	e0 ec       	ldi	r30, 0xC0	; 192
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	90 81       	ld	r25, Z
     e08:	95 ff       	sbrs	r25, 5
     e0a:	fd cf       	rjmp	.-6      	; 0xe06 <send+0x1e>
	UDR0 = input;
     e0c:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	int args[2] = {(int)('0' + (input % 10)), 5};
     e10:	9d ec       	ldi	r25, 0xCD	; 205
     e12:	69 9f       	mul	r22, r25
     e14:	91 2d       	mov	r25, r1
     e16:	11 24       	eor	r1, r1
     e18:	96 95       	lsr	r25
     e1a:	96 95       	lsr	r25
     e1c:	96 95       	lsr	r25
     e1e:	99 0f       	add	r25, r25
     e20:	89 2f       	mov	r24, r25
     e22:	88 0f       	add	r24, r24
     e24:	88 0f       	add	r24, r24
     e26:	98 0f       	add	r25, r24
     e28:	69 1b       	sub	r22, r25
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	60 5d       	subi	r22, 0xD0	; 208
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	7a 83       	std	Y+2, r23	; 0x02
     e32:	69 83       	std	Y+1, r22	; 0x01
     e34:	85 e0       	ldi	r24, 0x05	; 5
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	9c 83       	std	Y+4, r25	; 0x04
     e3a:	8b 83       	std	Y+3, r24	; 0x03
	ASYNC(&(self->lcd), &writeChar, args);
     e3c:	0c 5f       	subi	r16, 0xFC	; 252
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
     e40:	ce 01       	movw	r24, r28
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	6c 01       	movw	r12, r24
     e46:	0f 2e       	mov	r0, r31
     e48:	ff e7       	ldi	r31, 0x7F	; 127
     e4a:	ef 2e       	mov	r14, r31
     e4c:	f2 e0       	ldi	r31, 0x02	; 2
     e4e:	ff 2e       	mov	r15, r31
     e50:	f0 2d       	mov	r31, r0
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	a9 01       	movw	r20, r18
     e58:	60 e0       	ldi	r22, 0x00	; 0
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	cb 01       	movw	r24, r22
     e5e:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
}
     e62:	0f 90       	pop	r0
     e64:	0f 90       	pop	r0
     e66:	0f 90       	pop	r0
     e68:	0f 90       	pop	r0
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	ff 90       	pop	r15
     e74:	ef 90       	pop	r14
     e76:	df 90       	pop	r13
     e78:	cf 90       	pop	r12
     e7a:	08 95       	ret

00000e7c <cycleStatePusher>:
	
	self->state = state;
	SYNC(self, &cycleStatePusher, NULL);
	
}
void cycleStatePusher(StatePusher* self){
     e7c:	cf 92       	push	r12
     e7e:	df 92       	push	r13
     e80:	ef 92       	push	r14
     e82:	ff 92       	push	r15
     e84:	0f 93       	push	r16
     e86:	1f 93       	push	r17
     e88:	cf 93       	push	r28
     e8a:	df 93       	push	r29
     e8c:	ec 01       	movw	r28, r24
	
	ASYNC(self->serial, &send, self->state);
     e8e:	ce 80       	ldd	r12, Y+6	; 0x06
     e90:	d1 2c       	mov	r13, r1
     e92:	0c 81       	ldd	r16, Y+4	; 0x04
     e94:	1d 81       	ldd	r17, Y+5	; 0x05
     e96:	0f 2e       	mov	r0, r31
     e98:	f4 ef       	ldi	r31, 0xF4	; 244
     e9a:	ef 2e       	mov	r14, r31
     e9c:	f6 e0       	ldi	r31, 0x06	; 6
     e9e:	ff 2e       	mov	r15, r31
     ea0:	f0 2d       	mov	r31, r0
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	a9 01       	movw	r20, r18
     ea8:	60 e0       	ldi	r22, 0x00	; 0
     eaa:	70 e0       	ldi	r23, 0x00	; 0
     eac:	cb 01       	movw	r24, r22
     eae:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	SEND(MSEC(100), MSEC(110), self, &cycleStatePusher, NULL);
     eb2:	c1 2c       	mov	r12, r1
     eb4:	d1 2c       	mov	r13, r1
     eb6:	0f 2e       	mov	r0, r31
     eb8:	fe e3       	ldi	r31, 0x3E	; 62
     eba:	ef 2e       	mov	r14, r31
     ebc:	f7 e0       	ldi	r31, 0x07	; 7
     ebe:	ff 2e       	mov	r15, r31
     ec0:	f0 2d       	mov	r31, r0
     ec2:	8e 01       	movw	r16, r28
     ec4:	2d e6       	ldi	r18, 0x6D	; 109
     ec6:	3d e0       	ldi	r19, 0x0D	; 13
     ec8:	40 e0       	ldi	r20, 0x00	; 0
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	65 e3       	ldi	r22, 0x35	; 53
     ece:	7c e0       	ldi	r23, 0x0C	; 12
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
	
     ed8:	df 91       	pop	r29
     eda:	cf 91       	pop	r28
     edc:	1f 91       	pop	r17
     ede:	0f 91       	pop	r16
     ee0:	ff 90       	pop	r15
     ee2:	ef 90       	pop	r14
     ee4:	df 90       	pop	r13
     ee6:	cf 90       	pop	r12
     ee8:	08 95       	ret

00000eea <initStatePusher>:
#include "StatePusher.h"

void cycleStatePusher(StatePusher* self);

void initStatePusher(StatePusher* self, Serial* serial){
	self->serial = serial;
     eea:	fc 01       	movw	r30, r24
     eec:	75 83       	std	Z+5, r23	; 0x05
     eee:	64 83       	std	Z+4, r22	; 0x04
	SYNC(self, &cycleStatePusher, NULL);
     ef0:	40 e0       	ldi	r20, 0x00	; 0
     ef2:	50 e0       	ldi	r21, 0x00	; 0
     ef4:	6e e3       	ldi	r22, 0x3E	; 62
     ef6:	77 e0       	ldi	r23, 0x07	; 7
     ef8:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
     efc:	08 95       	ret

00000efe <setState>:
	
}

void setState(StatePusher* self, int state){
	
	self->state = state;
     efe:	fc 01       	movw	r30, r24
     f00:	66 83       	std	Z+6, r22	; 0x06
	SYNC(self, &cycleStatePusher, NULL);
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	50 e0       	ldi	r21, 0x00	; 0
     f06:	6e e3       	ldi	r22, 0x3E	; 62
     f08:	77 e0       	ldi	r23, 0x07	; 7
     f0a:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
     f0e:	08 95       	ret

00000f10 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     f10:	cf 93       	push	r28
     f12:	df 93       	push	r29
     f14:	00 d0       	rcall	.+0      	; 0xf16 <initialize+0x6>
     f16:	00 d0       	rcall	.+0      	; 0xf18 <initialize+0x8>
     f18:	cd b7       	in	r28, 0x3d	; 61
     f1a:	de b7       	in	r29, 0x3e	; 62
     f1c:	8d ef       	ldi	r24, 0xFD	; 253
     f1e:	91 e0       	ldi	r25, 0x01	; 1
     f20:	2d ed       	ldi	r18, 0xDD	; 221
     f22:	32 e0       	ldi	r19, 0x02	; 2
     f24:	fc 01       	movw	r30, r24
     f26:	70 97       	sbiw	r30, 0x10	; 16
     f28:	91 83       	std	Z+1, r25	; 0x01
     f2a:	80 83       	st	Z, r24
     f2c:	40 96       	adiw	r24, 0x10	; 16
     f2e:	82 17       	cp	r24, r18
     f30:	93 07       	cpc	r25, r19
     f32:	c1 f7       	brne	.-16     	; 0xf24 <initialize+0x14>
     f34:	10 92 ce 02 	sts	0x02CE, r1	; 0x8002ce <messages+0xe1>
     f38:	10 92 cd 02 	sts	0x02CD, r1	; 0x8002cd <messages+0xe0>
     f3c:	e8 e3       	ldi	r30, 0x38	; 56
     f3e:	f1 e0       	ldi	r31, 0x01	; 1
     f40:	85 e5       	ldi	r24, 0x55	; 85
     f42:	91 e0       	ldi	r25, 0x01	; 1
     f44:	91 83       	std	Z+1, r25	; 0x01
     f46:	80 83       	st	Z, r24
     f48:	82 e7       	ldi	r24, 0x72	; 114
     f4a:	91 e0       	ldi	r25, 0x01	; 1
     f4c:	96 8f       	std	Z+30, r25	; 0x1e
     f4e:	85 8f       	std	Z+29, r24	; 0x1d
     f50:	af e8       	ldi	r26, 0x8F	; 143
     f52:	b1 e0       	ldi	r27, 0x01	; 1
     f54:	b3 af       	std	Z+59, r27	; 0x3b
     f56:	a2 af       	std	Z+58, r26	; 0x3a
     f58:	1d 92       	st	X+, r1
     f5a:	1c 92       	st	X, r1
     f5c:	fa 83       	std	Y+2, r31	; 0x02
     f5e:	e9 83       	std	Y+1, r30	; 0x01
     f60:	e9 e3       	ldi	r30, 0x39	; 57
     f62:	f3 e0       	ldi	r31, 0x03	; 3
     f64:	fc 83       	std	Y+4, r31	; 0x04
     f66:	eb 83       	std	Y+3, r30	; 0x03
     f68:	89 81       	ldd	r24, Y+1	; 0x01
     f6a:	9a 81       	ldd	r25, Y+2	; 0x02
     f6c:	06 96       	adiw	r24, 0x06	; 6
     f6e:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <setjmp>
     f72:	8b 81       	ldd	r24, Y+3	; 0x03
     f74:	9c 81       	ldd	r25, Y+4	; 0x04
     f76:	e9 81       	ldd	r30, Y+1	; 0x01
     f78:	fa 81       	ldd	r31, Y+2	; 0x02
     f7a:	97 8b       	std	Z+23, r25	; 0x17
     f7c:	86 8b       	std	Z+22, r24	; 0x16
     f7e:	91 8f       	std	Z+25, r25	; 0x19
     f80:	80 8f       	std	Z+24, r24	; 0x18
     f82:	88 e2       	ldi	r24, 0x28	; 40
     f84:	93 e1       	ldi	r25, 0x13	; 19
     f86:	94 8f       	std	Z+28, r25	; 0x1c
     f88:	83 8f       	std	Z+27, r24	; 0x1b
     f8a:	15 82       	std	Z+5, r1	; 0x05
     f8c:	14 82       	std	Z+4, r1	; 0x04
     f8e:	7d 96       	adiw	r30, 0x1d	; 29
     f90:	fa 83       	std	Y+2, r31	; 0x02
     f92:	e9 83       	std	Y+1, r30	; 0x01
     f94:	eb 81       	ldd	r30, Y+3	; 0x03
     f96:	fc 81       	ldd	r31, Y+4	; 0x04
     f98:	e0 5a       	subi	r30, 0xA0	; 160
     f9a:	ff 4f       	sbci	r31, 0xFF	; 255
     f9c:	fc 83       	std	Y+4, r31	; 0x04
     f9e:	eb 83       	std	Y+3, r30	; 0x03
     fa0:	89 81       	ldd	r24, Y+1	; 0x01
     fa2:	9a 81       	ldd	r25, Y+2	; 0x02
     fa4:	8c 5a       	subi	r24, 0xAC	; 172
     fa6:	91 40       	sbci	r25, 0x01	; 1
     fa8:	f9 f6       	brne	.-66     	; 0xf68 <initialize+0x58>
     faa:	e0 ed       	ldi	r30, 0xD0	; 208
     fac:	f1 e0       	ldi	r31, 0x01	; 1
     fae:	11 82       	std	Z+1, r1	; 0x01
     fb0:	10 82       	st	Z, r1
     fb2:	15 82       	std	Z+5, r1	; 0x05
     fb4:	14 82       	std	Z+4, r1	; 0x04
     fb6:	13 82       	std	Z+3, r1	; 0x03
     fb8:	12 82       	std	Z+2, r1	; 0x02
     fba:	e1 e6       	ldi	r30, 0x61	; 97
     fbc:	f0 e0       	ldi	r31, 0x00	; 0
     fbe:	80 e8       	ldi	r24, 0x80	; 128
     fc0:	80 83       	st	Z, r24
     fc2:	10 82       	st	Z, r1
     fc4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fc8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fcc:	84 e0       	ldi	r24, 0x04	; 4
     fce:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     fd8:	0f 90       	pop	r0
     fda:	0f 90       	pop	r0
     fdc:	0f 90       	pop	r0
     fde:	0f 90       	pop	r0
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	08 95       	ret

00000fe6 <dispatch>:
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	00 d0       	rcall	.+0      	; 0xfec <dispatch+0x6>
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
     ff0:	9a 83       	std	Y+2, r25	; 0x02
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     ff8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     ffc:	06 96       	adiw	r24, 0x06	; 6
     ffe:	0e 94 fa 13 	call	0x27f4	; 0x27f4 <setjmp>
    1002:	89 2b       	or	r24, r25
    1004:	59 f4       	brne	.+22     	; 0x101c <dispatch+0x36>
    1006:	89 81       	ldd	r24, Y+1	; 0x01
    1008:	9a 81       	ldd	r25, Y+2	; 0x02
    100a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
    100e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
    1012:	61 e0       	ldi	r22, 0x01	; 1
    1014:	70 e0       	ldi	r23, 0x00	; 0
    1016:	06 96       	adiw	r24, 0x06	; 6
    1018:	0e 94 1a 14 	call	0x2834	; 0x2834 <longjmp>
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	08 95       	ret

00001026 <schedule>:
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <msgQ>
    1032:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <msgQ+0x1>
    1036:	30 97       	sbiw	r30, 0x00	; 0
    1038:	61 f1       	breq	.+88     	; 0x1092 <schedule+0x6c>
    103a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    103e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    1042:	00 97       	sbiw	r24, 0x00	; 0
    1044:	31 f1       	breq	.+76     	; 0x1092 <schedule+0x6c>
    1046:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <activeStack>
    104a:	d0 91 05 01 	lds	r29, 0x0105	; 0x800105 <activeStack+0x1>
    104e:	aa 81       	ldd	r26, Y+2	; 0x02
    1050:	bb 81       	ldd	r27, Y+3	; 0x03
    1052:	10 97       	sbiw	r26, 0x00	; 0
    1054:	79 f0       	breq	.+30     	; 0x1074 <schedule+0x4e>
    1056:	46 81       	ldd	r20, Z+6	; 0x06
    1058:	57 81       	ldd	r21, Z+7	; 0x07
    105a:	60 85       	ldd	r22, Z+8	; 0x08
    105c:	71 85       	ldd	r23, Z+9	; 0x09
    105e:	16 96       	adiw	r26, 0x06	; 6
    1060:	0d 91       	ld	r16, X+
    1062:	1d 91       	ld	r17, X+
    1064:	2d 91       	ld	r18, X+
    1066:	3c 91       	ld	r19, X
    1068:	19 97       	sbiw	r26, 0x09	; 9
    106a:	40 1b       	sub	r20, r16
    106c:	51 0b       	sbc	r21, r17
    106e:	62 0b       	sbc	r22, r18
    1070:	73 0b       	sbc	r23, r19
    1072:	7a f4       	brpl	.+30     	; 0x1092 <schedule+0x6c>
    1074:	fc 01       	movw	r30, r24
    1076:	20 81       	ld	r18, Z
    1078:	31 81       	ldd	r19, Z+1	; 0x01
    107a:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
    107e:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
    1082:	d1 83       	std	Z+1, r29	; 0x01
    1084:	c0 83       	st	Z, r28
    1086:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
    108a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
    108e:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <dispatch>
    1092:	df 91       	pop	r29
    1094:	cf 91       	pop	r28
    1096:	1f 91       	pop	r17
    1098:	0f 91       	pop	r16
    109a:	08 95       	ret

0000109c <__vector_1>:
    109c:	1f 92       	push	r1
    109e:	0f 92       	push	r0
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	0f 92       	push	r0
    10a4:	11 24       	eor	r1, r1
    10a6:	2f 93       	push	r18
    10a8:	3f 93       	push	r19
    10aa:	4f 93       	push	r20
    10ac:	5f 93       	push	r21
    10ae:	6f 93       	push	r22
    10b0:	7f 93       	push	r23
    10b2:	8f 93       	push	r24
    10b4:	9f 93       	push	r25
    10b6:	af 93       	push	r26
    10b8:	bf 93       	push	r27
    10ba:	ef 93       	push	r30
    10bc:	ff 93       	push	r31
    10be:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    10c2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    10c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10ce:	c9 01       	movw	r24, r18
    10d0:	03 2e       	mov	r0, r19
    10d2:	00 0c       	add	r0, r0
    10d4:	aa 0b       	sbc	r26, r26
    10d6:	bb 0b       	sbc	r27, r27
    10d8:	dc 01       	movw	r26, r24
    10da:	99 27       	eor	r25, r25
    10dc:	88 27       	eor	r24, r24
    10de:	60 e0       	ldi	r22, 0x00	; 0
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	84 2b       	or	r24, r20
    10e4:	95 2b       	or	r25, r21
    10e6:	a6 2b       	or	r26, r22
    10e8:	b7 2b       	or	r27, r23
    10ea:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    10ee:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    10f2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    10f6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    10fa:	b0 9b       	sbis	0x16, 0	; 22
    10fc:	1b c0       	rjmp	.+54     	; 0x1134 <__vector_1+0x98>
    10fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1102:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1106:	c9 01       	movw	r24, r18
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	09 2e       	mov	r0, r25
    110c:	00 0c       	add	r0, r0
    110e:	aa 0b       	sbc	r26, r26
    1110:	bb 0b       	sbc	r27, r27
    1112:	dc 01       	movw	r26, r24
    1114:	99 27       	eor	r25, r25
    1116:	88 27       	eor	r24, r24
    1118:	60 e0       	ldi	r22, 0x00	; 0
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	84 2b       	or	r24, r20
    111e:	95 2b       	or	r25, r21
    1120:	a6 2b       	or	r26, r22
    1122:	b7 2b       	or	r27, r23
    1124:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1128:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    112c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1130:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1134:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <mtable>
    1138:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <mtable+0x1>
    113c:	30 97       	sbiw	r30, 0x00	; 0
    113e:	39 f0       	breq	.+14     	; 0x114e <__vector_1+0xb2>
    1140:	60 e0       	ldi	r22, 0x00	; 0
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <otable>
    1148:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <otable+0x1>
    114c:	09 95       	icall
    114e:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1152:	ff 91       	pop	r31
    1154:	ef 91       	pop	r30
    1156:	bf 91       	pop	r27
    1158:	af 91       	pop	r26
    115a:	9f 91       	pop	r25
    115c:	8f 91       	pop	r24
    115e:	7f 91       	pop	r23
    1160:	6f 91       	pop	r22
    1162:	5f 91       	pop	r21
    1164:	4f 91       	pop	r20
    1166:	3f 91       	pop	r19
    1168:	2f 91       	pop	r18
    116a:	0f 90       	pop	r0
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	0f 90       	pop	r0
    1170:	1f 90       	pop	r1
    1172:	18 95       	reti

00001174 <__vector_2>:
    1174:	1f 92       	push	r1
    1176:	0f 92       	push	r0
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	0f 92       	push	r0
    117c:	11 24       	eor	r1, r1
    117e:	2f 93       	push	r18
    1180:	3f 93       	push	r19
    1182:	4f 93       	push	r20
    1184:	5f 93       	push	r21
    1186:	6f 93       	push	r22
    1188:	7f 93       	push	r23
    118a:	8f 93       	push	r24
    118c:	9f 93       	push	r25
    118e:	af 93       	push	r26
    1190:	bf 93       	push	r27
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31
    1196:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    119a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    119e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11a6:	c9 01       	movw	r24, r18
    11a8:	03 2e       	mov	r0, r19
    11aa:	00 0c       	add	r0, r0
    11ac:	aa 0b       	sbc	r26, r26
    11ae:	bb 0b       	sbc	r27, r27
    11b0:	dc 01       	movw	r26, r24
    11b2:	99 27       	eor	r25, r25
    11b4:	88 27       	eor	r24, r24
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	84 2b       	or	r24, r20
    11bc:	95 2b       	or	r25, r21
    11be:	a6 2b       	or	r26, r22
    11c0:	b7 2b       	or	r27, r23
    11c2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    11c6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    11ca:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    11ce:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    11d2:	b0 9b       	sbis	0x16, 0	; 22
    11d4:	1b c0       	rjmp	.+54     	; 0x120c <__vector_2+0x98>
    11d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11de:	c9 01       	movw	r24, r18
    11e0:	01 96       	adiw	r24, 0x01	; 1
    11e2:	09 2e       	mov	r0, r25
    11e4:	00 0c       	add	r0, r0
    11e6:	aa 0b       	sbc	r26, r26
    11e8:	bb 0b       	sbc	r27, r27
    11ea:	dc 01       	movw	r26, r24
    11ec:	99 27       	eor	r25, r25
    11ee:	88 27       	eor	r24, r24
    11f0:	60 e0       	ldi	r22, 0x00	; 0
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	84 2b       	or	r24, r20
    11f6:	95 2b       	or	r25, r21
    11f8:	a6 2b       	or	r26, r22
    11fa:	b7 2b       	or	r27, r23
    11fc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1200:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1204:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1208:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    120c:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable+0x2>
    1210:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x3>
    1214:	30 97       	sbiw	r30, 0x00	; 0
    1216:	39 f0       	breq	.+14     	; 0x1226 <__vector_2+0xb2>
    1218:	61 e0       	ldi	r22, 0x01	; 1
    121a:	70 e0       	ldi	r23, 0x00	; 0
    121c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable+0x2>
    1220:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x3>
    1224:	09 95       	icall
    1226:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    122a:	ff 91       	pop	r31
    122c:	ef 91       	pop	r30
    122e:	bf 91       	pop	r27
    1230:	af 91       	pop	r26
    1232:	9f 91       	pop	r25
    1234:	8f 91       	pop	r24
    1236:	7f 91       	pop	r23
    1238:	6f 91       	pop	r22
    123a:	5f 91       	pop	r21
    123c:	4f 91       	pop	r20
    123e:	3f 91       	pop	r19
    1240:	2f 91       	pop	r18
    1242:	0f 90       	pop	r0
    1244:	0f be       	out	0x3f, r0	; 63
    1246:	0f 90       	pop	r0
    1248:	1f 90       	pop	r1
    124a:	18 95       	reti

0000124c <__vector_3>:
    124c:	1f 92       	push	r1
    124e:	0f 92       	push	r0
    1250:	0f b6       	in	r0, 0x3f	; 63
    1252:	0f 92       	push	r0
    1254:	11 24       	eor	r1, r1
    1256:	2f 93       	push	r18
    1258:	3f 93       	push	r19
    125a:	4f 93       	push	r20
    125c:	5f 93       	push	r21
    125e:	6f 93       	push	r22
    1260:	7f 93       	push	r23
    1262:	8f 93       	push	r24
    1264:	9f 93       	push	r25
    1266:	af 93       	push	r26
    1268:	bf 93       	push	r27
    126a:	ef 93       	push	r30
    126c:	ff 93       	push	r31
    126e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1272:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1276:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    127a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    127e:	c9 01       	movw	r24, r18
    1280:	03 2e       	mov	r0, r19
    1282:	00 0c       	add	r0, r0
    1284:	aa 0b       	sbc	r26, r26
    1286:	bb 0b       	sbc	r27, r27
    1288:	dc 01       	movw	r26, r24
    128a:	99 27       	eor	r25, r25
    128c:	88 27       	eor	r24, r24
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	84 2b       	or	r24, r20
    1294:	95 2b       	or	r25, r21
    1296:	a6 2b       	or	r26, r22
    1298:	b7 2b       	or	r27, r23
    129a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    129e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    12a2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    12a6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    12aa:	b0 9b       	sbis	0x16, 0	; 22
    12ac:	1b c0       	rjmp	.+54     	; 0x12e4 <__vector_3+0x98>
    12ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12b6:	c9 01       	movw	r24, r18
    12b8:	01 96       	adiw	r24, 0x01	; 1
    12ba:	09 2e       	mov	r0, r25
    12bc:	00 0c       	add	r0, r0
    12be:	aa 0b       	sbc	r26, r26
    12c0:	bb 0b       	sbc	r27, r27
    12c2:	dc 01       	movw	r26, r24
    12c4:	99 27       	eor	r25, r25
    12c6:	88 27       	eor	r24, r24
    12c8:	60 e0       	ldi	r22, 0x00	; 0
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	84 2b       	or	r24, r20
    12ce:	95 2b       	or	r25, r21
    12d0:	a6 2b       	or	r26, r22
    12d2:	b7 2b       	or	r27, r23
    12d4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    12d8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    12dc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    12e0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    12e4:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x4>
    12e8:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x5>
    12ec:	30 97       	sbiw	r30, 0x00	; 0
    12ee:	39 f0       	breq	.+14     	; 0x12fe <__vector_3+0xb2>
    12f0:	62 e0       	ldi	r22, 0x02	; 2
    12f2:	70 e0       	ldi	r23, 0x00	; 0
    12f4:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x4>
    12f8:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x5>
    12fc:	09 95       	icall
    12fe:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1302:	ff 91       	pop	r31
    1304:	ef 91       	pop	r30
    1306:	bf 91       	pop	r27
    1308:	af 91       	pop	r26
    130a:	9f 91       	pop	r25
    130c:	8f 91       	pop	r24
    130e:	7f 91       	pop	r23
    1310:	6f 91       	pop	r22
    1312:	5f 91       	pop	r21
    1314:	4f 91       	pop	r20
    1316:	3f 91       	pop	r19
    1318:	2f 91       	pop	r18
    131a:	0f 90       	pop	r0
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	0f 90       	pop	r0
    1320:	1f 90       	pop	r1
    1322:	18 95       	reti

00001324 <__vector_4>:
    1324:	1f 92       	push	r1
    1326:	0f 92       	push	r0
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	0f 92       	push	r0
    132c:	11 24       	eor	r1, r1
    132e:	2f 93       	push	r18
    1330:	3f 93       	push	r19
    1332:	4f 93       	push	r20
    1334:	5f 93       	push	r21
    1336:	6f 93       	push	r22
    1338:	7f 93       	push	r23
    133a:	8f 93       	push	r24
    133c:	9f 93       	push	r25
    133e:	af 93       	push	r26
    1340:	bf 93       	push	r27
    1342:	ef 93       	push	r30
    1344:	ff 93       	push	r31
    1346:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    134a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    134e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1352:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1356:	c9 01       	movw	r24, r18
    1358:	03 2e       	mov	r0, r19
    135a:	00 0c       	add	r0, r0
    135c:	aa 0b       	sbc	r26, r26
    135e:	bb 0b       	sbc	r27, r27
    1360:	dc 01       	movw	r26, r24
    1362:	99 27       	eor	r25, r25
    1364:	88 27       	eor	r24, r24
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	84 2b       	or	r24, r20
    136c:	95 2b       	or	r25, r21
    136e:	a6 2b       	or	r26, r22
    1370:	b7 2b       	or	r27, r23
    1372:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1376:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    137a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    137e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1382:	b0 9b       	sbis	0x16, 0	; 22
    1384:	1b c0       	rjmp	.+54     	; 0x13bc <__vector_4+0x98>
    1386:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    138a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    138e:	c9 01       	movw	r24, r18
    1390:	01 96       	adiw	r24, 0x01	; 1
    1392:	09 2e       	mov	r0, r25
    1394:	00 0c       	add	r0, r0
    1396:	aa 0b       	sbc	r26, r26
    1398:	bb 0b       	sbc	r27, r27
    139a:	dc 01       	movw	r26, r24
    139c:	99 27       	eor	r25, r25
    139e:	88 27       	eor	r24, r24
    13a0:	60 e0       	ldi	r22, 0x00	; 0
    13a2:	70 e0       	ldi	r23, 0x00	; 0
    13a4:	84 2b       	or	r24, r20
    13a6:	95 2b       	or	r25, r21
    13a8:	a6 2b       	or	r26, r22
    13aa:	b7 2b       	or	r27, r23
    13ac:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    13b0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    13b4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    13b8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    13bc:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x6>
    13c0:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x7>
    13c4:	30 97       	sbiw	r30, 0x00	; 0
    13c6:	39 f0       	breq	.+14     	; 0x13d6 <__vector_4+0xb2>
    13c8:	63 e0       	ldi	r22, 0x03	; 3
    13ca:	70 e0       	ldi	r23, 0x00	; 0
    13cc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x6>
    13d0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x7>
    13d4:	09 95       	icall
    13d6:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    13da:	ff 91       	pop	r31
    13dc:	ef 91       	pop	r30
    13de:	bf 91       	pop	r27
    13e0:	af 91       	pop	r26
    13e2:	9f 91       	pop	r25
    13e4:	8f 91       	pop	r24
    13e6:	7f 91       	pop	r23
    13e8:	6f 91       	pop	r22
    13ea:	5f 91       	pop	r21
    13ec:	4f 91       	pop	r20
    13ee:	3f 91       	pop	r19
    13f0:	2f 91       	pop	r18
    13f2:	0f 90       	pop	r0
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	0f 90       	pop	r0
    13f8:	1f 90       	pop	r1
    13fa:	18 95       	reti

000013fc <__vector_5>:
    13fc:	1f 92       	push	r1
    13fe:	0f 92       	push	r0
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	0f 92       	push	r0
    1404:	11 24       	eor	r1, r1
    1406:	2f 93       	push	r18
    1408:	3f 93       	push	r19
    140a:	4f 93       	push	r20
    140c:	5f 93       	push	r21
    140e:	6f 93       	push	r22
    1410:	7f 93       	push	r23
    1412:	8f 93       	push	r24
    1414:	9f 93       	push	r25
    1416:	af 93       	push	r26
    1418:	bf 93       	push	r27
    141a:	ef 93       	push	r30
    141c:	ff 93       	push	r31
    141e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1422:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1426:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    142a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    142e:	c9 01       	movw	r24, r18
    1430:	03 2e       	mov	r0, r19
    1432:	00 0c       	add	r0, r0
    1434:	aa 0b       	sbc	r26, r26
    1436:	bb 0b       	sbc	r27, r27
    1438:	dc 01       	movw	r26, r24
    143a:	99 27       	eor	r25, r25
    143c:	88 27       	eor	r24, r24
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	84 2b       	or	r24, r20
    1444:	95 2b       	or	r25, r21
    1446:	a6 2b       	or	r26, r22
    1448:	b7 2b       	or	r27, r23
    144a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    144e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1452:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1456:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    145a:	b0 9b       	sbis	0x16, 0	; 22
    145c:	1b c0       	rjmp	.+54     	; 0x1494 <__vector_5+0x98>
    145e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1462:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1466:	c9 01       	movw	r24, r18
    1468:	01 96       	adiw	r24, 0x01	; 1
    146a:	09 2e       	mov	r0, r25
    146c:	00 0c       	add	r0, r0
    146e:	aa 0b       	sbc	r26, r26
    1470:	bb 0b       	sbc	r27, r27
    1472:	dc 01       	movw	r26, r24
    1474:	99 27       	eor	r25, r25
    1476:	88 27       	eor	r24, r24
    1478:	60 e0       	ldi	r22, 0x00	; 0
    147a:	70 e0       	ldi	r23, 0x00	; 0
    147c:	84 2b       	or	r24, r20
    147e:	95 2b       	or	r25, r21
    1480:	a6 2b       	or	r26, r22
    1482:	b7 2b       	or	r27, r23
    1484:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1488:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    148c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1490:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1494:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x8>
    1498:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x9>
    149c:	30 97       	sbiw	r30, 0x00	; 0
    149e:	39 f0       	breq	.+14     	; 0x14ae <__vector_5+0xb2>
    14a0:	64 e0       	ldi	r22, 0x04	; 4
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x8>
    14a8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x9>
    14ac:	09 95       	icall
    14ae:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	0f 90       	pop	r0
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	0f 90       	pop	r0
    14d0:	1f 90       	pop	r1
    14d2:	18 95       	reti

000014d4 <__vector_10>:
    14d4:	1f 92       	push	r1
    14d6:	0f 92       	push	r0
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	0f 92       	push	r0
    14dc:	11 24       	eor	r1, r1
    14de:	2f 93       	push	r18
    14e0:	3f 93       	push	r19
    14e2:	4f 93       	push	r20
    14e4:	5f 93       	push	r21
    14e6:	6f 93       	push	r22
    14e8:	7f 93       	push	r23
    14ea:	8f 93       	push	r24
    14ec:	9f 93       	push	r25
    14ee:	af 93       	push	r26
    14f0:	bf 93       	push	r27
    14f2:	ef 93       	push	r30
    14f4:	ff 93       	push	r31
    14f6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    14fa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    14fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1502:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1506:	c9 01       	movw	r24, r18
    1508:	03 2e       	mov	r0, r19
    150a:	00 0c       	add	r0, r0
    150c:	aa 0b       	sbc	r26, r26
    150e:	bb 0b       	sbc	r27, r27
    1510:	dc 01       	movw	r26, r24
    1512:	99 27       	eor	r25, r25
    1514:	88 27       	eor	r24, r24
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	84 2b       	or	r24, r20
    151c:	95 2b       	or	r25, r21
    151e:	a6 2b       	or	r26, r22
    1520:	b7 2b       	or	r27, r23
    1522:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1526:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    152a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    152e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1532:	b0 9b       	sbis	0x16, 0	; 22
    1534:	1b c0       	rjmp	.+54     	; 0x156c <__vector_10+0x98>
    1536:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    153a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    153e:	c9 01       	movw	r24, r18
    1540:	01 96       	adiw	r24, 0x01	; 1
    1542:	09 2e       	mov	r0, r25
    1544:	00 0c       	add	r0, r0
    1546:	aa 0b       	sbc	r26, r26
    1548:	bb 0b       	sbc	r27, r27
    154a:	dc 01       	movw	r26, r24
    154c:	99 27       	eor	r25, r25
    154e:	88 27       	eor	r24, r24
    1550:	60 e0       	ldi	r22, 0x00	; 0
    1552:	70 e0       	ldi	r23, 0x00	; 0
    1554:	84 2b       	or	r24, r20
    1556:	95 2b       	or	r25, r21
    1558:	a6 2b       	or	r26, r22
    155a:	b7 2b       	or	r27, r23
    155c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1560:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1564:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1568:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    156c:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0xa>
    1570:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0xb>
    1574:	30 97       	sbiw	r30, 0x00	; 0
    1576:	39 f0       	breq	.+14     	; 0x1586 <__vector_10+0xb2>
    1578:	65 e0       	ldi	r22, 0x05	; 5
    157a:	70 e0       	ldi	r23, 0x00	; 0
    157c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0xa>
    1580:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0xb>
    1584:	09 95       	icall
    1586:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    158a:	ff 91       	pop	r31
    158c:	ef 91       	pop	r30
    158e:	bf 91       	pop	r27
    1590:	af 91       	pop	r26
    1592:	9f 91       	pop	r25
    1594:	8f 91       	pop	r24
    1596:	7f 91       	pop	r23
    1598:	6f 91       	pop	r22
    159a:	5f 91       	pop	r21
    159c:	4f 91       	pop	r20
    159e:	3f 91       	pop	r19
    15a0:	2f 91       	pop	r18
    15a2:	0f 90       	pop	r0
    15a4:	0f be       	out	0x3f, r0	; 63
    15a6:	0f 90       	pop	r0
    15a8:	1f 90       	pop	r1
    15aa:	18 95       	reti

000015ac <__vector_11>:
    15ac:	1f 92       	push	r1
    15ae:	0f 92       	push	r0
    15b0:	0f b6       	in	r0, 0x3f	; 63
    15b2:	0f 92       	push	r0
    15b4:	11 24       	eor	r1, r1
    15b6:	2f 93       	push	r18
    15b8:	3f 93       	push	r19
    15ba:	4f 93       	push	r20
    15bc:	5f 93       	push	r21
    15be:	6f 93       	push	r22
    15c0:	7f 93       	push	r23
    15c2:	8f 93       	push	r24
    15c4:	9f 93       	push	r25
    15c6:	af 93       	push	r26
    15c8:	bf 93       	push	r27
    15ca:	ef 93       	push	r30
    15cc:	ff 93       	push	r31
    15ce:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    15d2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    15d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15de:	c9 01       	movw	r24, r18
    15e0:	03 2e       	mov	r0, r19
    15e2:	00 0c       	add	r0, r0
    15e4:	aa 0b       	sbc	r26, r26
    15e6:	bb 0b       	sbc	r27, r27
    15e8:	dc 01       	movw	r26, r24
    15ea:	99 27       	eor	r25, r25
    15ec:	88 27       	eor	r24, r24
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	84 2b       	or	r24, r20
    15f4:	95 2b       	or	r25, r21
    15f6:	a6 2b       	or	r26, r22
    15f8:	b7 2b       	or	r27, r23
    15fa:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    15fe:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1602:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1606:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    160a:	b0 9b       	sbis	0x16, 0	; 22
    160c:	1b c0       	rjmp	.+54     	; 0x1644 <__vector_11+0x98>
    160e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1612:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1616:	c9 01       	movw	r24, r18
    1618:	01 96       	adiw	r24, 0x01	; 1
    161a:	09 2e       	mov	r0, r25
    161c:	00 0c       	add	r0, r0
    161e:	aa 0b       	sbc	r26, r26
    1620:	bb 0b       	sbc	r27, r27
    1622:	dc 01       	movw	r26, r24
    1624:	99 27       	eor	r25, r25
    1626:	88 27       	eor	r24, r24
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	70 e0       	ldi	r23, 0x00	; 0
    162c:	84 2b       	or	r24, r20
    162e:	95 2b       	or	r25, r21
    1630:	a6 2b       	or	r26, r22
    1632:	b7 2b       	or	r27, r23
    1634:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1638:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    163c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1640:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1644:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xc>
    1648:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xd>
    164c:	30 97       	sbiw	r30, 0x00	; 0
    164e:	39 f0       	breq	.+14     	; 0x165e <__vector_11+0xb2>
    1650:	66 e0       	ldi	r22, 0x06	; 6
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xc>
    1658:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xd>
    165c:	09 95       	icall
    165e:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1662:	ff 91       	pop	r31
    1664:	ef 91       	pop	r30
    1666:	bf 91       	pop	r27
    1668:	af 91       	pop	r26
    166a:	9f 91       	pop	r25
    166c:	8f 91       	pop	r24
    166e:	7f 91       	pop	r23
    1670:	6f 91       	pop	r22
    1672:	5f 91       	pop	r21
    1674:	4f 91       	pop	r20
    1676:	3f 91       	pop	r19
    1678:	2f 91       	pop	r18
    167a:	0f 90       	pop	r0
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	0f 90       	pop	r0
    1680:	1f 90       	pop	r1
    1682:	18 95       	reti

00001684 <__vector_12>:
    1684:	1f 92       	push	r1
    1686:	0f 92       	push	r0
    1688:	0f b6       	in	r0, 0x3f	; 63
    168a:	0f 92       	push	r0
    168c:	11 24       	eor	r1, r1
    168e:	2f 93       	push	r18
    1690:	3f 93       	push	r19
    1692:	4f 93       	push	r20
    1694:	5f 93       	push	r21
    1696:	6f 93       	push	r22
    1698:	7f 93       	push	r23
    169a:	8f 93       	push	r24
    169c:	9f 93       	push	r25
    169e:	af 93       	push	r26
    16a0:	bf 93       	push	r27
    16a2:	ef 93       	push	r30
    16a4:	ff 93       	push	r31
    16a6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    16aa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    16ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16b6:	c9 01       	movw	r24, r18
    16b8:	03 2e       	mov	r0, r19
    16ba:	00 0c       	add	r0, r0
    16bc:	aa 0b       	sbc	r26, r26
    16be:	bb 0b       	sbc	r27, r27
    16c0:	dc 01       	movw	r26, r24
    16c2:	99 27       	eor	r25, r25
    16c4:	88 27       	eor	r24, r24
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	84 2b       	or	r24, r20
    16cc:	95 2b       	or	r25, r21
    16ce:	a6 2b       	or	r26, r22
    16d0:	b7 2b       	or	r27, r23
    16d2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    16d6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    16da:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    16de:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    16e2:	b0 9b       	sbis	0x16, 0	; 22
    16e4:	1b c0       	rjmp	.+54     	; 0x171c <__vector_12+0x98>
    16e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16ee:	c9 01       	movw	r24, r18
    16f0:	01 96       	adiw	r24, 0x01	; 1
    16f2:	09 2e       	mov	r0, r25
    16f4:	00 0c       	add	r0, r0
    16f6:	aa 0b       	sbc	r26, r26
    16f8:	bb 0b       	sbc	r27, r27
    16fa:	dc 01       	movw	r26, r24
    16fc:	99 27       	eor	r25, r25
    16fe:	88 27       	eor	r24, r24
    1700:	60 e0       	ldi	r22, 0x00	; 0
    1702:	70 e0       	ldi	r23, 0x00	; 0
    1704:	84 2b       	or	r24, r20
    1706:	95 2b       	or	r25, r21
    1708:	a6 2b       	or	r26, r22
    170a:	b7 2b       	or	r27, r23
    170c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1710:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1714:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1718:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    171c:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0xe>
    1720:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0xf>
    1724:	30 97       	sbiw	r30, 0x00	; 0
    1726:	39 f0       	breq	.+14     	; 0x1736 <__vector_12+0xb2>
    1728:	67 e0       	ldi	r22, 0x07	; 7
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0xe>
    1730:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0xf>
    1734:	09 95       	icall
    1736:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    173a:	ff 91       	pop	r31
    173c:	ef 91       	pop	r30
    173e:	bf 91       	pop	r27
    1740:	af 91       	pop	r26
    1742:	9f 91       	pop	r25
    1744:	8f 91       	pop	r24
    1746:	7f 91       	pop	r23
    1748:	6f 91       	pop	r22
    174a:	5f 91       	pop	r21
    174c:	4f 91       	pop	r20
    174e:	3f 91       	pop	r19
    1750:	2f 91       	pop	r18
    1752:	0f 90       	pop	r0
    1754:	0f be       	out	0x3f, r0	; 63
    1756:	0f 90       	pop	r0
    1758:	1f 90       	pop	r1
    175a:	18 95       	reti

0000175c <__vector_13>:
    175c:	1f 92       	push	r1
    175e:	0f 92       	push	r0
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	0f 92       	push	r0
    1764:	11 24       	eor	r1, r1
    1766:	2f 93       	push	r18
    1768:	3f 93       	push	r19
    176a:	4f 93       	push	r20
    176c:	5f 93       	push	r21
    176e:	6f 93       	push	r22
    1770:	7f 93       	push	r23
    1772:	8f 93       	push	r24
    1774:	9f 93       	push	r25
    1776:	af 93       	push	r26
    1778:	bf 93       	push	r27
    177a:	ef 93       	push	r30
    177c:	ff 93       	push	r31
    177e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1782:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1786:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    178a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    178e:	c9 01       	movw	r24, r18
    1790:	03 2e       	mov	r0, r19
    1792:	00 0c       	add	r0, r0
    1794:	aa 0b       	sbc	r26, r26
    1796:	bb 0b       	sbc	r27, r27
    1798:	dc 01       	movw	r26, r24
    179a:	99 27       	eor	r25, r25
    179c:	88 27       	eor	r24, r24
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	84 2b       	or	r24, r20
    17a4:	95 2b       	or	r25, r21
    17a6:	a6 2b       	or	r26, r22
    17a8:	b7 2b       	or	r27, r23
    17aa:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    17ae:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    17b2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    17b6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    17ba:	b0 9b       	sbis	0x16, 0	; 22
    17bc:	1b c0       	rjmp	.+54     	; 0x17f4 <__vector_13+0x98>
    17be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17c6:	c9 01       	movw	r24, r18
    17c8:	01 96       	adiw	r24, 0x01	; 1
    17ca:	09 2e       	mov	r0, r25
    17cc:	00 0c       	add	r0, r0
    17ce:	aa 0b       	sbc	r26, r26
    17d0:	bb 0b       	sbc	r27, r27
    17d2:	dc 01       	movw	r26, r24
    17d4:	99 27       	eor	r25, r25
    17d6:	88 27       	eor	r24, r24
    17d8:	60 e0       	ldi	r22, 0x00	; 0
    17da:	70 e0       	ldi	r23, 0x00	; 0
    17dc:	84 2b       	or	r24, r20
    17de:	95 2b       	or	r25, r21
    17e0:	a6 2b       	or	r26, r22
    17e2:	b7 2b       	or	r27, r23
    17e4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    17e8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    17ec:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    17f0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    17f4:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0x10>
    17f8:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0x11>
    17fc:	30 97       	sbiw	r30, 0x00	; 0
    17fe:	39 f0       	breq	.+14     	; 0x180e <__vector_13+0xb2>
    1800:	68 e0       	ldi	r22, 0x08	; 8
    1802:	70 e0       	ldi	r23, 0x00	; 0
    1804:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0x10>
    1808:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0x11>
    180c:	09 95       	icall
    180e:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1812:	ff 91       	pop	r31
    1814:	ef 91       	pop	r30
    1816:	bf 91       	pop	r27
    1818:	af 91       	pop	r26
    181a:	9f 91       	pop	r25
    181c:	8f 91       	pop	r24
    181e:	7f 91       	pop	r23
    1820:	6f 91       	pop	r22
    1822:	5f 91       	pop	r21
    1824:	4f 91       	pop	r20
    1826:	3f 91       	pop	r19
    1828:	2f 91       	pop	r18
    182a:	0f 90       	pop	r0
    182c:	0f be       	out	0x3f, r0	; 63
    182e:	0f 90       	pop	r0
    1830:	1f 90       	pop	r1
    1832:	18 95       	reti

00001834 <__vector_14>:
    1834:	1f 92       	push	r1
    1836:	0f 92       	push	r0
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	0f 92       	push	r0
    183c:	11 24       	eor	r1, r1
    183e:	2f 93       	push	r18
    1840:	3f 93       	push	r19
    1842:	4f 93       	push	r20
    1844:	5f 93       	push	r21
    1846:	6f 93       	push	r22
    1848:	7f 93       	push	r23
    184a:	8f 93       	push	r24
    184c:	9f 93       	push	r25
    184e:	af 93       	push	r26
    1850:	bf 93       	push	r27
    1852:	ef 93       	push	r30
    1854:	ff 93       	push	r31
    1856:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    185a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    185e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1862:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1866:	c9 01       	movw	r24, r18
    1868:	03 2e       	mov	r0, r19
    186a:	00 0c       	add	r0, r0
    186c:	aa 0b       	sbc	r26, r26
    186e:	bb 0b       	sbc	r27, r27
    1870:	dc 01       	movw	r26, r24
    1872:	99 27       	eor	r25, r25
    1874:	88 27       	eor	r24, r24
    1876:	60 e0       	ldi	r22, 0x00	; 0
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	84 2b       	or	r24, r20
    187c:	95 2b       	or	r25, r21
    187e:	a6 2b       	or	r26, r22
    1880:	b7 2b       	or	r27, r23
    1882:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1886:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    188a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    188e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1892:	b0 9b       	sbis	0x16, 0	; 22
    1894:	1b c0       	rjmp	.+54     	; 0x18cc <__vector_14+0x98>
    1896:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    189a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    189e:	c9 01       	movw	r24, r18
    18a0:	01 96       	adiw	r24, 0x01	; 1
    18a2:	09 2e       	mov	r0, r25
    18a4:	00 0c       	add	r0, r0
    18a6:	aa 0b       	sbc	r26, r26
    18a8:	bb 0b       	sbc	r27, r27
    18aa:	dc 01       	movw	r26, r24
    18ac:	99 27       	eor	r25, r25
    18ae:	88 27       	eor	r24, r24
    18b0:	60 e0       	ldi	r22, 0x00	; 0
    18b2:	70 e0       	ldi	r23, 0x00	; 0
    18b4:	84 2b       	or	r24, r20
    18b6:	95 2b       	or	r25, r21
    18b8:	a6 2b       	or	r26, r22
    18ba:	b7 2b       	or	r27, r23
    18bc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    18c0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    18c4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    18c8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    18cc:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x12>
    18d0:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x13>
    18d4:	30 97       	sbiw	r30, 0x00	; 0
    18d6:	39 f0       	breq	.+14     	; 0x18e6 <__vector_14+0xb2>
    18d8:	69 e0       	ldi	r22, 0x09	; 9
    18da:	70 e0       	ldi	r23, 0x00	; 0
    18dc:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x12>
    18e0:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x13>
    18e4:	09 95       	icall
    18e6:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0f be       	out	0x3f, r0	; 63
    1906:	0f 90       	pop	r0
    1908:	1f 90       	pop	r1
    190a:	18 95       	reti

0000190c <__vector_15>:
    190c:	1f 92       	push	r1
    190e:	0f 92       	push	r0
    1910:	0f b6       	in	r0, 0x3f	; 63
    1912:	0f 92       	push	r0
    1914:	11 24       	eor	r1, r1
    1916:	2f 93       	push	r18
    1918:	3f 93       	push	r19
    191a:	4f 93       	push	r20
    191c:	5f 93       	push	r21
    191e:	6f 93       	push	r22
    1920:	7f 93       	push	r23
    1922:	8f 93       	push	r24
    1924:	9f 93       	push	r25
    1926:	af 93       	push	r26
    1928:	bf 93       	push	r27
    192a:	ef 93       	push	r30
    192c:	ff 93       	push	r31
    192e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1932:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1936:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    193a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    193e:	c9 01       	movw	r24, r18
    1940:	03 2e       	mov	r0, r19
    1942:	00 0c       	add	r0, r0
    1944:	aa 0b       	sbc	r26, r26
    1946:	bb 0b       	sbc	r27, r27
    1948:	dc 01       	movw	r26, r24
    194a:	99 27       	eor	r25, r25
    194c:	88 27       	eor	r24, r24
    194e:	60 e0       	ldi	r22, 0x00	; 0
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	84 2b       	or	r24, r20
    1954:	95 2b       	or	r25, r21
    1956:	a6 2b       	or	r26, r22
    1958:	b7 2b       	or	r27, r23
    195a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    195e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1962:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1966:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    196a:	b0 9b       	sbis	0x16, 0	; 22
    196c:	1b c0       	rjmp	.+54     	; 0x19a4 <__vector_15+0x98>
    196e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1972:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1976:	c9 01       	movw	r24, r18
    1978:	01 96       	adiw	r24, 0x01	; 1
    197a:	09 2e       	mov	r0, r25
    197c:	00 0c       	add	r0, r0
    197e:	aa 0b       	sbc	r26, r26
    1980:	bb 0b       	sbc	r27, r27
    1982:	dc 01       	movw	r26, r24
    1984:	99 27       	eor	r25, r25
    1986:	88 27       	eor	r24, r24
    1988:	60 e0       	ldi	r22, 0x00	; 0
    198a:	70 e0       	ldi	r23, 0x00	; 0
    198c:	84 2b       	or	r24, r20
    198e:	95 2b       	or	r25, r21
    1990:	a6 2b       	or	r26, r22
    1992:	b7 2b       	or	r27, r23
    1994:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1998:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    199c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    19a0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    19a4:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x14>
    19a8:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x15>
    19ac:	30 97       	sbiw	r30, 0x00	; 0
    19ae:	39 f0       	breq	.+14     	; 0x19be <__vector_15+0xb2>
    19b0:	6a e0       	ldi	r22, 0x0A	; 10
    19b2:	70 e0       	ldi	r23, 0x00	; 0
    19b4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x14>
    19b8:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x15>
    19bc:	09 95       	icall
    19be:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    19c2:	ff 91       	pop	r31
    19c4:	ef 91       	pop	r30
    19c6:	bf 91       	pop	r27
    19c8:	af 91       	pop	r26
    19ca:	9f 91       	pop	r25
    19cc:	8f 91       	pop	r24
    19ce:	7f 91       	pop	r23
    19d0:	6f 91       	pop	r22
    19d2:	5f 91       	pop	r21
    19d4:	4f 91       	pop	r20
    19d6:	3f 91       	pop	r19
    19d8:	2f 91       	pop	r18
    19da:	0f 90       	pop	r0
    19dc:	0f be       	out	0x3f, r0	; 63
    19de:	0f 90       	pop	r0
    19e0:	1f 90       	pop	r1
    19e2:	18 95       	reti

000019e4 <__vector_16>:
    19e4:	1f 92       	push	r1
    19e6:	0f 92       	push	r0
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	0f 92       	push	r0
    19ec:	11 24       	eor	r1, r1
    19ee:	2f 93       	push	r18
    19f0:	3f 93       	push	r19
    19f2:	4f 93       	push	r20
    19f4:	5f 93       	push	r21
    19f6:	6f 93       	push	r22
    19f8:	7f 93       	push	r23
    19fa:	8f 93       	push	r24
    19fc:	9f 93       	push	r25
    19fe:	af 93       	push	r26
    1a00:	bf 93       	push	r27
    1a02:	ef 93       	push	r30
    1a04:	ff 93       	push	r31
    1a06:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1a0a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1a0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a16:	c9 01       	movw	r24, r18
    1a18:	03 2e       	mov	r0, r19
    1a1a:	00 0c       	add	r0, r0
    1a1c:	aa 0b       	sbc	r26, r26
    1a1e:	bb 0b       	sbc	r27, r27
    1a20:	dc 01       	movw	r26, r24
    1a22:	99 27       	eor	r25, r25
    1a24:	88 27       	eor	r24, r24
    1a26:	60 e0       	ldi	r22, 0x00	; 0
    1a28:	70 e0       	ldi	r23, 0x00	; 0
    1a2a:	84 2b       	or	r24, r20
    1a2c:	95 2b       	or	r25, r21
    1a2e:	a6 2b       	or	r26, r22
    1a30:	b7 2b       	or	r27, r23
    1a32:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a36:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a3a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a3e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a42:	b0 9b       	sbis	0x16, 0	; 22
    1a44:	1b c0       	rjmp	.+54     	; 0x1a7c <__vector_16+0x98>
    1a46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a4e:	c9 01       	movw	r24, r18
    1a50:	01 96       	adiw	r24, 0x01	; 1
    1a52:	09 2e       	mov	r0, r25
    1a54:	00 0c       	add	r0, r0
    1a56:	aa 0b       	sbc	r26, r26
    1a58:	bb 0b       	sbc	r27, r27
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	99 27       	eor	r25, r25
    1a5e:	88 27       	eor	r24, r24
    1a60:	60 e0       	ldi	r22, 0x00	; 0
    1a62:	70 e0       	ldi	r23, 0x00	; 0
    1a64:	84 2b       	or	r24, r20
    1a66:	95 2b       	or	r25, r21
    1a68:	a6 2b       	or	r26, r22
    1a6a:	b7 2b       	or	r27, r23
    1a6c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a70:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a74:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a78:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a7c:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x16>
    1a80:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x17>
    1a84:	30 97       	sbiw	r30, 0x00	; 0
    1a86:	39 f0       	breq	.+14     	; 0x1a96 <__vector_16+0xb2>
    1a88:	6b e0       	ldi	r22, 0x0B	; 11
    1a8a:	70 e0       	ldi	r23, 0x00	; 0
    1a8c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x16>
    1a90:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x17>
    1a94:	09 95       	icall
    1a96:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1a9a:	ff 91       	pop	r31
    1a9c:	ef 91       	pop	r30
    1a9e:	bf 91       	pop	r27
    1aa0:	af 91       	pop	r26
    1aa2:	9f 91       	pop	r25
    1aa4:	8f 91       	pop	r24
    1aa6:	7f 91       	pop	r23
    1aa8:	6f 91       	pop	r22
    1aaa:	5f 91       	pop	r21
    1aac:	4f 91       	pop	r20
    1aae:	3f 91       	pop	r19
    1ab0:	2f 91       	pop	r18
    1ab2:	0f 90       	pop	r0
    1ab4:	0f be       	out	0x3f, r0	; 63
    1ab6:	0f 90       	pop	r0
    1ab8:	1f 90       	pop	r1
    1aba:	18 95       	reti

00001abc <__vector_17>:
    1abc:	1f 92       	push	r1
    1abe:	0f 92       	push	r0
    1ac0:	0f b6       	in	r0, 0x3f	; 63
    1ac2:	0f 92       	push	r0
    1ac4:	11 24       	eor	r1, r1
    1ac6:	2f 93       	push	r18
    1ac8:	3f 93       	push	r19
    1aca:	4f 93       	push	r20
    1acc:	5f 93       	push	r21
    1ace:	6f 93       	push	r22
    1ad0:	7f 93       	push	r23
    1ad2:	8f 93       	push	r24
    1ad4:	9f 93       	push	r25
    1ad6:	af 93       	push	r26
    1ad8:	bf 93       	push	r27
    1ada:	ef 93       	push	r30
    1adc:	ff 93       	push	r31
    1ade:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1ae2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1ae6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1aea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1aee:	c9 01       	movw	r24, r18
    1af0:	03 2e       	mov	r0, r19
    1af2:	00 0c       	add	r0, r0
    1af4:	aa 0b       	sbc	r26, r26
    1af6:	bb 0b       	sbc	r27, r27
    1af8:	dc 01       	movw	r26, r24
    1afa:	99 27       	eor	r25, r25
    1afc:	88 27       	eor	r24, r24
    1afe:	60 e0       	ldi	r22, 0x00	; 0
    1b00:	70 e0       	ldi	r23, 0x00	; 0
    1b02:	84 2b       	or	r24, r20
    1b04:	95 2b       	or	r25, r21
    1b06:	a6 2b       	or	r26, r22
    1b08:	b7 2b       	or	r27, r23
    1b0a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1b0e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1b12:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1b16:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1b1a:	b0 9b       	sbis	0x16, 0	; 22
    1b1c:	1b c0       	rjmp	.+54     	; 0x1b54 <__vector_17+0x98>
    1b1e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b22:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b26:	c9 01       	movw	r24, r18
    1b28:	01 96       	adiw	r24, 0x01	; 1
    1b2a:	09 2e       	mov	r0, r25
    1b2c:	00 0c       	add	r0, r0
    1b2e:	aa 0b       	sbc	r26, r26
    1b30:	bb 0b       	sbc	r27, r27
    1b32:	dc 01       	movw	r26, r24
    1b34:	99 27       	eor	r25, r25
    1b36:	88 27       	eor	r24, r24
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	70 e0       	ldi	r23, 0x00	; 0
    1b3c:	84 2b       	or	r24, r20
    1b3e:	95 2b       	or	r25, r21
    1b40:	a6 2b       	or	r26, r22
    1b42:	b7 2b       	or	r27, r23
    1b44:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1b48:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1b4c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1b50:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1b54:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x18>
    1b58:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x19>
    1b5c:	30 97       	sbiw	r30, 0x00	; 0
    1b5e:	39 f0       	breq	.+14     	; 0x1b6e <__vector_17+0xb2>
    1b60:	6c e0       	ldi	r22, 0x0C	; 12
    1b62:	70 e0       	ldi	r23, 0x00	; 0
    1b64:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x18>
    1b68:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x19>
    1b6c:	09 95       	icall
    1b6e:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1b72:	ff 91       	pop	r31
    1b74:	ef 91       	pop	r30
    1b76:	bf 91       	pop	r27
    1b78:	af 91       	pop	r26
    1b7a:	9f 91       	pop	r25
    1b7c:	8f 91       	pop	r24
    1b7e:	7f 91       	pop	r23
    1b80:	6f 91       	pop	r22
    1b82:	5f 91       	pop	r21
    1b84:	4f 91       	pop	r20
    1b86:	3f 91       	pop	r19
    1b88:	2f 91       	pop	r18
    1b8a:	0f 90       	pop	r0
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	0f 90       	pop	r0
    1b90:	1f 90       	pop	r1
    1b92:	18 95       	reti

00001b94 <__vector_18>:
    1b94:	1f 92       	push	r1
    1b96:	0f 92       	push	r0
    1b98:	0f b6       	in	r0, 0x3f	; 63
    1b9a:	0f 92       	push	r0
    1b9c:	11 24       	eor	r1, r1
    1b9e:	2f 93       	push	r18
    1ba0:	3f 93       	push	r19
    1ba2:	4f 93       	push	r20
    1ba4:	5f 93       	push	r21
    1ba6:	6f 93       	push	r22
    1ba8:	7f 93       	push	r23
    1baa:	8f 93       	push	r24
    1bac:	9f 93       	push	r25
    1bae:	af 93       	push	r26
    1bb0:	bf 93       	push	r27
    1bb2:	ef 93       	push	r30
    1bb4:	ff 93       	push	r31
    1bb6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1bba:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1bbe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bc2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bc6:	c9 01       	movw	r24, r18
    1bc8:	03 2e       	mov	r0, r19
    1bca:	00 0c       	add	r0, r0
    1bcc:	aa 0b       	sbc	r26, r26
    1bce:	bb 0b       	sbc	r27, r27
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	99 27       	eor	r25, r25
    1bd4:	88 27       	eor	r24, r24
    1bd6:	60 e0       	ldi	r22, 0x00	; 0
    1bd8:	70 e0       	ldi	r23, 0x00	; 0
    1bda:	84 2b       	or	r24, r20
    1bdc:	95 2b       	or	r25, r21
    1bde:	a6 2b       	or	r26, r22
    1be0:	b7 2b       	or	r27, r23
    1be2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1be6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1bea:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1bee:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1bf2:	b0 9b       	sbis	0x16, 0	; 22
    1bf4:	1b c0       	rjmp	.+54     	; 0x1c2c <__vector_18+0x98>
    1bf6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bfa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bfe:	c9 01       	movw	r24, r18
    1c00:	01 96       	adiw	r24, 0x01	; 1
    1c02:	09 2e       	mov	r0, r25
    1c04:	00 0c       	add	r0, r0
    1c06:	aa 0b       	sbc	r26, r26
    1c08:	bb 0b       	sbc	r27, r27
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	99 27       	eor	r25, r25
    1c0e:	88 27       	eor	r24, r24
    1c10:	60 e0       	ldi	r22, 0x00	; 0
    1c12:	70 e0       	ldi	r23, 0x00	; 0
    1c14:	84 2b       	or	r24, r20
    1c16:	95 2b       	or	r25, r21
    1c18:	a6 2b       	or	r26, r22
    1c1a:	b7 2b       	or	r27, r23
    1c1c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1c20:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1c24:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1c28:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1c2c:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x1a>
    1c30:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x1b>
    1c34:	30 97       	sbiw	r30, 0x00	; 0
    1c36:	39 f0       	breq	.+14     	; 0x1c46 <__vector_18+0xb2>
    1c38:	6d e0       	ldi	r22, 0x0D	; 13
    1c3a:	70 e0       	ldi	r23, 0x00	; 0
    1c3c:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x1a>
    1c40:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x1b>
    1c44:	09 95       	icall
    1c46:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1c4a:	ff 91       	pop	r31
    1c4c:	ef 91       	pop	r30
    1c4e:	bf 91       	pop	r27
    1c50:	af 91       	pop	r26
    1c52:	9f 91       	pop	r25
    1c54:	8f 91       	pop	r24
    1c56:	7f 91       	pop	r23
    1c58:	6f 91       	pop	r22
    1c5a:	5f 91       	pop	r21
    1c5c:	4f 91       	pop	r20
    1c5e:	3f 91       	pop	r19
    1c60:	2f 91       	pop	r18
    1c62:	0f 90       	pop	r0
    1c64:	0f be       	out	0x3f, r0	; 63
    1c66:	0f 90       	pop	r0
    1c68:	1f 90       	pop	r1
    1c6a:	18 95       	reti

00001c6c <__vector_19>:
    1c6c:	1f 92       	push	r1
    1c6e:	0f 92       	push	r0
    1c70:	0f b6       	in	r0, 0x3f	; 63
    1c72:	0f 92       	push	r0
    1c74:	11 24       	eor	r1, r1
    1c76:	2f 93       	push	r18
    1c78:	3f 93       	push	r19
    1c7a:	4f 93       	push	r20
    1c7c:	5f 93       	push	r21
    1c7e:	6f 93       	push	r22
    1c80:	7f 93       	push	r23
    1c82:	8f 93       	push	r24
    1c84:	9f 93       	push	r25
    1c86:	af 93       	push	r26
    1c88:	bf 93       	push	r27
    1c8a:	ef 93       	push	r30
    1c8c:	ff 93       	push	r31
    1c8e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1c92:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1c96:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c9a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c9e:	c9 01       	movw	r24, r18
    1ca0:	03 2e       	mov	r0, r19
    1ca2:	00 0c       	add	r0, r0
    1ca4:	aa 0b       	sbc	r26, r26
    1ca6:	bb 0b       	sbc	r27, r27
    1ca8:	dc 01       	movw	r26, r24
    1caa:	99 27       	eor	r25, r25
    1cac:	88 27       	eor	r24, r24
    1cae:	60 e0       	ldi	r22, 0x00	; 0
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	84 2b       	or	r24, r20
    1cb4:	95 2b       	or	r25, r21
    1cb6:	a6 2b       	or	r26, r22
    1cb8:	b7 2b       	or	r27, r23
    1cba:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1cbe:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1cc2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1cc6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1cca:	b0 9b       	sbis	0x16, 0	; 22
    1ccc:	1b c0       	rjmp	.+54     	; 0x1d04 <__vector_19+0x98>
    1cce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cd2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cd6:	c9 01       	movw	r24, r18
    1cd8:	01 96       	adiw	r24, 0x01	; 1
    1cda:	09 2e       	mov	r0, r25
    1cdc:	00 0c       	add	r0, r0
    1cde:	aa 0b       	sbc	r26, r26
    1ce0:	bb 0b       	sbc	r27, r27
    1ce2:	dc 01       	movw	r26, r24
    1ce4:	99 27       	eor	r25, r25
    1ce6:	88 27       	eor	r24, r24
    1ce8:	60 e0       	ldi	r22, 0x00	; 0
    1cea:	70 e0       	ldi	r23, 0x00	; 0
    1cec:	84 2b       	or	r24, r20
    1cee:	95 2b       	or	r25, r21
    1cf0:	a6 2b       	or	r26, r22
    1cf2:	b7 2b       	or	r27, r23
    1cf4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1cf8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1cfc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1d00:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1d04:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1c>
    1d08:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1d>
    1d0c:	30 97       	sbiw	r30, 0x00	; 0
    1d0e:	39 f0       	breq	.+14     	; 0x1d1e <__vector_19+0xb2>
    1d10:	6e e0       	ldi	r22, 0x0E	; 14
    1d12:	70 e0       	ldi	r23, 0x00	; 0
    1d14:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1c>
    1d18:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1d>
    1d1c:	09 95       	icall
    1d1e:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1d22:	ff 91       	pop	r31
    1d24:	ef 91       	pop	r30
    1d26:	bf 91       	pop	r27
    1d28:	af 91       	pop	r26
    1d2a:	9f 91       	pop	r25
    1d2c:	8f 91       	pop	r24
    1d2e:	7f 91       	pop	r23
    1d30:	6f 91       	pop	r22
    1d32:	5f 91       	pop	r21
    1d34:	4f 91       	pop	r20
    1d36:	3f 91       	pop	r19
    1d38:	2f 91       	pop	r18
    1d3a:	0f 90       	pop	r0
    1d3c:	0f be       	out	0x3f, r0	; 63
    1d3e:	0f 90       	pop	r0
    1d40:	1f 90       	pop	r1
    1d42:	18 95       	reti

00001d44 <__vector_20>:
    1d44:	1f 92       	push	r1
    1d46:	0f 92       	push	r0
    1d48:	0f b6       	in	r0, 0x3f	; 63
    1d4a:	0f 92       	push	r0
    1d4c:	11 24       	eor	r1, r1
    1d4e:	2f 93       	push	r18
    1d50:	3f 93       	push	r19
    1d52:	4f 93       	push	r20
    1d54:	5f 93       	push	r21
    1d56:	6f 93       	push	r22
    1d58:	7f 93       	push	r23
    1d5a:	8f 93       	push	r24
    1d5c:	9f 93       	push	r25
    1d5e:	af 93       	push	r26
    1d60:	bf 93       	push	r27
    1d62:	ef 93       	push	r30
    1d64:	ff 93       	push	r31
    1d66:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1d6a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1d6e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d72:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d76:	c9 01       	movw	r24, r18
    1d78:	03 2e       	mov	r0, r19
    1d7a:	00 0c       	add	r0, r0
    1d7c:	aa 0b       	sbc	r26, r26
    1d7e:	bb 0b       	sbc	r27, r27
    1d80:	dc 01       	movw	r26, r24
    1d82:	99 27       	eor	r25, r25
    1d84:	88 27       	eor	r24, r24
    1d86:	60 e0       	ldi	r22, 0x00	; 0
    1d88:	70 e0       	ldi	r23, 0x00	; 0
    1d8a:	84 2b       	or	r24, r20
    1d8c:	95 2b       	or	r25, r21
    1d8e:	a6 2b       	or	r26, r22
    1d90:	b7 2b       	or	r27, r23
    1d92:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1d96:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1d9a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1d9e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1da2:	b0 9b       	sbis	0x16, 0	; 22
    1da4:	1b c0       	rjmp	.+54     	; 0x1ddc <__vector_20+0x98>
    1da6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1daa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1dae:	c9 01       	movw	r24, r18
    1db0:	01 96       	adiw	r24, 0x01	; 1
    1db2:	09 2e       	mov	r0, r25
    1db4:	00 0c       	add	r0, r0
    1db6:	aa 0b       	sbc	r26, r26
    1db8:	bb 0b       	sbc	r27, r27
    1dba:	dc 01       	movw	r26, r24
    1dbc:	99 27       	eor	r25, r25
    1dbe:	88 27       	eor	r24, r24
    1dc0:	60 e0       	ldi	r22, 0x00	; 0
    1dc2:	70 e0       	ldi	r23, 0x00	; 0
    1dc4:	84 2b       	or	r24, r20
    1dc6:	95 2b       	or	r25, r21
    1dc8:	a6 2b       	or	r26, r22
    1dca:	b7 2b       	or	r27, r23
    1dcc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1dd0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1dd4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1dd8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1ddc:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x1e>
    1de0:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x1f>
    1de4:	30 97       	sbiw	r30, 0x00	; 0
    1de6:	39 f0       	breq	.+14     	; 0x1df6 <__vector_20+0xb2>
    1de8:	6f e0       	ldi	r22, 0x0F	; 15
    1dea:	70 e0       	ldi	r23, 0x00	; 0
    1dec:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x1e>
    1df0:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x1f>
    1df4:	09 95       	icall
    1df6:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1dfa:	ff 91       	pop	r31
    1dfc:	ef 91       	pop	r30
    1dfe:	bf 91       	pop	r27
    1e00:	af 91       	pop	r26
    1e02:	9f 91       	pop	r25
    1e04:	8f 91       	pop	r24
    1e06:	7f 91       	pop	r23
    1e08:	6f 91       	pop	r22
    1e0a:	5f 91       	pop	r21
    1e0c:	4f 91       	pop	r20
    1e0e:	3f 91       	pop	r19
    1e10:	2f 91       	pop	r18
    1e12:	0f 90       	pop	r0
    1e14:	0f be       	out	0x3f, r0	; 63
    1e16:	0f 90       	pop	r0
    1e18:	1f 90       	pop	r1
    1e1a:	18 95       	reti

00001e1c <__vector_21>:
    1e1c:	1f 92       	push	r1
    1e1e:	0f 92       	push	r0
    1e20:	0f b6       	in	r0, 0x3f	; 63
    1e22:	0f 92       	push	r0
    1e24:	11 24       	eor	r1, r1
    1e26:	2f 93       	push	r18
    1e28:	3f 93       	push	r19
    1e2a:	4f 93       	push	r20
    1e2c:	5f 93       	push	r21
    1e2e:	6f 93       	push	r22
    1e30:	7f 93       	push	r23
    1e32:	8f 93       	push	r24
    1e34:	9f 93       	push	r25
    1e36:	af 93       	push	r26
    1e38:	bf 93       	push	r27
    1e3a:	ef 93       	push	r30
    1e3c:	ff 93       	push	r31
    1e3e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1e42:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1e46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e4e:	c9 01       	movw	r24, r18
    1e50:	03 2e       	mov	r0, r19
    1e52:	00 0c       	add	r0, r0
    1e54:	aa 0b       	sbc	r26, r26
    1e56:	bb 0b       	sbc	r27, r27
    1e58:	dc 01       	movw	r26, r24
    1e5a:	99 27       	eor	r25, r25
    1e5c:	88 27       	eor	r24, r24
    1e5e:	60 e0       	ldi	r22, 0x00	; 0
    1e60:	70 e0       	ldi	r23, 0x00	; 0
    1e62:	84 2b       	or	r24, r20
    1e64:	95 2b       	or	r25, r21
    1e66:	a6 2b       	or	r26, r22
    1e68:	b7 2b       	or	r27, r23
    1e6a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1e6e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1e72:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1e76:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1e7a:	b0 9b       	sbis	0x16, 0	; 22
    1e7c:	1b c0       	rjmp	.+54     	; 0x1eb4 <__vector_21+0x98>
    1e7e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e82:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e86:	c9 01       	movw	r24, r18
    1e88:	01 96       	adiw	r24, 0x01	; 1
    1e8a:	09 2e       	mov	r0, r25
    1e8c:	00 0c       	add	r0, r0
    1e8e:	aa 0b       	sbc	r26, r26
    1e90:	bb 0b       	sbc	r27, r27
    1e92:	dc 01       	movw	r26, r24
    1e94:	99 27       	eor	r25, r25
    1e96:	88 27       	eor	r24, r24
    1e98:	60 e0       	ldi	r22, 0x00	; 0
    1e9a:	70 e0       	ldi	r23, 0x00	; 0
    1e9c:	84 2b       	or	r24, r20
    1e9e:	95 2b       	or	r25, r21
    1ea0:	a6 2b       	or	r26, r22
    1ea2:	b7 2b       	or	r27, r23
    1ea4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1ea8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1eac:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1eb0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1eb4:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x20>
    1eb8:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x21>
    1ebc:	30 97       	sbiw	r30, 0x00	; 0
    1ebe:	39 f0       	breq	.+14     	; 0x1ece <__vector_21+0xb2>
    1ec0:	60 e1       	ldi	r22, 0x10	; 16
    1ec2:	70 e0       	ldi	r23, 0x00	; 0
    1ec4:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x20>
    1ec8:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x21>
    1ecc:	09 95       	icall
    1ece:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1ed2:	ff 91       	pop	r31
    1ed4:	ef 91       	pop	r30
    1ed6:	bf 91       	pop	r27
    1ed8:	af 91       	pop	r26
    1eda:	9f 91       	pop	r25
    1edc:	8f 91       	pop	r24
    1ede:	7f 91       	pop	r23
    1ee0:	6f 91       	pop	r22
    1ee2:	5f 91       	pop	r21
    1ee4:	4f 91       	pop	r20
    1ee6:	3f 91       	pop	r19
    1ee8:	2f 91       	pop	r18
    1eea:	0f 90       	pop	r0
    1eec:	0f be       	out	0x3f, r0	; 63
    1eee:	0f 90       	pop	r0
    1ef0:	1f 90       	pop	r1
    1ef2:	18 95       	reti

00001ef4 <__vector_22>:
    1ef4:	1f 92       	push	r1
    1ef6:	0f 92       	push	r0
    1ef8:	0f b6       	in	r0, 0x3f	; 63
    1efa:	0f 92       	push	r0
    1efc:	11 24       	eor	r1, r1
    1efe:	2f 93       	push	r18
    1f00:	3f 93       	push	r19
    1f02:	4f 93       	push	r20
    1f04:	5f 93       	push	r21
    1f06:	6f 93       	push	r22
    1f08:	7f 93       	push	r23
    1f0a:	8f 93       	push	r24
    1f0c:	9f 93       	push	r25
    1f0e:	af 93       	push	r26
    1f10:	bf 93       	push	r27
    1f12:	ef 93       	push	r30
    1f14:	ff 93       	push	r31
    1f16:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1f1a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1f1e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f22:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f26:	c9 01       	movw	r24, r18
    1f28:	03 2e       	mov	r0, r19
    1f2a:	00 0c       	add	r0, r0
    1f2c:	aa 0b       	sbc	r26, r26
    1f2e:	bb 0b       	sbc	r27, r27
    1f30:	dc 01       	movw	r26, r24
    1f32:	99 27       	eor	r25, r25
    1f34:	88 27       	eor	r24, r24
    1f36:	60 e0       	ldi	r22, 0x00	; 0
    1f38:	70 e0       	ldi	r23, 0x00	; 0
    1f3a:	84 2b       	or	r24, r20
    1f3c:	95 2b       	or	r25, r21
    1f3e:	a6 2b       	or	r26, r22
    1f40:	b7 2b       	or	r27, r23
    1f42:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1f46:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1f4a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1f4e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1f52:	b0 9b       	sbis	0x16, 0	; 22
    1f54:	1b c0       	rjmp	.+54     	; 0x1f8c <__vector_22+0x98>
    1f56:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f5a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f5e:	c9 01       	movw	r24, r18
    1f60:	01 96       	adiw	r24, 0x01	; 1
    1f62:	09 2e       	mov	r0, r25
    1f64:	00 0c       	add	r0, r0
    1f66:	aa 0b       	sbc	r26, r26
    1f68:	bb 0b       	sbc	r27, r27
    1f6a:	dc 01       	movw	r26, r24
    1f6c:	99 27       	eor	r25, r25
    1f6e:	88 27       	eor	r24, r24
    1f70:	60 e0       	ldi	r22, 0x00	; 0
    1f72:	70 e0       	ldi	r23, 0x00	; 0
    1f74:	84 2b       	or	r24, r20
    1f76:	95 2b       	or	r25, r21
    1f78:	a6 2b       	or	r26, r22
    1f7a:	b7 2b       	or	r27, r23
    1f7c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1f80:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1f84:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1f88:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1f8c:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x22>
    1f90:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x23>
    1f94:	30 97       	sbiw	r30, 0x00	; 0
    1f96:	39 f0       	breq	.+14     	; 0x1fa6 <__vector_22+0xb2>
    1f98:	61 e1       	ldi	r22, 0x11	; 17
    1f9a:	70 e0       	ldi	r23, 0x00	; 0
    1f9c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x22>
    1fa0:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x23>
    1fa4:	09 95       	icall
    1fa6:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    1faa:	ff 91       	pop	r31
    1fac:	ef 91       	pop	r30
    1fae:	bf 91       	pop	r27
    1fb0:	af 91       	pop	r26
    1fb2:	9f 91       	pop	r25
    1fb4:	8f 91       	pop	r24
    1fb6:	7f 91       	pop	r23
    1fb8:	6f 91       	pop	r22
    1fba:	5f 91       	pop	r21
    1fbc:	4f 91       	pop	r20
    1fbe:	3f 91       	pop	r19
    1fc0:	2f 91       	pop	r18
    1fc2:	0f 90       	pop	r0
    1fc4:	0f be       	out	0x3f, r0	; 63
    1fc6:	0f 90       	pop	r0
    1fc8:	1f 90       	pop	r1
    1fca:	18 95       	reti

00001fcc <enqueueByDeadline>:
    1fcc:	ef 92       	push	r14
    1fce:	ff 92       	push	r15
    1fd0:	0f 93       	push	r16
    1fd2:	1f 93       	push	r17
    1fd4:	cf 93       	push	r28
    1fd6:	df 93       	push	r29
    1fd8:	7b 01       	movw	r14, r22
    1fda:	eb 01       	movw	r28, r22
    1fdc:	a8 81       	ld	r26, Y
    1fde:	b9 81       	ldd	r27, Y+1	; 0x01
    1fe0:	10 97       	sbiw	r26, 0x00	; 0
    1fe2:	61 f1       	breq	.+88     	; 0x203c <enqueueByDeadline+0x70>
    1fe4:	fc 01       	movw	r30, r24
    1fe6:	06 81       	ldd	r16, Z+6	; 0x06
    1fe8:	17 81       	ldd	r17, Z+7	; 0x07
    1fea:	20 85       	ldd	r18, Z+8	; 0x08
    1fec:	31 85       	ldd	r19, Z+9	; 0x09
    1fee:	16 96       	adiw	r26, 0x06	; 6
    1ff0:	4d 91       	ld	r20, X+
    1ff2:	5d 91       	ld	r21, X+
    1ff4:	6d 91       	ld	r22, X+
    1ff6:	7c 91       	ld	r23, X
    1ff8:	19 97       	sbiw	r26, 0x09	; 9
    1ffa:	04 17       	cp	r16, r20
    1ffc:	15 07       	cpc	r17, r21
    1ffe:	26 07       	cpc	r18, r22
    2000:	37 07       	cpc	r19, r23
    2002:	14 f4       	brge	.+4      	; 0x2008 <enqueueByDeadline+0x3c>
    2004:	1b c0       	rjmp	.+54     	; 0x203c <enqueueByDeadline+0x70>
    2006:	df 01       	movw	r26, r30
    2008:	ed 91       	ld	r30, X+
    200a:	fc 91       	ld	r31, X
    200c:	11 97       	sbiw	r26, 0x01	; 1
    200e:	30 97       	sbiw	r30, 0x00	; 0
    2010:	49 f0       	breq	.+18     	; 0x2024 <enqueueByDeadline+0x58>
    2012:	46 81       	ldd	r20, Z+6	; 0x06
    2014:	57 81       	ldd	r21, Z+7	; 0x07
    2016:	60 85       	ldd	r22, Z+8	; 0x08
    2018:	71 85       	ldd	r23, Z+9	; 0x09
    201a:	04 17       	cp	r16, r20
    201c:	15 07       	cpc	r17, r21
    201e:	26 07       	cpc	r18, r22
    2020:	37 07       	cpc	r19, r23
    2022:	8c f7       	brge	.-30     	; 0x2006 <enqueueByDeadline+0x3a>
    2024:	ec 01       	movw	r28, r24
    2026:	f9 83       	std	Y+1, r31	; 0x01
    2028:	e8 83       	st	Y, r30
    202a:	10 97       	sbiw	r26, 0x00	; 0
    202c:	21 f4       	brne	.+8      	; 0x2036 <enqueueByDeadline+0x6a>
    202e:	f7 01       	movw	r30, r14
    2030:	91 83       	std	Z+1, r25	; 0x01
    2032:	80 83       	st	Z, r24
    2034:	07 c0       	rjmp	.+14     	; 0x2044 <enqueueByDeadline+0x78>
    2036:	8d 93       	st	X+, r24
    2038:	9c 93       	st	X, r25
    203a:	04 c0       	rjmp	.+8      	; 0x2044 <enqueueByDeadline+0x78>
    203c:	ec 01       	movw	r28, r24
    203e:	b9 83       	std	Y+1, r27	; 0x01
    2040:	a8 83       	st	Y, r26
    2042:	f5 cf       	rjmp	.-22     	; 0x202e <enqueueByDeadline+0x62>
    2044:	df 91       	pop	r29
    2046:	cf 91       	pop	r28
    2048:	1f 91       	pop	r17
    204a:	0f 91       	pop	r16
    204c:	ff 90       	pop	r15
    204e:	ef 90       	pop	r14
    2050:	08 95       	ret

00002052 <enqueueByBaseline>:
    2052:	ef 92       	push	r14
    2054:	ff 92       	push	r15
    2056:	0f 93       	push	r16
    2058:	1f 93       	push	r17
    205a:	cf 93       	push	r28
    205c:	df 93       	push	r29
    205e:	7b 01       	movw	r14, r22
    2060:	eb 01       	movw	r28, r22
    2062:	a8 81       	ld	r26, Y
    2064:	b9 81       	ldd	r27, Y+1	; 0x01
    2066:	10 97       	sbiw	r26, 0x00	; 0
    2068:	61 f1       	breq	.+88     	; 0x20c2 <enqueueByBaseline+0x70>
    206a:	fc 01       	movw	r30, r24
    206c:	02 81       	ldd	r16, Z+2	; 0x02
    206e:	13 81       	ldd	r17, Z+3	; 0x03
    2070:	24 81       	ldd	r18, Z+4	; 0x04
    2072:	35 81       	ldd	r19, Z+5	; 0x05
    2074:	12 96       	adiw	r26, 0x02	; 2
    2076:	4d 91       	ld	r20, X+
    2078:	5d 91       	ld	r21, X+
    207a:	6d 91       	ld	r22, X+
    207c:	7c 91       	ld	r23, X
    207e:	15 97       	sbiw	r26, 0x05	; 5
    2080:	04 17       	cp	r16, r20
    2082:	15 07       	cpc	r17, r21
    2084:	26 07       	cpc	r18, r22
    2086:	37 07       	cpc	r19, r23
    2088:	14 f4       	brge	.+4      	; 0x208e <enqueueByBaseline+0x3c>
    208a:	1b c0       	rjmp	.+54     	; 0x20c2 <enqueueByBaseline+0x70>
    208c:	df 01       	movw	r26, r30
    208e:	ed 91       	ld	r30, X+
    2090:	fc 91       	ld	r31, X
    2092:	11 97       	sbiw	r26, 0x01	; 1
    2094:	30 97       	sbiw	r30, 0x00	; 0
    2096:	49 f0       	breq	.+18     	; 0x20aa <enqueueByBaseline+0x58>
    2098:	42 81       	ldd	r20, Z+2	; 0x02
    209a:	53 81       	ldd	r21, Z+3	; 0x03
    209c:	64 81       	ldd	r22, Z+4	; 0x04
    209e:	75 81       	ldd	r23, Z+5	; 0x05
    20a0:	04 17       	cp	r16, r20
    20a2:	15 07       	cpc	r17, r21
    20a4:	26 07       	cpc	r18, r22
    20a6:	37 07       	cpc	r19, r23
    20a8:	8c f7       	brge	.-30     	; 0x208c <enqueueByBaseline+0x3a>
    20aa:	ec 01       	movw	r28, r24
    20ac:	f9 83       	std	Y+1, r31	; 0x01
    20ae:	e8 83       	st	Y, r30
    20b0:	10 97       	sbiw	r26, 0x00	; 0
    20b2:	21 f4       	brne	.+8      	; 0x20bc <enqueueByBaseline+0x6a>
    20b4:	f7 01       	movw	r30, r14
    20b6:	91 83       	std	Z+1, r25	; 0x01
    20b8:	80 83       	st	Z, r24
    20ba:	07 c0       	rjmp	.+14     	; 0x20ca <enqueueByBaseline+0x78>
    20bc:	8d 93       	st	X+, r24
    20be:	9c 93       	st	X, r25
    20c0:	04 c0       	rjmp	.+8      	; 0x20ca <enqueueByBaseline+0x78>
    20c2:	ec 01       	movw	r28, r24
    20c4:	b9 83       	std	Y+1, r27	; 0x01
    20c6:	a8 83       	st	Y, r26
    20c8:	f5 cf       	rjmp	.-22     	; 0x20b4 <enqueueByBaseline+0x62>
    20ca:	df 91       	pop	r29
    20cc:	cf 91       	pop	r28
    20ce:	1f 91       	pop	r17
    20d0:	0f 91       	pop	r16
    20d2:	ff 90       	pop	r15
    20d4:	ef 90       	pop	r14
    20d6:	08 95       	ret

000020d8 <dequeue>:
    20d8:	dc 01       	movw	r26, r24
    20da:	ed 91       	ld	r30, X+
    20dc:	fc 91       	ld	r31, X
    20de:	11 97       	sbiw	r26, 0x01	; 1
    20e0:	30 97       	sbiw	r30, 0x00	; 0
    20e2:	59 f4       	brne	.+22     	; 0x20fa <dequeue+0x22>
    20e4:	8f ef       	ldi	r24, 0xFF	; 255
    20e6:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    20ea:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    20ee:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	83 bf       	out	0x33, r24	; 51
    20f6:	88 95       	sleep
    20f8:	fd cf       	rjmp	.-6      	; 0x20f4 <dequeue+0x1c>
    20fa:	20 81       	ld	r18, Z
    20fc:	31 81       	ldd	r19, Z+1	; 0x01
    20fe:	2d 93       	st	X+, r18
    2100:	3c 93       	st	X, r19
    2102:	cf 01       	movw	r24, r30
    2104:	08 95       	ret

00002106 <__vector_9>:
    2106:	1f 92       	push	r1
    2108:	0f 92       	push	r0
    210a:	0f b6       	in	r0, 0x3f	; 63
    210c:	0f 92       	push	r0
    210e:	11 24       	eor	r1, r1
    2110:	2f 93       	push	r18
    2112:	3f 93       	push	r19
    2114:	4f 93       	push	r20
    2116:	5f 93       	push	r21
    2118:	6f 93       	push	r22
    211a:	7f 93       	push	r23
    211c:	8f 93       	push	r24
    211e:	9f 93       	push	r25
    2120:	ef 93       	push	r30
    2122:	ff 93       	push	r31
    2124:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    2128:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    212c:	01 96       	adiw	r24, 0x01	; 1
    212e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
    2132:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
    2136:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    213a:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    213e:	30 97       	sbiw	r30, 0x00	; 0
    2140:	01 f1       	breq	.+64     	; 0x2182 <__vector_9+0x7c>
    2142:	42 81       	ldd	r20, Z+2	; 0x02
    2144:	53 81       	ldd	r21, Z+3	; 0x03
    2146:	64 81       	ldd	r22, Z+4	; 0x04
    2148:	75 81       	ldd	r23, Z+5	; 0x05
    214a:	86 17       	cp	r24, r22
    214c:	97 07       	cpc	r25, r23
    214e:	c9 f4       	brne	.+50     	; 0x2182 <__vector_9+0x7c>
    2150:	ca 01       	movw	r24, r20
    2152:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2156:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    215a:	42 1b       	sub	r20, r18
    215c:	53 0b       	sbc	r21, r19
    215e:	41 30       	cpi	r20, 0x01	; 1
    2160:	51 05       	cpc	r21, r1
    2162:	29 f4       	brne	.+10     	; 0x216e <__vector_9+0x68>
    2164:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2168:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    216c:	01 96       	adiw	r24, 0x01	; 1
    216e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    2172:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    2176:	ef e6       	ldi	r30, 0x6F	; 111
    2178:	f0 e0       	ldi	r31, 0x00	; 0
    217a:	80 81       	ld	r24, Z
    217c:	82 60       	ori	r24, 0x02	; 2
    217e:	80 83       	st	Z, r24
    2180:	05 c0       	rjmp	.+10     	; 0x218c <__vector_9+0x86>
    2182:	ef e6       	ldi	r30, 0x6F	; 111
    2184:	f0 e0       	ldi	r31, 0x00	; 0
    2186:	80 81       	ld	r24, Z
    2188:	8d 7f       	andi	r24, 0xFD	; 253
    218a:	80 83       	st	Z, r24
    218c:	ff 91       	pop	r31
    218e:	ef 91       	pop	r30
    2190:	9f 91       	pop	r25
    2192:	8f 91       	pop	r24
    2194:	7f 91       	pop	r23
    2196:	6f 91       	pop	r22
    2198:	5f 91       	pop	r21
    219a:	4f 91       	pop	r20
    219c:	3f 91       	pop	r19
    219e:	2f 91       	pop	r18
    21a0:	0f 90       	pop	r0
    21a2:	0f be       	out	0x3f, r0	; 63
    21a4:	0f 90       	pop	r0
    21a6:	1f 90       	pop	r1
    21a8:	18 95       	reti

000021aa <__vector_7>:
    21aa:	1f 92       	push	r1
    21ac:	0f 92       	push	r0
    21ae:	0f b6       	in	r0, 0x3f	; 63
    21b0:	0f 92       	push	r0
    21b2:	11 24       	eor	r1, r1
    21b4:	cf 92       	push	r12
    21b6:	df 92       	push	r13
    21b8:	ef 92       	push	r14
    21ba:	ff 92       	push	r15
    21bc:	2f 93       	push	r18
    21be:	3f 93       	push	r19
    21c0:	4f 93       	push	r20
    21c2:	5f 93       	push	r21
    21c4:	6f 93       	push	r22
    21c6:	7f 93       	push	r23
    21c8:	8f 93       	push	r24
    21ca:	9f 93       	push	r25
    21cc:	af 93       	push	r26
    21ce:	bf 93       	push	r27
    21d0:	ef 93       	push	r30
    21d2:	ff 93       	push	r31
    21d4:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <__data_end>
    21d8:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <__data_end+0x1>
    21dc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    21e0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    21e4:	b0 99       	sbic	0x16, 0	; 22
    21e6:	0f c0       	rjmp	.+30     	; 0x2206 <__vector_7+0x5c>
    21e8:	0d 2c       	mov	r0, r13
    21ea:	00 0c       	add	r0, r0
    21ec:	ee 08       	sbc	r14, r14
    21ee:	ff 08       	sbc	r15, r15
    21f0:	d6 01       	movw	r26, r12
    21f2:	99 27       	eor	r25, r25
    21f4:	88 27       	eor	r24, r24
    21f6:	69 01       	movw	r12, r18
    21f8:	e1 2c       	mov	r14, r1
    21fa:	f1 2c       	mov	r15, r1
    21fc:	c8 2a       	or	r12, r24
    21fe:	d9 2a       	or	r13, r25
    2200:	ea 2a       	or	r14, r26
    2202:	fb 2a       	or	r15, r27
    2204:	15 c0       	rjmp	.+42     	; 0x2230 <__vector_7+0x86>
    2206:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    220a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    220e:	8f ef       	ldi	r24, 0xFF	; 255
    2210:	c8 1a       	sub	r12, r24
    2212:	d8 0a       	sbc	r13, r24
    2214:	0d 2c       	mov	r0, r13
    2216:	00 0c       	add	r0, r0
    2218:	ee 08       	sbc	r14, r14
    221a:	ff 08       	sbc	r15, r15
    221c:	d6 01       	movw	r26, r12
    221e:	99 27       	eor	r25, r25
    2220:	88 27       	eor	r24, r24
    2222:	69 01       	movw	r12, r18
    2224:	e1 2c       	mov	r14, r1
    2226:	f1 2c       	mov	r15, r1
    2228:	c8 2a       	or	r12, r24
    222a:	d9 2a       	or	r13, r25
    222c:	ea 2a       	or	r14, r26
    222e:	fb 2a       	or	r15, r27
    2230:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    2234:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    2238:	30 97       	sbiw	r30, 0x00	; 0
    223a:	09 f4       	brne	.+2      	; 0x223e <__vector_7+0x94>
    223c:	42 c0       	rjmp	.+132    	; 0x22c2 <__vector_7+0x118>
    223e:	82 81       	ldd	r24, Z+2	; 0x02
    2240:	93 81       	ldd	r25, Z+3	; 0x03
    2242:	a4 81       	ldd	r26, Z+4	; 0x04
    2244:	b5 81       	ldd	r27, Z+5	; 0x05
    2246:	8c 19       	sub	r24, r12
    2248:	9d 09       	sbc	r25, r13
    224a:	ae 09       	sbc	r26, r14
    224c:	bf 09       	sbc	r27, r15
    224e:	18 16       	cp	r1, r24
    2250:	19 06       	cpc	r1, r25
    2252:	1a 06       	cpc	r1, r26
    2254:	1b 06       	cpc	r1, r27
    2256:	ec f1       	brlt	.+122    	; 0x22d2 <__vector_7+0x128>
    2258:	80 e1       	ldi	r24, 0x10	; 16
    225a:	91 e0       	ldi	r25, 0x01	; 1
    225c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <dequeue>
    2260:	62 e1       	ldi	r22, 0x12	; 18
    2262:	71 e0       	ldi	r23, 0x01	; 1
    2264:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <enqueueByDeadline>
    2268:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    226c:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    2270:	30 97       	sbiw	r30, 0x00	; 0
    2272:	39 f1       	breq	.+78     	; 0x22c2 <__vector_7+0x118>
    2274:	82 81       	ldd	r24, Z+2	; 0x02
    2276:	93 81       	ldd	r25, Z+3	; 0x03
    2278:	a4 81       	ldd	r26, Z+4	; 0x04
    227a:	b5 81       	ldd	r27, Z+5	; 0x05
    227c:	8c 19       	sub	r24, r12
    227e:	9d 09       	sbc	r25, r13
    2280:	ae 09       	sbc	r26, r14
    2282:	bf 09       	sbc	r27, r15
    2284:	18 16       	cp	r1, r24
    2286:	19 06       	cpc	r1, r25
    2288:	1a 06       	cpc	r1, r26
    228a:	1b 06       	cpc	r1, r27
    228c:	2c f7       	brge	.-54     	; 0x2258 <__vector_7+0xae>
    228e:	21 c0       	rjmp	.+66     	; 0x22d2 <__vector_7+0x128>
    2290:	9c 01       	movw	r18, r24
    2292:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2296:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    229a:	84 1b       	sub	r24, r20
    229c:	95 0b       	sbc	r25, r21
    229e:	01 97       	sbiw	r24, 0x01	; 1
    22a0:	31 f4       	brne	.+12     	; 0x22ae <__vector_7+0x104>
    22a2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    22a6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    22aa:	2f 5f       	subi	r18, 0xFF	; 255
    22ac:	3f 4f       	sbci	r19, 0xFF	; 255
    22ae:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    22b2:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    22b6:	ef e6       	ldi	r30, 0x6F	; 111
    22b8:	f0 e0       	ldi	r31, 0x00	; 0
    22ba:	80 81       	ld	r24, Z
    22bc:	82 60       	ori	r24, 0x02	; 2
    22be:	80 83       	st	Z, r24
    22c0:	05 c0       	rjmp	.+10     	; 0x22cc <__vector_7+0x122>
    22c2:	ef e6       	ldi	r30, 0x6F	; 111
    22c4:	f0 e0       	ldi	r31, 0x00	; 0
    22c6:	80 81       	ld	r24, Z
    22c8:	8d 7f       	andi	r24, 0xFD	; 253
    22ca:	80 83       	st	Z, r24
    22cc:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    22d0:	0c c0       	rjmp	.+24     	; 0x22ea <__vector_7+0x140>
    22d2:	82 81       	ldd	r24, Z+2	; 0x02
    22d4:	93 81       	ldd	r25, Z+3	; 0x03
    22d6:	a4 81       	ldd	r26, Z+4	; 0x04
    22d8:	b5 81       	ldd	r27, Z+5	; 0x05
    22da:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    22de:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    22e2:	2a 17       	cp	r18, r26
    22e4:	3b 07       	cpc	r19, r27
    22e6:	69 f7       	brne	.-38     	; 0x22c2 <__vector_7+0x118>
    22e8:	d3 cf       	rjmp	.-90     	; 0x2290 <__vector_7+0xe6>
    22ea:	ff 91       	pop	r31
    22ec:	ef 91       	pop	r30
    22ee:	bf 91       	pop	r27
    22f0:	af 91       	pop	r26
    22f2:	9f 91       	pop	r25
    22f4:	8f 91       	pop	r24
    22f6:	7f 91       	pop	r23
    22f8:	6f 91       	pop	r22
    22fa:	5f 91       	pop	r21
    22fc:	4f 91       	pop	r20
    22fe:	3f 91       	pop	r19
    2300:	2f 91       	pop	r18
    2302:	ff 90       	pop	r15
    2304:	ef 90       	pop	r14
    2306:	df 90       	pop	r13
    2308:	cf 90       	pop	r12
    230a:	0f 90       	pop	r0
    230c:	0f be       	out	0x3f, r0	; 63
    230e:	0f 90       	pop	r0
    2310:	1f 90       	pop	r1
    2312:	18 95       	reti

00002314 <async>:
    2314:	3f 92       	push	r3
    2316:	4f 92       	push	r4
    2318:	5f 92       	push	r5
    231a:	6f 92       	push	r6
    231c:	7f 92       	push	r7
    231e:	8f 92       	push	r8
    2320:	9f 92       	push	r9
    2322:	af 92       	push	r10
    2324:	bf 92       	push	r11
    2326:	cf 92       	push	r12
    2328:	df 92       	push	r13
    232a:	ef 92       	push	r14
    232c:	ff 92       	push	r15
    232e:	0f 93       	push	r16
    2330:	1f 93       	push	r17
    2332:	cf 93       	push	r28
    2334:	df 93       	push	r29
    2336:	2b 01       	movw	r4, r22
    2338:	3c 01       	movw	r6, r24
    233a:	49 01       	movw	r8, r18
    233c:	5a 01       	movw	r10, r20
    233e:	8f b7       	in	r24, 0x3f	; 63
    2340:	80 78       	andi	r24, 0x80	; 128
    2342:	38 2e       	mov	r3, r24
    2344:	f8 94       	cli
    2346:	88 e0       	ldi	r24, 0x08	; 8
    2348:	91 e0       	ldi	r25, 0x01	; 1
    234a:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <dequeue>
    234e:	ec 01       	movw	r28, r24
    2350:	1b 87       	std	Y+11, r17	; 0x0b
    2352:	0a 87       	std	Y+10, r16	; 0x0a
    2354:	fd 86       	std	Y+13, r15	; 0x0d
    2356:	ec 86       	std	Y+12, r14	; 0x0c
    2358:	df 86       	std	Y+15, r13	; 0x0f
    235a:	ce 86       	std	Y+14, r12	; 0x0e
    235c:	33 20       	and	r3, r3
    235e:	61 f0       	breq	.+24     	; 0x2378 <async+0x64>
    2360:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    2364:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    2368:	02 80       	ldd	r0, Z+2	; 0x02
    236a:	f3 81       	ldd	r31, Z+3	; 0x03
    236c:	e0 2d       	mov	r30, r0
    236e:	82 81       	ldd	r24, Z+2	; 0x02
    2370:	93 81       	ldd	r25, Z+3	; 0x03
    2372:	a4 81       	ldd	r26, Z+4	; 0x04
    2374:	b5 81       	ldd	r27, Z+5	; 0x05
    2376:	08 c0       	rjmp	.+16     	; 0x2388 <async+0x74>
    2378:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <timestamp>
    237c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <timestamp+0x1>
    2380:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <timestamp+0x2>
    2384:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <timestamp+0x3>
    2388:	48 0e       	add	r4, r24
    238a:	59 1e       	adc	r5, r25
    238c:	6a 1e       	adc	r6, r26
    238e:	7b 1e       	adc	r7, r27
    2390:	4a 82       	std	Y+2, r4	; 0x02
    2392:	5b 82       	std	Y+3, r5	; 0x03
    2394:	6c 82       	std	Y+4, r6	; 0x04
    2396:	7d 82       	std	Y+5, r7	; 0x05
    2398:	18 14       	cp	r1, r8
    239a:	19 04       	cpc	r1, r9
    239c:	1a 04       	cpc	r1, r10
    239e:	1b 04       	cpc	r1, r11
    23a0:	44 f0       	brlt	.+16     	; 0x23b2 <async+0x9e>
    23a2:	0f 2e       	mov	r0, r31
    23a4:	88 24       	eor	r8, r8
    23a6:	8a 94       	dec	r8
    23a8:	98 2c       	mov	r9, r8
    23aa:	a8 2c       	mov	r10, r8
    23ac:	ff e7       	ldi	r31, 0x7F	; 127
    23ae:	bf 2e       	mov	r11, r31
    23b0:	f0 2d       	mov	r31, r0
    23b2:	84 0c       	add	r8, r4
    23b4:	95 1c       	adc	r9, r5
    23b6:	a6 1c       	adc	r10, r6
    23b8:	b7 1c       	adc	r11, r7
    23ba:	8e 82       	std	Y+6, r8	; 0x06
    23bc:	9f 82       	std	Y+7, r9	; 0x07
    23be:	a8 86       	std	Y+8, r10	; 0x08
    23c0:	b9 86       	std	Y+9, r11	; 0x09
    23c2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    23c6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    23ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    23ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    23d2:	b0 99       	sbic	0x16, 0	; 22
    23d4:	0e c0       	rjmp	.+28     	; 0x23f2 <async+0xde>
    23d6:	09 2e       	mov	r0, r25
    23d8:	00 0c       	add	r0, r0
    23da:	aa 0b       	sbc	r26, r26
    23dc:	bb 0b       	sbc	r27, r27
    23de:	dc 01       	movw	r26, r24
    23e0:	99 27       	eor	r25, r25
    23e2:	88 27       	eor	r24, r24
    23e4:	60 e0       	ldi	r22, 0x00	; 0
    23e6:	70 e0       	ldi	r23, 0x00	; 0
    23e8:	84 2b       	or	r24, r20
    23ea:	95 2b       	or	r25, r21
    23ec:	a6 2b       	or	r26, r22
    23ee:	b7 2b       	or	r27, r23
    23f0:	13 c0       	rjmp	.+38     	; 0x2418 <async+0x104>
    23f2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    23f6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    23fa:	01 96       	adiw	r24, 0x01	; 1
    23fc:	09 2e       	mov	r0, r25
    23fe:	00 0c       	add	r0, r0
    2400:	aa 0b       	sbc	r26, r26
    2402:	bb 0b       	sbc	r27, r27
    2404:	dc 01       	movw	r26, r24
    2406:	99 27       	eor	r25, r25
    2408:	88 27       	eor	r24, r24
    240a:	a9 01       	movw	r20, r18
    240c:	60 e0       	ldi	r22, 0x00	; 0
    240e:	70 e0       	ldi	r23, 0x00	; 0
    2410:	84 2b       	or	r24, r20
    2412:	95 2b       	or	r25, r21
    2414:	a6 2b       	or	r26, r22
    2416:	b7 2b       	or	r27, r23
    2418:	48 1a       	sub	r4, r24
    241a:	59 0a       	sbc	r5, r25
    241c:	6a 0a       	sbc	r6, r26
    241e:	7b 0a       	sbc	r7, r27
    2420:	14 14       	cp	r1, r4
    2422:	15 04       	cpc	r1, r5
    2424:	16 04       	cpc	r1, r6
    2426:	17 04       	cpc	r1, r7
    2428:	ac f5       	brge	.+106    	; 0x2494 <async+0x180>
    242a:	60 e1       	ldi	r22, 0x10	; 16
    242c:	71 e0       	ldi	r23, 0x01	; 1
    242e:	ce 01       	movw	r24, r28
    2430:	0e 94 29 10 	call	0x2052	; 0x2052 <enqueueByBaseline>
    2434:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    2438:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    243c:	30 97       	sbiw	r30, 0x00	; 0
    243e:	21 f1       	breq	.+72     	; 0x2488 <async+0x174>
    2440:	82 81       	ldd	r24, Z+2	; 0x02
    2442:	93 81       	ldd	r25, Z+3	; 0x03
    2444:	a4 81       	ldd	r26, Z+4	; 0x04
    2446:	b5 81       	ldd	r27, Z+5	; 0x05
    2448:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    244c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    2450:	2a 17       	cp	r18, r26
    2452:	3b 07       	cpc	r19, r27
    2454:	c9 f4       	brne	.+50     	; 0x2488 <async+0x174>
    2456:	9c 01       	movw	r18, r24
    2458:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    245c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2460:	84 1b       	sub	r24, r20
    2462:	95 0b       	sbc	r25, r21
    2464:	01 97       	sbiw	r24, 0x01	; 1
    2466:	31 f4       	brne	.+12     	; 0x2474 <async+0x160>
    2468:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    246c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2470:	2f 5f       	subi	r18, 0xFF	; 255
    2472:	3f 4f       	sbci	r19, 0xFF	; 255
    2474:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    2478:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    247c:	ef e6       	ldi	r30, 0x6F	; 111
    247e:	f0 e0       	ldi	r31, 0x00	; 0
    2480:	80 81       	ld	r24, Z
    2482:	82 60       	ori	r24, 0x02	; 2
    2484:	80 83       	st	Z, r24
    2486:	41 c0       	rjmp	.+130    	; 0x250a <async+0x1f6>
    2488:	ef e6       	ldi	r30, 0x6F	; 111
    248a:	f0 e0       	ldi	r31, 0x00	; 0
    248c:	80 81       	ld	r24, Z
    248e:	8d 7f       	andi	r24, 0xFD	; 253
    2490:	80 83       	st	Z, r24
    2492:	3b c0       	rjmp	.+118    	; 0x250a <async+0x1f6>
    2494:	62 e1       	ldi	r22, 0x12	; 18
    2496:	71 e0       	ldi	r23, 0x01	; 1
    2498:	ce 01       	movw	r24, r28
    249a:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <enqueueByDeadline>
    249e:	33 20       	and	r3, r3
    24a0:	b9 f1       	breq	.+110    	; 0x2510 <async+0x1fc>
    24a2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    24a6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    24aa:	00 97       	sbiw	r24, 0x00	; 0
    24ac:	81 f1       	breq	.+96     	; 0x250e <async+0x1fa>
    24ae:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    24b2:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    24b6:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <msgQ>
    24ba:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <msgQ+0x1>
    24be:	02 81       	ldd	r16, Z+2	; 0x02
    24c0:	13 81       	ldd	r17, Z+3	; 0x03
    24c2:	d9 01       	movw	r26, r18
    24c4:	16 96       	adiw	r26, 0x06	; 6
    24c6:	4d 91       	ld	r20, X+
    24c8:	5d 91       	ld	r21, X+
    24ca:	6d 91       	ld	r22, X+
    24cc:	7c 91       	ld	r23, X
    24ce:	19 97       	sbiw	r26, 0x09	; 9
    24d0:	d8 01       	movw	r26, r16
    24d2:	16 96       	adiw	r26, 0x06	; 6
    24d4:	0d 91       	ld	r16, X+
    24d6:	1d 91       	ld	r17, X+
    24d8:	2d 91       	ld	r18, X+
    24da:	3c 91       	ld	r19, X
    24dc:	19 97       	sbiw	r26, 0x09	; 9
    24de:	40 1b       	sub	r20, r16
    24e0:	51 0b       	sbc	r21, r17
    24e2:	62 0b       	sbc	r22, r18
    24e4:	73 0b       	sbc	r23, r19
    24e6:	9a f4       	brpl	.+38     	; 0x250e <async+0x1fa>
    24e8:	dc 01       	movw	r26, r24
    24ea:	2d 91       	ld	r18, X+
    24ec:	3c 91       	ld	r19, X
    24ee:	11 97       	sbiw	r26, 0x01	; 1
    24f0:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
    24f4:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
    24f8:	ed 93       	st	X+, r30
    24fa:	fc 93       	st	X, r31
    24fc:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
    2500:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
    2504:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <dispatch>
    2508:	02 c0       	rjmp	.+4      	; 0x250e <async+0x1fa>
    250a:	33 20       	and	r3, r3
    250c:	09 f0       	breq	.+2      	; 0x2510 <async+0x1fc>
    250e:	78 94       	sei
    2510:	ce 01       	movw	r24, r28
    2512:	df 91       	pop	r29
    2514:	cf 91       	pop	r28
    2516:	1f 91       	pop	r17
    2518:	0f 91       	pop	r16
    251a:	ff 90       	pop	r15
    251c:	ef 90       	pop	r14
    251e:	df 90       	pop	r13
    2520:	cf 90       	pop	r12
    2522:	bf 90       	pop	r11
    2524:	af 90       	pop	r10
    2526:	9f 90       	pop	r9
    2528:	8f 90       	pop	r8
    252a:	7f 90       	pop	r7
    252c:	6f 90       	pop	r6
    252e:	5f 90       	pop	r5
    2530:	4f 90       	pop	r4
    2532:	3f 90       	pop	r3
    2534:	08 95       	ret

00002536 <sync>:
    2536:	cf 92       	push	r12
    2538:	df 92       	push	r13
    253a:	ef 92       	push	r14
    253c:	ff 92       	push	r15
    253e:	0f 93       	push	r16
    2540:	1f 93       	push	r17
    2542:	cf 93       	push	r28
    2544:	df 93       	push	r29
    2546:	ec 01       	movw	r28, r24
    2548:	7b 01       	movw	r14, r22
    254a:	6a 01       	movw	r12, r20
    254c:	1f b7       	in	r17, 0x3f	; 63
    254e:	10 78       	andi	r17, 0x80	; 128
    2550:	f8 94       	cli
    2552:	a8 81       	ld	r26, Y
    2554:	b9 81       	ldd	r27, Y+1	; 0x01
    2556:	10 97       	sbiw	r26, 0x00	; 0
    2558:	61 f1       	breq	.+88     	; 0x25b2 <sync+0x7c>
    255a:	14 96       	adiw	r26, 0x04	; 4
    255c:	ed 91       	ld	r30, X+
    255e:	fc 91       	ld	r31, X
    2560:	15 97       	sbiw	r26, 0x05	; 5
    2562:	30 97       	sbiw	r30, 0x00	; 0
    2564:	41 f0       	breq	.+16     	; 0x2576 <sync+0x40>
    2566:	a0 81       	ld	r26, Z
    2568:	b1 81       	ldd	r27, Z+1	; 0x01
    256a:	14 96       	adiw	r26, 0x04	; 4
    256c:	ed 91       	ld	r30, X+
    256e:	fc 91       	ld	r31, X
    2570:	15 97       	sbiw	r26, 0x05	; 5
    2572:	30 97       	sbiw	r30, 0x00	; 0
    2574:	c1 f7       	brne	.-16     	; 0x2566 <sync+0x30>
    2576:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    257a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    257e:	2a 17       	cp	r18, r26
    2580:	3b 07       	cpc	r19, r27
    2582:	21 f0       	breq	.+8      	; 0x258c <sync+0x56>
    2584:	11 23       	and	r17, r17
    2586:	09 f4       	brne	.+2      	; 0x258a <sync+0x54>
    2588:	3d c0       	rjmp	.+122    	; 0x2604 <sync+0xce>
    258a:	07 c0       	rjmp	.+14     	; 0x259a <sync+0x64>
    258c:	11 23       	and	r17, r17
    258e:	09 f4       	brne	.+2      	; 0x2592 <sync+0x5c>
    2590:	3c c0       	rjmp	.+120    	; 0x260a <sync+0xd4>
    2592:	78 94       	sei
    2594:	8f ef       	ldi	r24, 0xFF	; 255
    2596:	9f ef       	ldi	r25, 0xFF	; 255
    2598:	52 c0       	rjmp	.+164    	; 0x263e <sync+0x108>
    259a:	8a 81       	ldd	r24, Y+2	; 0x02
    259c:	9b 81       	ldd	r25, Y+3	; 0x03
    259e:	00 97       	sbiw	r24, 0x00	; 0
    25a0:	d1 f1       	breq	.+116    	; 0x2616 <sync+0xe0>
    25a2:	fc 01       	movw	r30, r24
    25a4:	15 82       	std	Z+5, r1	; 0x05
    25a6:	14 82       	std	Z+4, r1	; 0x04
    25a8:	36 c0       	rjmp	.+108    	; 0x2616 <sync+0xe0>
    25aa:	78 94       	sei
    25ac:	80 e0       	ldi	r24, 0x00	; 0
    25ae:	90 e0       	ldi	r25, 0x00	; 0
    25b0:	46 c0       	rjmp	.+140    	; 0x263e <sync+0x108>
    25b2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    25b6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    25ba:	99 83       	std	Y+1, r25	; 0x01
    25bc:	88 83       	st	Y, r24
    25be:	11 23       	and	r17, r17
    25c0:	29 f0       	breq	.+10     	; 0x25cc <sync+0x96>
    25c2:	8a 81       	ldd	r24, Y+2	; 0x02
    25c4:	9b 81       	ldd	r25, Y+3	; 0x03
    25c6:	01 97       	sbiw	r24, 0x01	; 1
    25c8:	09 f0       	breq	.+2      	; 0x25cc <sync+0x96>
    25ca:	78 94       	sei
    25cc:	b6 01       	movw	r22, r12
    25ce:	ce 01       	movw	r24, r28
    25d0:	f7 01       	movw	r30, r14
    25d2:	09 95       	icall
    25d4:	f8 2e       	mov	r15, r24
    25d6:	09 2f       	mov	r16, r25
    25d8:	8f b7       	in	r24, 0x3f	; 63
    25da:	f8 94       	cli
    25dc:	19 82       	std	Y+1, r1	; 0x01
    25de:	18 82       	st	Y, r1
    25e0:	8a 81       	ldd	r24, Y+2	; 0x02
    25e2:	9b 81       	ldd	r25, Y+3	; 0x03
    25e4:	82 30       	cpi	r24, 0x02	; 2
    25e6:	91 05       	cpc	r25, r1
    25e8:	38 f0       	brcs	.+14     	; 0x25f8 <sync+0xc2>
    25ea:	1b 82       	std	Y+3, r1	; 0x03
    25ec:	1a 82       	std	Y+2, r1	; 0x02
    25ee:	fc 01       	movw	r30, r24
    25f0:	15 82       	std	Z+5, r1	; 0x05
    25f2:	14 82       	std	Z+4, r1	; 0x04
    25f4:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <dispatch>
    25f8:	11 23       	and	r17, r17
    25fa:	51 f0       	breq	.+20     	; 0x2610 <sync+0xda>
    25fc:	78 94       	sei
    25fe:	8f 2d       	mov	r24, r15
    2600:	90 2f       	mov	r25, r16
    2602:	1d c0       	rjmp	.+58     	; 0x263e <sync+0x108>
    2604:	8f ef       	ldi	r24, 0xFF	; 255
    2606:	9f ef       	ldi	r25, 0xFF	; 255
    2608:	1a c0       	rjmp	.+52     	; 0x263e <sync+0x108>
    260a:	8f ef       	ldi	r24, 0xFF	; 255
    260c:	9f ef       	ldi	r25, 0xFF	; 255
    260e:	17 c0       	rjmp	.+46     	; 0x263e <sync+0x108>
    2610:	8f 2d       	mov	r24, r15
    2612:	90 2f       	mov	r25, r16
    2614:	14 c0       	rjmp	.+40     	; 0x263e <sync+0x108>
    2616:	3b 83       	std	Y+3, r19	; 0x03
    2618:	2a 83       	std	Y+2, r18	; 0x02
    261a:	f9 01       	movw	r30, r18
    261c:	d5 83       	std	Z+5, r29	; 0x05
    261e:	c4 83       	std	Z+4, r28	; 0x04
    2620:	cd 01       	movw	r24, r26
    2622:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <dispatch>
    2626:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    262a:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    262e:	82 81       	ldd	r24, Z+2	; 0x02
    2630:	93 81       	ldd	r25, Z+3	; 0x03
    2632:	89 2b       	or	r24, r25
    2634:	09 f4       	brne	.+2      	; 0x2638 <sync+0x102>
    2636:	b9 cf       	rjmp	.-142    	; 0x25aa <sync+0x74>
    2638:	f9 83       	std	Y+1, r31	; 0x01
    263a:	e8 83       	st	Y, r30
    263c:	c2 cf       	rjmp	.-124    	; 0x25c2 <sync+0x8c>
    263e:	df 91       	pop	r29
    2640:	cf 91       	pop	r28
    2642:	1f 91       	pop	r17
    2644:	0f 91       	pop	r16
    2646:	ff 90       	pop	r15
    2648:	ef 90       	pop	r14
    264a:	df 90       	pop	r13
    264c:	cf 90       	pop	r12
    264e:	08 95       	ret

00002650 <run>:
    2650:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    2654:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    2658:	82 e1       	ldi	r24, 0x12	; 18
    265a:	91 e0       	ldi	r25, 0x01	; 1
    265c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <dequeue>
    2660:	ec 01       	movw	r28, r24
    2662:	d8 01       	movw	r26, r16
    2664:	13 96       	adiw	r26, 0x03	; 3
    2666:	9c 93       	st	X, r25
    2668:	8e 93       	st	-X, r24
    266a:	12 97       	sbiw	r26, 0x02	; 2
    266c:	78 94       	sei
    266e:	4e 85       	ldd	r20, Y+14	; 0x0e
    2670:	5f 85       	ldd	r21, Y+15	; 0x0f
    2672:	6c 85       	ldd	r22, Y+12	; 0x0c
    2674:	7d 85       	ldd	r23, Y+13	; 0x0d
    2676:	8a 85       	ldd	r24, Y+10	; 0x0a
    2678:	9b 85       	ldd	r25, Y+11	; 0x0b
    267a:	0e 94 9b 12 	call	0x2536	; 0x2536 <sync>
    267e:	8f b7       	in	r24, 0x3f	; 63
    2680:	f8 94       	cli
    2682:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <msgPool>
    2686:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <msgPool+0x1>
    268a:	99 83       	std	Y+1, r25	; 0x01
    268c:	88 83       	st	Y, r24
    268e:	d0 93 09 01 	sts	0x0109, r29	; 0x800109 <msgPool+0x1>
    2692:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <msgPool>
    2696:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    269a:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    269e:	00 81       	ld	r16, Z
    26a0:	11 81       	ldd	r17, Z+1	; 0x01
    26a2:	e8 01       	movw	r28, r16
    26a4:	2a 81       	ldd	r18, Y+2	; 0x02
    26a6:	3b 81       	ldd	r19, Y+3	; 0x03
    26a8:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <msgQ>
    26ac:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <msgQ+0x1>
    26b0:	10 97       	sbiw	r26, 0x00	; 0
    26b2:	c1 f0       	breq	.+48     	; 0x26e4 <run+0x94>
    26b4:	21 15       	cp	r18, r1
    26b6:	31 05       	cpc	r19, r1
    26b8:	59 f2       	breq	.-106    	; 0x2650 <run>
    26ba:	16 96       	adiw	r26, 0x06	; 6
    26bc:	8d 91       	ld	r24, X+
    26be:	9d 91       	ld	r25, X+
    26c0:	0d 90       	ld	r0, X+
    26c2:	bc 91       	ld	r27, X
    26c4:	a0 2d       	mov	r26, r0
    26c6:	e9 01       	movw	r28, r18
    26c8:	4e 81       	ldd	r20, Y+6	; 0x06
    26ca:	5f 81       	ldd	r21, Y+7	; 0x07
    26cc:	68 85       	ldd	r22, Y+8	; 0x08
    26ce:	79 85       	ldd	r23, Y+9	; 0x09
    26d0:	84 1b       	sub	r24, r20
    26d2:	95 0b       	sbc	r25, r21
    26d4:	a6 0b       	sbc	r26, r22
    26d6:	b7 0b       	sbc	r27, r23
    26d8:	18 16       	cp	r1, r24
    26da:	19 06       	cpc	r1, r25
    26dc:	1a 06       	cpc	r1, r26
    26de:	1b 06       	cpc	r1, r27
    26e0:	0c f0       	brlt	.+2      	; 0x26e4 <run+0x94>
    26e2:	b6 cf       	rjmp	.-148    	; 0x2650 <run>
    26e4:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <activeStack+0x1>
    26e8:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <activeStack>
    26ec:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    26f0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    26f4:	91 83       	std	Z+1, r25	; 0x01
    26f6:	80 83       	st	Z, r24
    26f8:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <threadPool+0x1>
    26fc:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <threadPool>
    2700:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    2704:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    2708:	14 96       	adiw	r26, 0x04	; 4
    270a:	ed 91       	ld	r30, X+
    270c:	fc 91       	ld	r31, X
    270e:	15 97       	sbiw	r26, 0x05	; 5
    2710:	30 97       	sbiw	r30, 0x00	; 0
    2712:	41 f0       	breq	.+16     	; 0x2724 <run+0xd4>
    2714:	a0 81       	ld	r26, Z
    2716:	b1 81       	ldd	r27, Z+1	; 0x01
    2718:	14 96       	adiw	r26, 0x04	; 4
    271a:	ed 91       	ld	r30, X+
    271c:	fc 91       	ld	r31, X
    271e:	15 97       	sbiw	r26, 0x05	; 5
    2720:	30 97       	sbiw	r30, 0x00	; 0
    2722:	c1 f7       	brne	.-16     	; 0x2714 <run+0xc4>
    2724:	cd 01       	movw	r24, r26
    2726:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <dispatch>
    272a:	92 cf       	rjmp	.-220    	; 0x2650 <run>

0000272c <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    272c:	42 31       	cpi	r20, 0x12	; 18
    272e:	b8 f4       	brcc	.+46     	; 0x275e <install+0x32>
        char status;
        DISABLE(status);
    2730:	2f b7       	in	r18, 0x3f	; 63
    2732:	f8 94       	cli
        otable[i] = obj;
    2734:	50 e0       	ldi	r21, 0x00	; 0
    2736:	44 0f       	add	r20, r20
    2738:	55 1f       	adc	r21, r21
    273a:	fa 01       	movw	r30, r20
    273c:	ec 5e       	subi	r30, 0xEC	; 236
    273e:	fe 4f       	sbci	r31, 0xFE	; 254
    2740:	91 83       	std	Z+1, r25	; 0x01
    2742:	80 83       	st	Z, r24
        mtable[i] = m;
    2744:	fa 01       	movw	r30, r20
    2746:	e4 55       	subi	r30, 0x54	; 84
    2748:	fe 4f       	sbci	r31, 0xFE	; 254
    274a:	71 83       	std	Z+1, r23	; 0x01
    274c:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    274e:	41 e0       	ldi	r20, 0x01	; 1
    2750:	50 e0       	ldi	r21, 0x00	; 0
    2752:	fc 01       	movw	r30, r24
    2754:	53 83       	std	Z+3, r21	; 0x03
    2756:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2758:	22 23       	and	r18, r18
    275a:	0c f4       	brge	.+2      	; 0x275e <install+0x32>
    275c:	78 94       	sei
    275e:	08 95       	ret

00002760 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2760:	8c 01       	movw	r16, r24
    2762:	7b 01       	movw	r14, r22
    2764:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2766:	8f b7       	in	r24, 0x3f	; 63
    2768:	f8 94       	cli
    initialize();
    276a:	0e 94 88 07 	call	0xf10	; 0xf10 <initialize>
    ENABLE(1);
    276e:	78 94       	sei
    if (m != NULL)
    2770:	e1 14       	cp	r14, r1
    2772:	f1 04       	cpc	r15, r1
    2774:	41 f0       	breq	.+16     	; 0x2786 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2776:	20 e0       	ldi	r18, 0x00	; 0
    2778:	30 e0       	ldi	r19, 0x00	; 0
    277a:	a9 01       	movw	r20, r18
    277c:	60 e0       	ldi	r22, 0x00	; 0
    277e:	70 e0       	ldi	r23, 0x00	; 0
    2780:	cb 01       	movw	r24, r22
    2782:	0e 94 8a 11 	call	0x2314	; 0x2314 <async>
    DISABLE(status);
    2786:	8f b7       	in	r24, 0x3f	; 63
    2788:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    278a:	0e 94 13 08 	call	0x1026	; 0x1026 <schedule>
    ENABLE(1);
    278e:	78 94       	sei
    while (1) {
        SLEEP();
    2790:	81 e0       	ldi	r24, 0x01	; 1
    2792:	83 bf       	out	0x33, r24	; 51
    2794:	88 95       	sleep
    2796:	fd cf       	rjmp	.-6      	; 0x2792 <tinytimber+0x32>

00002798 <__divmodhi4>:
    2798:	97 fb       	bst	r25, 7
    279a:	07 2e       	mov	r0, r23
    279c:	16 f4       	brtc	.+4      	; 0x27a2 <__divmodhi4+0xa>
    279e:	00 94       	com	r0
    27a0:	07 d0       	rcall	.+14     	; 0x27b0 <__divmodhi4_neg1>
    27a2:	77 fd       	sbrc	r23, 7
    27a4:	09 d0       	rcall	.+18     	; 0x27b8 <__divmodhi4_neg2>
    27a6:	0e 94 e6 13 	call	0x27cc	; 0x27cc <__udivmodhi4>
    27aa:	07 fc       	sbrc	r0, 7
    27ac:	05 d0       	rcall	.+10     	; 0x27b8 <__divmodhi4_neg2>
    27ae:	3e f4       	brtc	.+14     	; 0x27be <__divmodhi4_exit>

000027b0 <__divmodhi4_neg1>:
    27b0:	90 95       	com	r25
    27b2:	81 95       	neg	r24
    27b4:	9f 4f       	sbci	r25, 0xFF	; 255
    27b6:	08 95       	ret

000027b8 <__divmodhi4_neg2>:
    27b8:	70 95       	com	r23
    27ba:	61 95       	neg	r22
    27bc:	7f 4f       	sbci	r23, 0xFF	; 255

000027be <__divmodhi4_exit>:
    27be:	08 95       	ret

000027c0 <__tablejump2__>:
    27c0:	ee 0f       	add	r30, r30
    27c2:	ff 1f       	adc	r31, r31
    27c4:	05 90       	lpm	r0, Z+
    27c6:	f4 91       	lpm	r31, Z
    27c8:	e0 2d       	mov	r30, r0
    27ca:	09 94       	ijmp

000027cc <__udivmodhi4>:
    27cc:	aa 1b       	sub	r26, r26
    27ce:	bb 1b       	sub	r27, r27
    27d0:	51 e1       	ldi	r21, 0x11	; 17
    27d2:	07 c0       	rjmp	.+14     	; 0x27e2 <__udivmodhi4_ep>

000027d4 <__udivmodhi4_loop>:
    27d4:	aa 1f       	adc	r26, r26
    27d6:	bb 1f       	adc	r27, r27
    27d8:	a6 17       	cp	r26, r22
    27da:	b7 07       	cpc	r27, r23
    27dc:	10 f0       	brcs	.+4      	; 0x27e2 <__udivmodhi4_ep>
    27de:	a6 1b       	sub	r26, r22
    27e0:	b7 0b       	sbc	r27, r23

000027e2 <__udivmodhi4_ep>:
    27e2:	88 1f       	adc	r24, r24
    27e4:	99 1f       	adc	r25, r25
    27e6:	5a 95       	dec	r21
    27e8:	a9 f7       	brne	.-22     	; 0x27d4 <__udivmodhi4_loop>
    27ea:	80 95       	com	r24
    27ec:	90 95       	com	r25
    27ee:	bc 01       	movw	r22, r24
    27f0:	cd 01       	movw	r24, r26
    27f2:	08 95       	ret

000027f4 <setjmp>:
    27f4:	dc 01       	movw	r26, r24
    27f6:	2d 92       	st	X+, r2
    27f8:	3d 92       	st	X+, r3
    27fa:	4d 92       	st	X+, r4
    27fc:	5d 92       	st	X+, r5
    27fe:	6d 92       	st	X+, r6
    2800:	7d 92       	st	X+, r7
    2802:	8d 92       	st	X+, r8
    2804:	9d 92       	st	X+, r9
    2806:	ad 92       	st	X+, r10
    2808:	bd 92       	st	X+, r11
    280a:	cd 92       	st	X+, r12
    280c:	dd 92       	st	X+, r13
    280e:	ed 92       	st	X+, r14
    2810:	fd 92       	st	X+, r15
    2812:	0d 93       	st	X+, r16
    2814:	1d 93       	st	X+, r17
    2816:	cd 93       	st	X+, r28
    2818:	dd 93       	st	X+, r29
    281a:	ff 91       	pop	r31
    281c:	ef 91       	pop	r30
    281e:	8d b7       	in	r24, 0x3d	; 61
    2820:	8d 93       	st	X+, r24
    2822:	8e b7       	in	r24, 0x3e	; 62
    2824:	8d 93       	st	X+, r24
    2826:	8f b7       	in	r24, 0x3f	; 63
    2828:	8d 93       	st	X+, r24
    282a:	ed 93       	st	X+, r30
    282c:	fd 93       	st	X+, r31
    282e:	88 27       	eor	r24, r24
    2830:	99 27       	eor	r25, r25
    2832:	09 94       	ijmp

00002834 <longjmp>:
    2834:	dc 01       	movw	r26, r24
    2836:	cb 01       	movw	r24, r22
    2838:	81 30       	cpi	r24, 0x01	; 1
    283a:	91 05       	cpc	r25, r1
    283c:	81 1d       	adc	r24, r1
    283e:	2d 90       	ld	r2, X+
    2840:	3d 90       	ld	r3, X+
    2842:	4d 90       	ld	r4, X+
    2844:	5d 90       	ld	r5, X+
    2846:	6d 90       	ld	r6, X+
    2848:	7d 90       	ld	r7, X+
    284a:	8d 90       	ld	r8, X+
    284c:	9d 90       	ld	r9, X+
    284e:	ad 90       	ld	r10, X+
    2850:	bd 90       	ld	r11, X+
    2852:	cd 90       	ld	r12, X+
    2854:	dd 90       	ld	r13, X+
    2856:	ed 90       	ld	r14, X+
    2858:	fd 90       	ld	r15, X+
    285a:	0d 91       	ld	r16, X+
    285c:	1d 91       	ld	r17, X+
    285e:	cd 91       	ld	r28, X+
    2860:	dd 91       	ld	r29, X+
    2862:	ed 91       	ld	r30, X+
    2864:	fd 91       	ld	r31, X+
    2866:	0d 90       	ld	r0, X+
    2868:	f8 94       	cli
    286a:	fe bf       	out	0x3e, r31	; 62
    286c:	0f be       	out	0x3f, r0	; 63
    286e:	ed bf       	out	0x3d, r30	; 61
    2870:	ed 91       	ld	r30, X+
    2872:	fd 91       	ld	r31, X+
    2874:	09 94       	ijmp

00002876 <_exit>:
    2876:	f8 94       	cli

00002878 <__stop_program>:
    2878:	ff cf       	rjmp	.-2      	; 0x2878 <__stop_program>
