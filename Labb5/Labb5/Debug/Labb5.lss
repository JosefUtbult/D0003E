
Labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00002692  00002726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000355  0080010a  0080010a  00002730  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002730  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002760  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  000027a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034d8  00000000  00000000  00002a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010d1  00000000  00000000  00005ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001871  00000000  00000000  00006fb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c98  00000000  00000000  0000882c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009dc  00000000  00000000  000094c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003c48  00000000  00000000  00009ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0000dae8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
       4:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__vector_1>
       8:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__vector_2>
       c:	0c 94 5a 08 	jmp	0x10b4	; 0x10b4 <__vector_3>
      10:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__vector_4>
      14:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__vector_5>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__vector_7>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <__vector_9>
      28:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__vector_10>
      2c:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__vector_11>
      30:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__vector_12>
      34:	0c 94 e2 0a 	jmp	0x15c4	; 0x15c4 <__vector_13>
      38:	0c 94 4e 0b 	jmp	0x169c	; 0x169c <__vector_14>
      3c:	0c 94 ba 0b 	jmp	0x1774	; 0x1774 <__vector_15>
      40:	0c 94 26 0c 	jmp	0x184c	; 0x184c <__vector_16>
      44:	0c 94 92 0c 	jmp	0x1924	; 0x1924 <__vector_17>
      48:	0c 94 fe 0c 	jmp	0x19fc	; 0x19fc <__vector_18>
      4c:	0c 94 6a 0d 	jmp	0x1ad4	; 0x1ad4 <__vector_19>
      50:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__vector_20>
      54:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__vector_21>
      58:	0c 94 ae 0e 	jmp	0x1d5c	; 0x1d5c <__vector_22>
      5c:	92 02       	muls	r25, r18
      5e:	9e 02       	muls	r25, r30
      60:	aa 02       	muls	r26, r26
      62:	b6 02       	muls	r27, r22
      64:	c2 02       	muls	r28, r18
      66:	ce 02       	muls	r28, r30
      68:	da 02       	muls	r29, r26
      6a:	e6 02       	muls	r30, r22
      6c:	f2 02       	muls	r31, r18
      6e:	fe 02       	muls	r31, r30
      70:	42 04       	cpc	r4, r2
      72:	42 04       	cpc	r4, r2
      74:	42 04       	cpc	r4, r2
      76:	42 04       	cpc	r4, r2
      78:	42 04       	cpc	r4, r2
      7a:	42 04       	cpc	r4, r2
      7c:	42 04       	cpc	r4, r2
      7e:	0a 03       	fmul	r16, r18
      80:	16 03       	mulsu	r17, r22
      82:	22 03       	mulsu	r18, r18
      84:	2e 03       	fmul	r18, r22
      86:	3a 03       	fmul	r19, r18
      88:	46 03       	mulsu	r20, r22
      8a:	52 03       	mulsu	r21, r18
      8c:	5e 03       	fmul	r21, r22
      8e:	6a 03       	fmul	r22, r18
      90:	76 03       	mulsu	r23, r22
      92:	82 03       	fmuls	r16, r18
      94:	8e 03       	fmulsu	r16, r22
      96:	9a 03       	fmulsu	r17, r18
      98:	a6 03       	fmuls	r18, r22
      9a:	b2 03       	fmuls	r19, r18
      9c:	be 03       	fmulsu	r19, r22
      9e:	ca 03       	fmulsu	r20, r18
      a0:	d6 03       	fmuls	r21, r22
      a2:	e2 03       	fmuls	r22, r18
      a4:	ee 03       	fmulsu	r22, r22
      a6:	fa 03       	fmulsu	r23, r18
      a8:	06 04       	cpc	r0, r6
      aa:	12 04       	cpc	r1, r2
      ac:	1e 04       	cpc	r1, r14
      ae:	2a 04       	cpc	r2, r10
      b0:	36 04       	cpc	r3, r6

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d4 e0       	ldi	r29, 0x04	; 4
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	e2 e9       	ldi	r30, 0x92	; 146
      c6:	f6 e2       	ldi	r31, 0x26	; 38
      c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x10>
      ca:	05 90       	lpm	r0, Z+
      cc:	0d 92       	st	X+, r0
      ce:	aa 30       	cpi	r26, 0x0A	; 10
      d0:	b1 07       	cpc	r27, r17
      d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0xc>

000000d4 <__do_clear_bss>:
      d4:	24 e0       	ldi	r18, 0x04	; 4
      d6:	aa e0       	ldi	r26, 0x0A	; 10
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
      dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
      de:	af 35       	cpi	r26, 0x5F	; 95
      e0:	b2 07       	cpc	r27, r18
      e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
      e4:	0e 94 5f 05 	call	0xabe	; 0xabe <main>
      e8:	0c 94 47 13 	jmp	0x268e	; 0x268e <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <LCDWritePackage>:
	LCDDR13 = 0x00;
	
	LCDDR15 = 0x00;
	LCDDR16 = 0x00;
	LCDDR17 = 0x00;
	LCDDR18 = 0x00;
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	99 23       	and	r25, r25
      fe:	0c f4       	brge	.+2      	; 0x102 <LCDWritePackage+0x12>
     100:	f7 c1       	rjmp	.+1006   	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     102:	82 30       	cpi	r24, 0x02	; 2
     104:	91 05       	cpc	r25, r1
     106:	8c f4       	brge	.+34     	; 0x12a <LCDWritePackage+0x3a>
     108:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     10c:	01 97       	sbiw	r24, 0x01	; 1
     10e:	09 f0       	breq	.+2      	; 0x112 <LCDWritePackage+0x22>
     110:	9b c0       	rjmp	.+310    	; 0x248 <LCDWritePackage+0x158>
     112:	48 c0       	rjmp	.+144    	; 0x1a4 <LCDWritePackage+0xb4>
     114:	04 c0       	rjmp	.+8      	; 0x11e <LCDWritePackage+0x2e>
     116:	00 0f       	add	r16, r16
     118:	11 1f       	adc	r17, r17
     11a:	22 1f       	adc	r18, r18
     11c:	33 1f       	adc	r19, r19
     11e:	9a 95       	dec	r25
     120:	d2 f7       	brpl	.-12     	; 0x116 <LCDWritePackage+0x26>
     122:	08 2b       	or	r16, r24
     124:	00 93 fb 00 	sts	0x00FB, r16	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     128:	e3 c1       	rjmp	.+966    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     12a:	84 30       	cpi	r24, 0x04	; 4
     12c:	91 05       	cpc	r25, r1
     12e:	8c f4       	brge	.+34     	; 0x152 <LCDWritePackage+0x62>
     130:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     134:	03 97       	sbiw	r24, 0x03	; 3
     136:	09 f0       	breq	.+2      	; 0x13a <LCDWritePackage+0x4a>
     138:	9f c0       	rjmp	.+318    	; 0x278 <LCDWritePackage+0x188>
     13a:	b6 c0       	rjmp	.+364    	; 0x2a8 <LCDWritePackage+0x1b8>
     13c:	04 c0       	rjmp	.+8      	; 0x146 <LCDWritePackage+0x56>
     13e:	00 0f       	add	r16, r16
     140:	11 1f       	adc	r17, r17
     142:	22 1f       	adc	r18, r18
     144:	33 1f       	adc	r19, r19
     146:	9a 95       	dec	r25
     148:	d2 f7       	brpl	.-12     	; 0x13e <LCDWritePackage+0x4e>
     14a:	08 2b       	or	r16, r24
     14c:	00 93 fc 00 	sts	0x00FC, r16	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     150:	cf c1       	rjmp	.+926    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     152:	86 30       	cpi	r24, 0x06	; 6
     154:	91 05       	cpc	r25, r1
     156:	8c f4       	brge	.+34     	; 0x17a <LCDWritePackage+0x8a>
     158:	e0 91 ee 00 	lds	r30, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     15c:	05 97       	sbiw	r24, 0x05	; 5
     15e:	09 f0       	breq	.+2      	; 0x162 <LCDWritePackage+0x72>
     160:	f5 c0       	rjmp	.+490    	; 0x34c <LCDWritePackage+0x25c>
     162:	0c c1       	rjmp	.+536    	; 0x37c <LCDWritePackage+0x28c>
     164:	04 c0       	rjmp	.+8      	; 0x16e <LCDWritePackage+0x7e>
     166:	00 0f       	add	r16, r16
     168:	11 1f       	adc	r17, r17
     16a:	22 1f       	adc	r18, r18
     16c:	33 1f       	adc	r19, r19
     16e:	9a 95       	dec	r25
     170:	d2 f7       	brpl	.-12     	; 0x166 <LCDWritePackage+0x76>
     172:	08 2b       	or	r16, r24
     174:	00 93 fd 00 	sts	0x00FD, r16	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     178:	bb c1       	rjmp	.+886    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     17a:	88 30       	cpi	r24, 0x08	; 8
     17c:	91 05       	cpc	r25, r1
     17e:	0c f0       	brlt	.+2      	; 0x182 <LCDWritePackage+0x92>
     180:	b7 c1       	rjmp	.+878    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     182:	e0 91 ef 00 	lds	r30, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     186:	07 97       	sbiw	r24, 0x07	; 7
     188:	09 f0       	breq	.+2      	; 0x18c <LCDWritePackage+0x9c>
     18a:	4a c1       	rjmp	.+660    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     18c:	61 c1       	rjmp	.+706    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     18e:	04 c0       	rjmp	.+8      	; 0x198 <LCDWritePackage+0xa8>
     190:	00 0f       	add	r16, r16
     192:	11 1f       	adc	r17, r17
     194:	22 1f       	adc	r18, r18
     196:	33 1f       	adc	r19, r19
     198:	9a 95       	dec	r25
     19a:	d2 f7       	brpl	.-12     	; 0x190 <LCDWritePackage+0xa0>
     19c:	08 2b       	or	r16, r24
     19e:	00 93 fe 00 	sts	0x00FE, r16	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     1a2:	a6 c1       	rjmp	.+844    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     1a4:	9e 2f       	mov	r25, r30
     1a6:	9f 70       	andi	r25, 0x0F	; 15
     1a8:	6b 01       	movw	r12, r22
     1aa:	e1 2c       	mov	r14, r1
     1ac:	f1 2c       	mov	r15, r1
     1ae:	cc 0c       	add	r12, r12
     1b0:	dd 1c       	adc	r13, r13
     1b2:	ee 1c       	adc	r14, r14
     1b4:	ff 1c       	adc	r15, r15
     1b6:	cc 0c       	add	r12, r12
     1b8:	dd 1c       	adc	r13, r13
     1ba:	ee 1c       	adc	r14, r14
     1bc:	ff 1c       	adc	r15, r15
     1be:	cc 0c       	add	r12, r12
     1c0:	dd 1c       	adc	r13, r13
     1c2:	ee 1c       	adc	r14, r14
     1c4:	ff 1c       	adc	r15, r15
     1c6:	cc 0c       	add	r12, r12
     1c8:	dd 1c       	adc	r13, r13
     1ca:	ee 1c       	adc	r14, r14
     1cc:	ff 1c       	adc	r15, r15
     1ce:	e9 2f       	mov	r30, r25
     1d0:	ec 29       	or	r30, r12
     1d2:	e0 93 ec 00 	sts	0x00EC, r30	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     1d6:	e1 ef       	ldi	r30, 0xF1	; 241
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	8f 70       	andi	r24, 0x0F	; 15
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	70 e0       	ldi	r23, 0x00	; 0
     1e2:	44 0f       	add	r20, r20
     1e4:	55 1f       	adc	r21, r21
     1e6:	66 1f       	adc	r22, r22
     1e8:	77 1f       	adc	r23, r23
     1ea:	44 0f       	add	r20, r20
     1ec:	55 1f       	adc	r21, r21
     1ee:	66 1f       	adc	r22, r22
     1f0:	77 1f       	adc	r23, r23
     1f2:	44 0f       	add	r20, r20
     1f4:	55 1f       	adc	r21, r21
     1f6:	66 1f       	adc	r22, r22
     1f8:	77 1f       	adc	r23, r23
     1fa:	44 0f       	add	r20, r20
     1fc:	55 1f       	adc	r21, r21
     1fe:	66 1f       	adc	r22, r22
     200:	77 1f       	adc	r23, r23
     202:	48 2b       	or	r20, r24
     204:	40 83       	st	Z, r20
     206:	e6 ef       	ldi	r30, 0xF6	; 246
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	48 2f       	mov	r20, r24
     20e:	4f 70       	andi	r20, 0x0F	; 15
     210:	c9 01       	movw	r24, r18
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b0 e0       	ldi	r27, 0x00	; 0
     216:	88 0f       	add	r24, r24
     218:	99 1f       	adc	r25, r25
     21a:	aa 1f       	adc	r26, r26
     21c:	bb 1f       	adc	r27, r27
     21e:	88 0f       	add	r24, r24
     220:	99 1f       	adc	r25, r25
     222:	aa 1f       	adc	r26, r26
     224:	bb 1f       	adc	r27, r27
     226:	88 0f       	add	r24, r24
     228:	99 1f       	adc	r25, r25
     22a:	aa 1f       	adc	r26, r26
     22c:	bb 1f       	adc	r27, r27
     22e:	88 0f       	add	r24, r24
     230:	99 1f       	adc	r25, r25
     232:	aa 1f       	adc	r26, r26
     234:	bb 1f       	adc	r27, r27
     236:	84 2b       	or	r24, r20
     238:	80 83       	st	Z, r24
     23a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     23e:	8f 70       	andi	r24, 0x0F	; 15
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	94 e0       	ldi	r25, 0x04	; 4
     246:	66 cf       	rjmp	.-308    	; 0x114 <LCDWritePackage+0x24>
     248:	8e 2f       	mov	r24, r30
     24a:	80 7f       	andi	r24, 0xF0	; 240
     24c:	86 2b       	or	r24, r22
     24e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     252:	e1 ef       	ldi	r30, 0xF1	; 241
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	80 7f       	andi	r24, 0xF0	; 240
     25a:	48 2b       	or	r20, r24
     25c:	40 83       	st	Z, r20
     25e:	e6 ef       	ldi	r30, 0xF6	; 246
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	80 7f       	andi	r24, 0xF0	; 240
     266:	82 2b       	or	r24, r18
     268:	80 83       	st	Z, r24
     26a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     26e:	80 7f       	andi	r24, 0xF0	; 240
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	4e cf       	rjmp	.-356    	; 0x114 <LCDWritePackage+0x24>
     278:	8e 2f       	mov	r24, r30
     27a:	80 7f       	andi	r24, 0xF0	; 240
     27c:	86 2b       	or	r24, r22
     27e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     282:	e2 ef       	ldi	r30, 0xF2	; 242
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	80 7f       	andi	r24, 0xF0	; 240
     28a:	48 2b       	or	r20, r24
     28c:	40 83       	st	Z, r20
     28e:	e7 ef       	ldi	r30, 0xF7	; 247
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	80 7f       	andi	r24, 0xF0	; 240
     296:	82 2b       	or	r24, r18
     298:	80 83       	st	Z, r24
     29a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     29e:	80 7f       	andi	r24, 0xF0	; 240
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	4a cf       	rjmp	.-364    	; 0x13c <LCDWritePackage+0x4c>
     2a8:	9e 2f       	mov	r25, r30
     2aa:	9f 70       	andi	r25, 0x0F	; 15
     2ac:	6b 01       	movw	r12, r22
     2ae:	e1 2c       	mov	r14, r1
     2b0:	f1 2c       	mov	r15, r1
     2b2:	cc 0c       	add	r12, r12
     2b4:	dd 1c       	adc	r13, r13
     2b6:	ee 1c       	adc	r14, r14
     2b8:	ff 1c       	adc	r15, r15
     2ba:	cc 0c       	add	r12, r12
     2bc:	dd 1c       	adc	r13, r13
     2be:	ee 1c       	adc	r14, r14
     2c0:	ff 1c       	adc	r15, r15
     2c2:	cc 0c       	add	r12, r12
     2c4:	dd 1c       	adc	r13, r13
     2c6:	ee 1c       	adc	r14, r14
     2c8:	ff 1c       	adc	r15, r15
     2ca:	cc 0c       	add	r12, r12
     2cc:	dd 1c       	adc	r13, r13
     2ce:	ee 1c       	adc	r14, r14
     2d0:	ff 1c       	adc	r15, r15
     2d2:	e9 2f       	mov	r30, r25
     2d4:	ec 29       	or	r30, r12
     2d6:	e0 93 ed 00 	sts	0x00ED, r30	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     2da:	e2 ef       	ldi	r30, 0xF2	; 242
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	8f 70       	andi	r24, 0x0F	; 15
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	44 0f       	add	r20, r20
     2e8:	55 1f       	adc	r21, r21
     2ea:	66 1f       	adc	r22, r22
     2ec:	77 1f       	adc	r23, r23
     2ee:	44 0f       	add	r20, r20
     2f0:	55 1f       	adc	r21, r21
     2f2:	66 1f       	adc	r22, r22
     2f4:	77 1f       	adc	r23, r23
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	44 0f       	add	r20, r20
     300:	55 1f       	adc	r21, r21
     302:	66 1f       	adc	r22, r22
     304:	77 1f       	adc	r23, r23
     306:	48 2b       	or	r20, r24
     308:	40 83       	st	Z, r20
     30a:	e7 ef       	ldi	r30, 0xF7	; 247
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	48 2f       	mov	r20, r24
     312:	4f 70       	andi	r20, 0x0F	; 15
     314:	c9 01       	movw	r24, r18
     316:	a0 e0       	ldi	r26, 0x00	; 0
     318:	b0 e0       	ldi	r27, 0x00	; 0
     31a:	88 0f       	add	r24, r24
     31c:	99 1f       	adc	r25, r25
     31e:	aa 1f       	adc	r26, r26
     320:	bb 1f       	adc	r27, r27
     322:	88 0f       	add	r24, r24
     324:	99 1f       	adc	r25, r25
     326:	aa 1f       	adc	r26, r26
     328:	bb 1f       	adc	r27, r27
     32a:	88 0f       	add	r24, r24
     32c:	99 1f       	adc	r25, r25
     32e:	aa 1f       	adc	r26, r26
     330:	bb 1f       	adc	r27, r27
     332:	88 0f       	add	r24, r24
     334:	99 1f       	adc	r25, r25
     336:	aa 1f       	adc	r26, r26
     338:	bb 1f       	adc	r27, r27
     33a:	84 2b       	or	r24, r20
     33c:	80 83       	st	Z, r24
     33e:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     342:	8f 70       	andi	r24, 0x0F	; 15
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	94 e0       	ldi	r25, 0x04	; 4
     34a:	f8 ce       	rjmp	.-528    	; 0x13c <LCDWritePackage+0x4c>
     34c:	8e 2f       	mov	r24, r30
     34e:	80 7f       	andi	r24, 0xF0	; 240
     350:	86 2b       	or	r24, r22
     352:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     356:	e3 ef       	ldi	r30, 0xF3	; 243
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	80 81       	ld	r24, Z
     35c:	80 7f       	andi	r24, 0xF0	; 240
     35e:	48 2b       	or	r20, r24
     360:	40 83       	st	Z, r20
     362:	e8 ef       	ldi	r30, 0xF8	; 248
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 7f       	andi	r24, 0xF0	; 240
     36a:	82 2b       	or	r24, r18
     36c:	80 83       	st	Z, r24
     36e:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     372:	80 7f       	andi	r24, 0xF0	; 240
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	f4 ce       	rjmp	.-536    	; 0x164 <LCDWritePackage+0x74>
     37c:	6b 01       	movw	r12, r22
     37e:	e1 2c       	mov	r14, r1
     380:	f1 2c       	mov	r15, r1
     382:	cc 0c       	add	r12, r12
     384:	dd 1c       	adc	r13, r13
     386:	ee 1c       	adc	r14, r14
     388:	ff 1c       	adc	r15, r15
     38a:	cc 0c       	add	r12, r12
     38c:	dd 1c       	adc	r13, r13
     38e:	ee 1c       	adc	r14, r14
     390:	ff 1c       	adc	r15, r15
     392:	cc 0c       	add	r12, r12
     394:	dd 1c       	adc	r13, r13
     396:	ee 1c       	adc	r14, r14
     398:	ff 1c       	adc	r15, r15
     39a:	cc 0c       	add	r12, r12
     39c:	dd 1c       	adc	r13, r13
     39e:	ee 1c       	adc	r14, r14
     3a0:	ff 1c       	adc	r15, r15
     3a2:	9e 2f       	mov	r25, r30
     3a4:	9f 70       	andi	r25, 0x0F	; 15
     3a6:	e9 2f       	mov	r30, r25
     3a8:	ec 29       	or	r30, r12
     3aa:	e0 93 ee 00 	sts	0x00EE, r30	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     3ae:	e3 ef       	ldi	r30, 0xF3	; 243
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	80 81       	ld	r24, Z
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	44 0f       	add	r20, r20
     3ba:	55 1f       	adc	r21, r21
     3bc:	66 1f       	adc	r22, r22
     3be:	77 1f       	adc	r23, r23
     3c0:	44 0f       	add	r20, r20
     3c2:	55 1f       	adc	r21, r21
     3c4:	66 1f       	adc	r22, r22
     3c6:	77 1f       	adc	r23, r23
     3c8:	44 0f       	add	r20, r20
     3ca:	55 1f       	adc	r21, r21
     3cc:	66 1f       	adc	r22, r22
     3ce:	77 1f       	adc	r23, r23
     3d0:	44 0f       	add	r20, r20
     3d2:	55 1f       	adc	r21, r21
     3d4:	66 1f       	adc	r22, r22
     3d6:	77 1f       	adc	r23, r23
     3d8:	8f 70       	andi	r24, 0x0F	; 15
     3da:	48 2b       	or	r20, r24
     3dc:	40 83       	st	Z, r20
     3de:	e8 ef       	ldi	r30, 0xF8	; 248
     3e0:	f0 e0       	ldi	r31, 0x00	; 0
     3e2:	40 81       	ld	r20, Z
     3e4:	c9 01       	movw	r24, r18
     3e6:	a0 e0       	ldi	r26, 0x00	; 0
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	aa 1f       	adc	r26, r26
     3f0:	bb 1f       	adc	r27, r27
     3f2:	88 0f       	add	r24, r24
     3f4:	99 1f       	adc	r25, r25
     3f6:	aa 1f       	adc	r26, r26
     3f8:	bb 1f       	adc	r27, r27
     3fa:	88 0f       	add	r24, r24
     3fc:	99 1f       	adc	r25, r25
     3fe:	aa 1f       	adc	r26, r26
     400:	bb 1f       	adc	r27, r27
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	aa 1f       	adc	r26, r26
     408:	bb 1f       	adc	r27, r27
     40a:	24 2f       	mov	r18, r20
     40c:	2f 70       	andi	r18, 0x0F	; 15
     40e:	82 2b       	or	r24, r18
     410:	80 83       	st	Z, r24
     412:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     416:	8f 70       	andi	r24, 0x0F	; 15
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	94 e0       	ldi	r25, 0x04	; 4
     41e:	a2 ce       	rjmp	.-700    	; 0x164 <LCDWritePackage+0x74>
     420:	8e 2f       	mov	r24, r30
     422:	80 7f       	andi	r24, 0xF0	; 240
     424:	86 2b       	or	r24, r22
     426:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     42a:	e3 ef       	ldi	r30, 0xF3	; 243
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	80 81       	ld	r24, Z
     430:	80 7f       	andi	r24, 0xF0	; 240
     432:	48 2b       	or	r20, r24
     434:	40 83       	st	Z, r20
     436:	e9 ef       	ldi	r30, 0xF9	; 249
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	80 7f       	andi	r24, 0xF0	; 240
     43e:	82 2b       	or	r24, r18
     440:	80 83       	st	Z, r24
     442:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     446:	80 7f       	andi	r24, 0xF0	; 240
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	9f ce       	rjmp	.-706    	; 0x18e <LCDWritePackage+0x9e>
     450:	cb 01       	movw	r24, r22
     452:	a0 e0       	ldi	r26, 0x00	; 0
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	aa 1f       	adc	r26, r26
     45c:	bb 1f       	adc	r27, r27
     45e:	88 0f       	add	r24, r24
     460:	99 1f       	adc	r25, r25
     462:	aa 1f       	adc	r26, r26
     464:	bb 1f       	adc	r27, r27
     466:	88 0f       	add	r24, r24
     468:	99 1f       	adc	r25, r25
     46a:	aa 1f       	adc	r26, r26
     46c:	bb 1f       	adc	r27, r27
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	aa 1f       	adc	r26, r26
     474:	bb 1f       	adc	r27, r27
     476:	ef 70       	andi	r30, 0x0F	; 15
     478:	8e 2b       	or	r24, r30
     47a:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     47e:	e3 ef       	ldi	r30, 0xF3	; 243
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	70 e0       	ldi	r23, 0x00	; 0
     488:	44 0f       	add	r20, r20
     48a:	55 1f       	adc	r21, r21
     48c:	66 1f       	adc	r22, r22
     48e:	77 1f       	adc	r23, r23
     490:	44 0f       	add	r20, r20
     492:	55 1f       	adc	r21, r21
     494:	66 1f       	adc	r22, r22
     496:	77 1f       	adc	r23, r23
     498:	44 0f       	add	r20, r20
     49a:	55 1f       	adc	r21, r21
     49c:	66 1f       	adc	r22, r22
     49e:	77 1f       	adc	r23, r23
     4a0:	44 0f       	add	r20, r20
     4a2:	55 1f       	adc	r21, r21
     4a4:	66 1f       	adc	r22, r22
     4a6:	77 1f       	adc	r23, r23
     4a8:	8f 70       	andi	r24, 0x0F	; 15
     4aa:	48 2b       	or	r20, r24
     4ac:	40 83       	st	Z, r20
     4ae:	e9 ef       	ldi	r30, 0xF9	; 249
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	40 81       	ld	r20, Z
     4b4:	c9 01       	movw	r24, r18
     4b6:	a0 e0       	ldi	r26, 0x00	; 0
     4b8:	b0 e0       	ldi	r27, 0x00	; 0
     4ba:	88 0f       	add	r24, r24
     4bc:	99 1f       	adc	r25, r25
     4be:	aa 1f       	adc	r26, r26
     4c0:	bb 1f       	adc	r27, r27
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	aa 1f       	adc	r26, r26
     4c8:	bb 1f       	adc	r27, r27
     4ca:	88 0f       	add	r24, r24
     4cc:	99 1f       	adc	r25, r25
     4ce:	aa 1f       	adc	r26, r26
     4d0:	bb 1f       	adc	r27, r27
     4d2:	88 0f       	add	r24, r24
     4d4:	99 1f       	adc	r25, r25
     4d6:	aa 1f       	adc	r26, r26
     4d8:	bb 1f       	adc	r27, r27
     4da:	24 2f       	mov	r18, r20
     4dc:	2f 70       	andi	r18, 0x0F	; 15
     4de:	82 2b       	or	r24, r18
     4e0:	80 83       	st	Z, r24
     4e2:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     4e6:	8f 70       	andi	r24, 0x0F	; 15
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	94 e0       	ldi	r25, 0x04	; 4
     4ee:	4f ce       	rjmp	.-866    	; 0x18e <LCDWritePackage+0x9e>
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	08 95       	ret

000004fe <writeChar>:
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	66 30       	cpi	r22, 0x06	; 6
     504:	71 05       	cpc	r23, r1
     506:	08 f0       	brcs	.+2      	; 0x50a <__stack+0xb>
     508:	c8 c1       	rjmp	.+912    	; 0x89a <__stack+0x39b>
     50a:	db 01       	movw	r26, r22
     50c:	48 2f       	mov	r20, r24
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	fa 01       	movw	r30, r20
     512:	f0 97       	sbiw	r30, 0x30	; 48
     514:	eb 32       	cpi	r30, 0x2B	; 43
     516:	f1 05       	cpc	r31, r1
     518:	08 f0       	brcs	.+2      	; 0x51c <__stack+0x1d>
     51a:	b4 c1       	rjmp	.+872    	; 0x884 <__stack+0x385>
     51c:	e2 5d       	subi	r30, 0xD2	; 210
     51e:	ff 4f       	sbci	r31, 0xFF	; 255
     520:	0c 94 00 13 	jmp	0x2600	; 0x2600 <__tablejump2__>
     524:	05 e0       	ldi	r16, 0x05	; 5
     526:	10 e0       	ldi	r17, 0x00	; 0
     528:	25 e0       	ldi	r18, 0x05	; 5
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	45 e0       	ldi	r20, 0x05	; 5
     52e:	50 e0       	ldi	r21, 0x00	; 0
     530:	69 e0       	ldi	r22, 0x09	; 9
     532:	70 e0       	ldi	r23, 0x00	; 0
     534:	cd 01       	movw	r24, r26
     536:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     53a:	af c1       	rjmp	.+862    	; 0x89a <__stack+0x39b>
     53c:	00 e0       	ldi	r16, 0x00	; 0
     53e:	10 e0       	ldi	r17, 0x00	; 0
     540:	21 e0       	ldi	r18, 0x01	; 1
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	41 e0       	ldi	r20, 0x01	; 1
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	cd 01       	movw	r24, r26
     54e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     552:	a3 c1       	rjmp	.+838    	; 0x89a <__stack+0x39b>
     554:	05 e0       	ldi	r16, 0x05	; 5
     556:	10 e0       	ldi	r17, 0x00	; 0
     558:	28 e0       	ldi	r18, 0x08	; 8
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	41 e0       	ldi	r20, 0x01	; 1
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	cd 01       	movw	r24, r26
     566:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     56a:	97 c1       	rjmp	.+814    	; 0x89a <__stack+0x39b>
     56c:	01 e0       	ldi	r16, 0x01	; 1
     56e:	10 e0       	ldi	r17, 0x00	; 0
     570:	2b e0       	ldi	r18, 0x0B	; 11
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	41 e0       	ldi	r20, 0x01	; 1
     576:	50 e0       	ldi	r21, 0x00	; 0
     578:	61 e0       	ldi	r22, 0x01	; 1
     57a:	70 e0       	ldi	r23, 0x00	; 0
     57c:	cd 01       	movw	r24, r26
     57e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     582:	8b c1       	rjmp	.+790    	; 0x89a <__stack+0x39b>
     584:	00 e0       	ldi	r16, 0x00	; 0
     586:	10 e0       	ldi	r17, 0x00	; 0
     588:	2b e0       	ldi	r18, 0x0B	; 11
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	45 e0       	ldi	r20, 0x05	; 5
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	cd 01       	movw	r24, r26
     596:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     59a:	7f c1       	rjmp	.+766    	; 0x89a <__stack+0x39b>
     59c:	01 e0       	ldi	r16, 0x01	; 1
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	2b e0       	ldi	r18, 0x0B	; 11
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	44 e0       	ldi	r20, 0x04	; 4
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	61 e0       	ldi	r22, 0x01	; 1
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	cd 01       	movw	r24, r26
     5ae:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5b2:	73 c1       	rjmp	.+742    	; 0x89a <__stack+0x39b>
     5b4:	01 e0       	ldi	r16, 0x01	; 1
     5b6:	10 e0       	ldi	r17, 0x00	; 0
     5b8:	2f e0       	ldi	r18, 0x0F	; 15
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	44 e0       	ldi	r20, 0x04	; 4
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	cd 01       	movw	r24, r26
     5c6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5ca:	67 c1       	rjmp	.+718    	; 0x89a <__stack+0x39b>
     5cc:	04 e0       	ldi	r16, 0x04	; 4
     5ce:	10 e0       	ldi	r17, 0x00	; 0
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	69 e0       	ldi	r22, 0x09	; 9
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	cd 01       	movw	r24, r26
     5de:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5e2:	5b c1       	rjmp	.+694    	; 0x89a <__stack+0x39b>
     5e4:	01 e0       	ldi	r16, 0x01	; 1
     5e6:	10 e0       	ldi	r17, 0x00	; 0
     5e8:	2f e0       	ldi	r18, 0x0F	; 15
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	45 e0       	ldi	r20, 0x05	; 5
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	61 e0       	ldi	r22, 0x01	; 1
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	cd 01       	movw	r24, r26
     5f6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5fa:	4f c1       	rjmp	.+670    	; 0x89a <__stack+0x39b>
     5fc:	01 e0       	ldi	r16, 0x01	; 1
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	2b e0       	ldi	r18, 0x0B	; 11
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	45 e0       	ldi	r20, 0x05	; 5
     606:	50 e0       	ldi	r21, 0x00	; 0
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	cd 01       	movw	r24, r26
     60e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     612:	43 c1       	rjmp	.+646    	; 0x89a <__stack+0x39b>
     614:	00 e0       	ldi	r16, 0x00	; 0
     616:	10 e0       	ldi	r17, 0x00	; 0
     618:	2f e0       	ldi	r18, 0x0F	; 15
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	45 e0       	ldi	r20, 0x05	; 5
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	61 e0       	ldi	r22, 0x01	; 1
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	cd 01       	movw	r24, r26
     626:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     62a:	37 c1       	rjmp	.+622    	; 0x89a <__stack+0x39b>
     62c:	01 e0       	ldi	r16, 0x01	; 1
     62e:	10 e0       	ldi	r17, 0x00	; 0
     630:	2f e0       	ldi	r18, 0x0F	; 15
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	45 e0       	ldi	r20, 0x05	; 5
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	61 e0       	ldi	r22, 0x01	; 1
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	cd 01       	movw	r24, r26
     63e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     642:	2b c1       	rjmp	.+598    	; 0x89a <__stack+0x39b>
     644:	01 e0       	ldi	r16, 0x01	; 1
     646:	10 e0       	ldi	r17, 0x00	; 0
     648:	24 e0       	ldi	r18, 0x04	; 4
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	44 e0       	ldi	r20, 0x04	; 4
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	61 e0       	ldi	r22, 0x01	; 1
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	cd 01       	movw	r24, r26
     656:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     65a:	1f c1       	rjmp	.+574    	; 0x89a <__stack+0x39b>
     65c:	04 e0       	ldi	r16, 0x04	; 4
     65e:	10 e0       	ldi	r17, 0x00	; 0
     660:	24 e0       	ldi	r18, 0x04	; 4
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	46 e0       	ldi	r20, 0x06	; 6
     666:	50 e0       	ldi	r21, 0x00	; 0
     668:	60 e0       	ldi	r22, 0x00	; 0
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	cd 01       	movw	r24, r26
     66e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     672:	13 c1       	rjmp	.+550    	; 0x89a <__stack+0x39b>
     674:	01 e0       	ldi	r16, 0x01	; 1
     676:	10 e0       	ldi	r17, 0x00	; 0
     678:	26 e0       	ldi	r18, 0x06	; 6
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	44 e0       	ldi	r20, 0x04	; 4
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	cd 01       	movw	r24, r26
     686:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     68a:	07 c1       	rjmp	.+526    	; 0x89a <__stack+0x39b>
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	10 e0       	ldi	r17, 0x00	; 0
     690:	2e e0       	ldi	r18, 0x0E	; 14
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	44 e0       	ldi	r20, 0x04	; 4
     696:	50 e0       	ldi	r21, 0x00	; 0
     698:	61 e0       	ldi	r22, 0x01	; 1
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	cd 01       	movw	r24, r26
     69e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6a2:	fb c0       	rjmp	.+502    	; 0x89a <__stack+0x39b>
     6a4:	01 e0       	ldi	r16, 0x01	; 1
     6a6:	10 e0       	ldi	r17, 0x00	; 0
     6a8:	2d e0       	ldi	r18, 0x0D	; 13
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	44 e0       	ldi	r20, 0x04	; 4
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	61 e0       	ldi	r22, 0x01	; 1
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	cd 01       	movw	r24, r26
     6b6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6ba:	ef c0       	rjmp	.+478    	; 0x89a <__stack+0x39b>
     6bc:	00 e0       	ldi	r16, 0x00	; 0
     6be:	10 e0       	ldi	r17, 0x00	; 0
     6c0:	2f e0       	ldi	r18, 0x0F	; 15
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	45 e0       	ldi	r20, 0x05	; 5
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	70 e0       	ldi	r23, 0x00	; 0
     6cc:	cd 01       	movw	r24, r26
     6ce:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6d2:	e3 c0       	rjmp	.+454    	; 0x89a <__stack+0x39b>
     6d4:	02 e0       	ldi	r16, 0x02	; 2
     6d6:	10 e0       	ldi	r17, 0x00	; 0
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	48 e0       	ldi	r20, 0x08	; 8
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	cd 01       	movw	r24, r26
     6e6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6ea:	d7 c0       	rjmp	.+430    	; 0x89a <__stack+0x39b>
     6ec:	01 e0       	ldi	r16, 0x01	; 1
     6ee:	10 e0       	ldi	r17, 0x00	; 0
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	41 e0       	ldi	r20, 0x01	; 1
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	cd 01       	movw	r24, r26
     6fe:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     702:	cb c0       	rjmp	.+406    	; 0x89a <__stack+0x39b>
     704:	08 e0       	ldi	r16, 0x08	; 8
     706:	10 e0       	ldi	r17, 0x00	; 0
     708:	26 e0       	ldi	r18, 0x06	; 6
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	44 e0       	ldi	r20, 0x04	; 4
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	68 e0       	ldi	r22, 0x08	; 8
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	cd 01       	movw	r24, r26
     716:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     71a:	bf c0       	rjmp	.+382    	; 0x89a <__stack+0x39b>
     71c:	01 e0       	ldi	r16, 0x01	; 1
     71e:	10 e0       	ldi	r17, 0x00	; 0
     720:	24 e0       	ldi	r18, 0x04	; 4
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	44 e0       	ldi	r20, 0x04	; 4
     726:	50 e0       	ldi	r21, 0x00	; 0
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	70 e0       	ldi	r23, 0x00	; 0
     72c:	cd 01       	movw	r24, r26
     72e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     732:	b3 c0       	rjmp	.+358    	; 0x89a <__stack+0x39b>
     734:	00 e0       	ldi	r16, 0x00	; 0
     736:	10 e0       	ldi	r17, 0x00	; 0
     738:	25 e0       	ldi	r18, 0x05	; 5
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	47 e0       	ldi	r20, 0x07	; 7
     73e:	50 e0       	ldi	r21, 0x00	; 0
     740:	68 e0       	ldi	r22, 0x08	; 8
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	cd 01       	movw	r24, r26
     746:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     74a:	a7 c0       	rjmp	.+334    	; 0x89a <__stack+0x39b>
     74c:	08 e0       	ldi	r16, 0x08	; 8
     74e:	10 e0       	ldi	r17, 0x00	; 0
     750:	25 e0       	ldi	r18, 0x05	; 5
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	47 e0       	ldi	r20, 0x07	; 7
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	cd 01       	movw	r24, r26
     75e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     762:	9b c0       	rjmp	.+310    	; 0x89a <__stack+0x39b>
     764:	01 e0       	ldi	r16, 0x01	; 1
     766:	10 e0       	ldi	r17, 0x00	; 0
     768:	25 e0       	ldi	r18, 0x05	; 5
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	45 e0       	ldi	r20, 0x05	; 5
     76e:	50 e0       	ldi	r21, 0x00	; 0
     770:	61 e0       	ldi	r22, 0x01	; 1
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	cd 01       	movw	r24, r26
     776:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     77a:	8f c0       	rjmp	.+286    	; 0x89a <__stack+0x39b>
     77c:	00 e0       	ldi	r16, 0x00	; 0
     77e:	10 e0       	ldi	r17, 0x00	; 0
     780:	2e e0       	ldi	r18, 0x0E	; 14
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	45 e0       	ldi	r20, 0x05	; 5
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	61 e0       	ldi	r22, 0x01	; 1
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	cd 01       	movw	r24, r26
     78e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     792:	83 c0       	rjmp	.+262    	; 0x89a <__stack+0x39b>
     794:	09 e0       	ldi	r16, 0x09	; 9
     796:	10 e0       	ldi	r17, 0x00	; 0
     798:	25 e0       	ldi	r18, 0x05	; 5
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	45 e0       	ldi	r20, 0x05	; 5
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	61 e0       	ldi	r22, 0x01	; 1
     7a2:	70 e0       	ldi	r23, 0x00	; 0
     7a4:	cd 01       	movw	r24, r26
     7a6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7aa:	77 c0       	rjmp	.+238    	; 0x89a <__stack+0x39b>
     7ac:	08 e0       	ldi	r16, 0x08	; 8
     7ae:	10 e0       	ldi	r17, 0x00	; 0
     7b0:	2e e0       	ldi	r18, 0x0E	; 14
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	45 e0       	ldi	r20, 0x05	; 5
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	61 e0       	ldi	r22, 0x01	; 1
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	cd 01       	movw	r24, r26
     7be:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7c2:	6b c0       	rjmp	.+214    	; 0x89a <__stack+0x39b>
     7c4:	01 e0       	ldi	r16, 0x01	; 1
     7c6:	10 e0       	ldi	r17, 0x00	; 0
     7c8:	2b e0       	ldi	r18, 0x0B	; 11
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	44 e0       	ldi	r20, 0x04	; 4
     7ce:	50 e0       	ldi	r21, 0x00	; 0
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	cd 01       	movw	r24, r26
     7d6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7da:	5f c0       	rjmp	.+190    	; 0x89a <__stack+0x39b>
     7dc:	02 e0       	ldi	r16, 0x02	; 2
     7de:	10 e0       	ldi	r17, 0x00	; 0
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	48 e0       	ldi	r20, 0x08	; 8
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	61 e0       	ldi	r22, 0x01	; 1
     7ea:	70 e0       	ldi	r23, 0x00	; 0
     7ec:	cd 01       	movw	r24, r26
     7ee:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7f2:	53 c0       	rjmp	.+166    	; 0x89a <__stack+0x39b>
     7f4:	01 e0       	ldi	r16, 0x01	; 1
     7f6:	10 e0       	ldi	r17, 0x00	; 0
     7f8:	25 e0       	ldi	r18, 0x05	; 5
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	45 e0       	ldi	r20, 0x05	; 5
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	70 e0       	ldi	r23, 0x00	; 0
     804:	cd 01       	movw	r24, r26
     806:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     80a:	47 c0       	rjmp	.+142    	; 0x89a <__stack+0x39b>
     80c:	04 e0       	ldi	r16, 0x04	; 4
     80e:	10 e0       	ldi	r17, 0x00	; 0
     810:	24 e0       	ldi	r18, 0x04	; 4
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	44 e0       	ldi	r20, 0x04	; 4
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	68 e0       	ldi	r22, 0x08	; 8
     81a:	70 e0       	ldi	r23, 0x00	; 0
     81c:	cd 01       	movw	r24, r26
     81e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     822:	3b c0       	rjmp	.+118    	; 0x89a <__stack+0x39b>
     824:	03 e0       	ldi	r16, 0x03	; 3
     826:	10 e0       	ldi	r17, 0x00	; 0
     828:	25 e0       	ldi	r18, 0x05	; 5
     82a:	30 e0       	ldi	r19, 0x00	; 0
     82c:	45 e0       	ldi	r20, 0x05	; 5
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	cd 01       	movw	r24, r26
     836:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     83a:	2f c0       	rjmp	.+94     	; 0x89a <__stack+0x39b>
     83c:	0c e0       	ldi	r16, 0x0C	; 12
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	42 e0       	ldi	r20, 0x02	; 2
     846:	50 e0       	ldi	r21, 0x00	; 0
     848:	68 e0       	ldi	r22, 0x08	; 8
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	cd 01       	movw	r24, r26
     84e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     852:	23 c0       	rjmp	.+70     	; 0x89a <__stack+0x39b>
     854:	02 e0       	ldi	r16, 0x02	; 2
     856:	10 e0       	ldi	r17, 0x00	; 0
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	42 e0       	ldi	r20, 0x02	; 2
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	68 e0       	ldi	r22, 0x08	; 8
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	cd 01       	movw	r24, r26
     866:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     86a:	17 c0       	rjmp	.+46     	; 0x89a <__stack+0x39b>
     86c:	05 e0       	ldi	r16, 0x05	; 5
     86e:	10 e0       	ldi	r17, 0x00	; 0
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	40 e0       	ldi	r20, 0x00	; 0
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	69 e0       	ldi	r22, 0x09	; 9
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	cd 01       	movw	r24, r26
     87e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     882:	0b c0       	rjmp	.+22     	; 0x89a <__stack+0x39b>
     884:	02 e0       	ldi	r16, 0x02	; 2
     886:	10 e0       	ldi	r17, 0x00	; 0
     888:	28 e0       	ldi	r18, 0x08	; 8
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	41 e0       	ldi	r20, 0x01	; 1
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	cd 01       	movw	r24, r26
     896:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	08 95       	ret

000008a0 <initLCD>:

// Inits the LCD by using some magic

void initLCD(){
	
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
     8a0:	87 eb       	ldi	r24, 0xB7	; 183
     8a2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (0<<LCDPS2) | (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
     8a6:	87 e0       	ldi	r24, 0x07	; 7
     8a8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
     8ac:	8f e0       	ldi	r24, 0x0F	; 15
     8ae:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	LCDCRA = (1<<LCDEN);
     8b2:	80 e8       	ldi	r24, 0x80	; 128
     8b4:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     8b8:	08 95       	ret

000008ba <delayedLightStateReaction>:
	self->serial = serial;
	cyckleLightState(self);

}

void delayedLightStateReaction(LightHandler *self, int direction){
     8ba:	fb 01       	movw	r30, r22
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 1f       	adc	r31, r31
     8c0:	e8 0f       	add	r30, r24
     8c2:	f9 1f       	adc	r31, r25
	
	
	if(self->activePassingSemaphore[direction] == 1) {
     8c4:	26 81       	ldd	r18, Z+6	; 0x06
     8c6:	37 81       	ldd	r19, Z+7	; 0x07
     8c8:	21 30       	cpi	r18, 0x01	; 1
     8ca:	31 05       	cpc	r19, r1
     8cc:	91 f4       	brne	.+36     	; 0x8f2 <delayedLightStateReaction+0x38>
		self->lightState[direction == NORTH ? SOUTH : NORTH] = GREEN;
     8ce:	41 e0       	ldi	r20, 0x01	; 1
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	67 2b       	or	r22, r23
     8d4:	11 f0       	breq	.+4      	; 0x8da <delayedLightStateReaction+0x20>
     8d6:	40 e0       	ldi	r20, 0x00	; 0
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	4b 5f       	subi	r20, 0xFB	; 251
     8dc:	5f 4f       	sbci	r21, 0xFF	; 255
     8de:	44 0f       	add	r20, r20
     8e0:	55 1f       	adc	r21, r21
     8e2:	dc 01       	movw	r26, r24
     8e4:	a4 0f       	add	r26, r20
     8e6:	b5 1f       	adc	r27, r21
     8e8:	81 e0       	ldi	r24, 0x01	; 1
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	8d 93       	st	X+, r24
     8ee:	9c 93       	st	X, r25
     8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <delayedLightStateReaction+0x3e>
		//onLightChange(self);
	}
	
	if(self->activePassingSemaphore[direction] > 0){
     8f2:	12 16       	cp	r1, r18
     8f4:	13 06       	cpc	r1, r19
     8f6:	24 f4       	brge	.+8      	; 0x900 <delayedLightStateReaction+0x46>
		self->activePassingSemaphore[direction]--;
     8f8:	21 50       	subi	r18, 0x01	; 1
     8fa:	31 09       	sbc	r19, r1
     8fc:	37 83       	std	Z+7, r19	; 0x07
     8fe:	26 83       	std	Z+6, r18	; 0x06
     900:	08 95       	ret

00000902 <cyckleLightState>:
	
	*arg = self->lightState[*arg];
	
}

void cyckleLightState(LightHandler* self){
     902:	cf 92       	push	r12
     904:	df 92       	push	r13
     906:	ef 92       	push	r14
     908:	ff 92       	push	r15
     90a:	0f 93       	push	r16
     90c:	1f 93       	push	r17
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
	
	ASYNC(self, &onLightChange, NULL);
     912:	c1 2c       	mov	r12, r1
     914:	d1 2c       	mov	r13, r1
     916:	0f 2e       	mov	r0, r31
     918:	f3 eb       	ldi	r31, 0xB3	; 179
     91a:	ef 2e       	mov	r14, r31
     91c:	f4 e0       	ldi	r31, 0x04	; 4
     91e:	ff 2e       	mov	r15, r31
     920:	f0 2d       	mov	r31, r0
     922:	8c 01       	movw	r16, r24
     924:	20 e0       	ldi	r18, 0x00	; 0
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	a9 01       	movw	r20, r18
     92a:	60 e0       	ldi	r22, 0x00	; 0
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	cb 01       	movw	r24, r22
     930:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	SEND(MSEC(100), MSEC(200), self, &cyckleLightState, NULL);
     934:	0f 2e       	mov	r0, r31
     936:	f1 e8       	ldi	r31, 0x81	; 129
     938:	ef 2e       	mov	r14, r31
     93a:	f4 e0       	ldi	r31, 0x04	; 4
     93c:	ff 2e       	mov	r15, r31
     93e:	f0 2d       	mov	r31, r0
     940:	2a e6       	ldi	r18, 0x6A	; 106
     942:	38 e1       	ldi	r19, 0x18	; 24
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	65 e3       	ldi	r22, 0x35	; 53
     94a:	7c e0       	ldi	r23, 0x0C	; 12
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	
}
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	1f 91       	pop	r17
     95a:	0f 91       	pop	r16
     95c:	ff 90       	pop	r15
     95e:	ef 90       	pop	r14
     960:	df 90       	pop	r13
     962:	cf 90       	pop	r12
     964:	08 95       	ret

00000966 <onLightChange>:

void onLightChange(LightHandler* self){
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	ec 01       	movw	r28, r24
	
	int parsedValue = 0;
	
	for(int i = 0; i < 2; i++){
		
		if(self->lightState[i] == GREEN){
     970:	8a 85       	ldd	r24, Y+10	; 0x0a
     972:	9b 85       	ldd	r25, Y+11	; 0x0b
     974:	01 97       	sbiw	r24, 0x01	; 1
     976:	19 f0       	breq	.+6      	; 0x97e <onLightChange+0x18>
			parsedValue |= (1 << (i * 2));
		}
		else{
			parsedValue |= (2 << (i * 2));
     978:	02 e0       	ldi	r16, 0x02	; 2
     97a:	10 e0       	ldi	r17, 0x00	; 0
     97c:	02 c0       	rjmp	.+4      	; 0x982 <onLightChange+0x1c>
	int parsedValue = 0;
	
	for(int i = 0; i < 2; i++){
		
		if(self->lightState[i] == GREEN){
			parsedValue |= (1 << (i * 2));
     97e:	01 e0       	ldi	r16, 0x01	; 1
     980:	10 e0       	ldi	r17, 0x00	; 0
	
	int parsedValue = 0;
	
	for(int i = 0; i < 2; i++){
		
		if(self->lightState[i] == GREEN){
     982:	8c 85       	ldd	r24, Y+12	; 0x0c
     984:	9d 85       	ldd	r25, Y+13	; 0x0d
     986:	01 97       	sbiw	r24, 0x01	; 1
     988:	11 f4       	brne	.+4      	; 0x98e <onLightChange+0x28>
			parsedValue |= (1 << (i * 2));
     98a:	04 60       	ori	r16, 0x04	; 4
     98c:	01 c0       	rjmp	.+2      	; 0x990 <onLightChange+0x2a>
		}
		else{
			parsedValue |= (2 << (i * 2));
     98e:	08 60       	ori	r16, 0x08	; 8
		}
		
	}
	
	writeChar('0' + self->activePassingSemaphore[0], 1);
     990:	8e 81       	ldd	r24, Y+6	; 0x06
     992:	61 e0       	ldi	r22, 0x01	; 1
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	80 5d       	subi	r24, 0xD0	; 208
     998:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	writeChar((self->lightState[0] == RED ? 'R' : 'G'), 2);
     99c:	8a 85       	ldd	r24, Y+10	; 0x0a
     99e:	9b 85       	ldd	r25, Y+11	; 0x0b
     9a0:	89 2b       	or	r24, r25
     9a2:	11 f0       	breq	.+4      	; 0x9a8 <onLightChange+0x42>
     9a4:	87 e4       	ldi	r24, 0x47	; 71
     9a6:	01 c0       	rjmp	.+2      	; 0x9aa <onLightChange+0x44>
     9a8:	82 e5       	ldi	r24, 0x52	; 82
     9aa:	62 e0       	ldi	r22, 0x02	; 2
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	
	writeChar((self->lightState[1] == RED ? 'R' : 'G'), 3);
     9b2:	8c 85       	ldd	r24, Y+12	; 0x0c
     9b4:	9d 85       	ldd	r25, Y+13	; 0x0d
     9b6:	89 2b       	or	r24, r25
     9b8:	11 f0       	breq	.+4      	; 0x9be <onLightChange+0x58>
     9ba:	87 e4       	ldi	r24, 0x47	; 71
     9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <onLightChange+0x5a>
     9be:	82 e5       	ldi	r24, 0x52	; 82
     9c0:	63 e0       	ldi	r22, 0x03	; 3
     9c2:	70 e0       	ldi	r23, 0x00	; 0
     9c4:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	writeChar('0' + self->activePassingSemaphore[1], 4);
     9c8:	88 85       	ldd	r24, Y+8	; 0x08
     9ca:	64 e0       	ldi	r22, 0x04	; 4
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	80 5d       	subi	r24, 0xD0	; 208
     9d0:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	
	
	SYNC(self->serial, &send, parsedValue);
     9d4:	a8 01       	movw	r20, r16
     9d6:	64 eb       	ldi	r22, 0xB4	; 180
     9d8:	76 e0       	ldi	r23, 0x06	; 6
     9da:	8c 81       	ldd	r24, Y+4	; 0x04
     9dc:	9d 81       	ldd	r25, Y+5	; 0x05
     9de:	0e 94 cf 11 	call	0x239e	; 0x239e <sync>
     9e2:	df 91       	pop	r29
     9e4:	cf 91       	pop	r28
     9e6:	1f 91       	pop	r17
     9e8:	0f 91       	pop	r16
     9ea:	08 95       	ret

000009ec <initLightHandler>:
void cyckleLightState(LightHandler* self);

int counter;
void initLightHandler(LightHandler *self, Serial *serial){
	
	counter = 0;
     9ec:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <counter+0x1>
     9f0:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <counter>
	self->serial = serial;
     9f4:	fc 01       	movw	r30, r24
     9f6:	75 83       	std	Z+5, r23	; 0x05
     9f8:	64 83       	std	Z+4, r22	; 0x04
	cyckleLightState(self);
     9fa:	0e 94 81 04 	call	0x902	; 0x902 <cyckleLightState>
     9fe:	08 95       	ret

00000a00 <pushLightState>:
		self->activePassingSemaphore[direction]--;
	}
	
}

void pushLightState(LightHandler* self, int direction){
     a00:	cf 92       	push	r12
     a02:	df 92       	push	r13
     a04:	ef 92       	push	r14
     a06:	ff 92       	push	r15
     a08:	0f 93       	push	r16
     a0a:	1f 93       	push	r17
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	ec 01       	movw	r28, r24
     a12:	fb 01       	movw	r30, r22
     a14:	ee 0f       	add	r30, r30
     a16:	ff 1f       	adc	r31, r31
     a18:	e8 0f       	add	r30, r24
     a1a:	f9 1f       	adc	r31, r25
		
	self->activePassingSemaphore[direction]++;
     a1c:	86 81       	ldd	r24, Z+6	; 0x06
     a1e:	97 81       	ldd	r25, Z+7	; 0x07
     a20:	01 96       	adiw	r24, 0x01	; 1
     a22:	97 83       	std	Z+7, r25	; 0x07
     a24:	86 83       	std	Z+6, r24	; 0x06
	
	self->lightState[direction] = GREEN;
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	93 87       	std	Z+11, r25	; 0x0b
     a2c:	82 87       	std	Z+10, r24	; 0x0a
	self->lightState[direction == NORTH ? SOUTH : NORTH] = RED;
     a2e:	61 15       	cp	r22, r1
     a30:	71 05       	cpc	r23, r1
     a32:	11 f0       	breq	.+4      	; 0xa38 <pushLightState+0x38>
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	fc 01       	movw	r30, r24
     a3a:	35 96       	adiw	r30, 0x05	; 5
     a3c:	ee 0f       	add	r30, r30
     a3e:	ff 1f       	adc	r31, r31
     a40:	ec 0f       	add	r30, r28
     a42:	fd 1f       	adc	r31, r29
     a44:	11 82       	std	Z+1, r1	; 0x01
     a46:	10 82       	st	Z, r1
	SEND(MSEC(CARPASSINGTIME), MSEC(CARPASSINGTIME + 100), self, &delayedLightStateReaction, direction);
     a48:	6b 01       	movw	r12, r22
     a4a:	0f 2e       	mov	r0, r31
     a4c:	fd e5       	ldi	r31, 0x5D	; 93
     a4e:	ef 2e       	mov	r14, r31
     a50:	f4 e0       	ldi	r31, 0x04	; 4
     a52:	ff 2e       	mov	r15, r31
     a54:	f0 2d       	mov	r31, r0
     a56:	8e 01       	movw	r16, r28
     a58:	2f e8       	ldi	r18, 0x8F	; 143
     a5a:	3e e6       	ldi	r19, 0x6E	; 110
     a5c:	42 e0       	ldi	r20, 0x02	; 2
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	6a e5       	ldi	r22, 0x5A	; 90
     a62:	72 e6       	ldi	r23, 0x62	; 98
     a64:	82 e0       	ldi	r24, 0x02	; 2
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	
	ASYNC(self, &onLightChange, NULL);
     a6c:	c1 2c       	mov	r12, r1
     a6e:	d1 2c       	mov	r13, r1
     a70:	0f 2e       	mov	r0, r31
     a72:	f3 eb       	ldi	r31, 0xB3	; 179
     a74:	ef 2e       	mov	r14, r31
     a76:	f4 e0       	ldi	r31, 0x04	; 4
     a78:	ff 2e       	mov	r15, r31
     a7a:	f0 2d       	mov	r31, r0
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	a9 01       	movw	r20, r18
     a82:	60 e0       	ldi	r22, 0x00	; 0
     a84:	70 e0       	ldi	r23, 0x00	; 0
     a86:	cb 01       	movw	r24, r22
     a88:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	
}
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	1f 91       	pop	r17
     a92:	0f 91       	pop	r16
     a94:	ff 90       	pop	r15
     a96:	ef 90       	pop	r14
     a98:	df 90       	pop	r13
     a9a:	cf 90       	pop	r12
     a9c:	08 95       	ret

00000a9e <getLightState>:

void getLightState(LightHandler* self, int* arg){
	
	*arg = self->lightState[*arg];
     a9e:	fb 01       	movw	r30, r22
     aa0:	20 81       	ld	r18, Z
     aa2:	31 81       	ldd	r19, Z+1	; 0x01
     aa4:	2b 5f       	subi	r18, 0xFB	; 251
     aa6:	3f 4f       	sbci	r19, 0xFF	; 255
     aa8:	22 0f       	add	r18, r18
     aaa:	33 1f       	adc	r19, r19
     aac:	82 0f       	add	r24, r18
     aae:	93 1f       	adc	r25, r19
     ab0:	fc 01       	movw	r30, r24
     ab2:	80 81       	ld	r24, Z
     ab4:	91 81       	ldd	r25, Z+1	; 0x01
     ab6:	fb 01       	movw	r30, r22
     ab8:	91 83       	std	Z+1, r25	; 0x01
     aba:	80 83       	st	Z, r24
     abc:	08 95       	ret

00000abe <main>:
#include "LCD.h"

#define F_CPU 8000000
#include <util/delay.h>

int main(void){
     abe:	cf 93       	push	r28
     ac0:	df 93       	push	r29
     ac2:	cd b7       	in	r28, 0x3d	; 61
     ac4:	de b7       	in	r29, 0x3e	; 62
     ac6:	a2 97       	sbiw	r28, 0x22	; 34
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	f8 94       	cli
     acc:	de bf       	out	0x3e, r29	; 62
     ace:	0f be       	out	0x3f, r0	; 63
     ad0:	cd bf       	out	0x3d, r28	; 61
	
	CLKPR = 0x80;
     ad2:	e1 e6       	ldi	r30, 0x61	; 97
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	80 83       	st	Z, r24
	CLKPR = 0x00;
     ada:	10 82       	st	Z, r1
	
	MainClass mainClass = INIT_MAIN_CLASS;
     adc:	ce 01       	movw	r24, r28
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	22 e2       	ldi	r18, 0x22	; 34
     ae2:	fc 01       	movw	r30, r24
     ae4:	11 92       	st	Z+, r1
     ae6:	2a 95       	dec	r18
     ae8:	e9 f7       	brne	.-6      	; 0xae4 <main+0x26>
     aea:	21 e0       	ldi	r18, 0x01	; 1
     aec:	30 e0       	ldi	r19, 0x00	; 0
     aee:	38 8f       	std	Y+24, r19	; 0x18
     af0:	2f 8b       	std	Y+23, r18	; 0x17
     af2:	3a 8f       	std	Y+26, r19	; 0x1a
     af4:	29 8f       	std	Y+25, r18	; 0x19
	TINYTIMBER(&mainClass, &runMain, NULL);
     af6:	40 e0       	ldi	r20, 0x00	; 0
     af8:	50 e0       	ldi	r21, 0x00	; 0
     afa:	6c e8       	ldi	r22, 0x8C	; 140
     afc:	75 e0       	ldi	r23, 0x05	; 5
     afe:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <tinytimber>
}
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	a2 96       	adiw	r28, 0x22	; 34
     b08:	0f b6       	in	r0, 0x3f	; 63
     b0a:	f8 94       	cli
     b0c:	de bf       	out	0x3e, r29	; 62
     b0e:	0f be       	out	0x3f, r0	; 63
     b10:	cd bf       	out	0x3d, r28	; 61
     b12:	df 91       	pop	r29
     b14:	cf 91       	pop	r28
     b16:	08 95       	ret

00000b18 <runMain>:

void checkCarArrived(MainClass* self, int* input, int direction);
void parseLightStatus(MainClass* self, int* input, int direction);
void cycleSensorRead(MainClass* self);

void runMain(MainClass* self){
     b18:	0f 93       	push	r16
     b1a:	1f 93       	push	r17
     b1c:	cf 93       	push	r28
     b1e:	df 93       	push	r29
     b20:	ec 01       	movw	r28, r24
	
	initSerial(&(self->serial), (Object*)(self), (void*)&onSensorRead);
     b22:	8c 01       	movw	r16, r24
     b24:	0c 5f       	subi	r16, 0xFC	; 252
     b26:	1f 4f       	sbci	r17, 0xFF	; 255
     b28:	42 e0       	ldi	r20, 0x02	; 2
     b2a:	56 e0       	ldi	r21, 0x06	; 6
     b2c:	bc 01       	movw	r22, r24
     b2e:	c8 01       	movw	r24, r16
     b30:	0e 94 8a 06 	call	0xd14	; 0xd14 <initSerial>
	initLightHandler(&(self->lightHandler), &(self->serial));
     b34:	b8 01       	movw	r22, r16
     b36:	ce 01       	movw	r24, r28
     b38:	0c 96       	adiw	r24, 0x0c	; 12
     b3a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <initLightHandler>
	
	SYNC(self, &cycleSensorRead, NULL);
     b3e:	40 e0       	ldi	r20, 0x00	; 0
     b40:	50 e0       	ldi	r21, 0x00	; 0
     b42:	60 e4       	ldi	r22, 0x40	; 64
     b44:	76 e0       	ldi	r23, 0x06	; 6
     b46:	ce 01       	movw	r24, r28
     b48:	0e 94 cf 11 	call	0x239e	; 0x239e <sync>
}
     b4c:	df 91       	pop	r29
     b4e:	cf 91       	pop	r28
     b50:	1f 91       	pop	r17
     b52:	0f 91       	pop	r16
     b54:	08 95       	ret

00000b56 <checkCarArrived>:
	
}

void checkCarArrived(MainClass* self, int* input, int direction){

	if((*input) & (1 << (direction == NORTH ? 0 : 2))){
     b56:	fb 01       	movw	r30, r22
     b58:	20 81       	ld	r18, Z
     b5a:	31 81       	ldd	r19, Z+1	; 0x01
     b5c:	41 15       	cp	r20, r1
     b5e:	51 05       	cpc	r21, r1
     b60:	19 f0       	breq	.+6      	; 0xb68 <checkCarArrived+0x12>
     b62:	64 e0       	ldi	r22, 0x04	; 4
     b64:	70 e0       	ldi	r23, 0x00	; 0
     b66:	02 c0       	rjmp	.+4      	; 0xb6c <checkCarArrived+0x16>
     b68:	61 e0       	ldi	r22, 0x01	; 1
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	26 23       	and	r18, r22
     b6e:	37 23       	and	r19, r23
     b70:	23 2b       	or	r18, r19
     b72:	51 f0       	breq	.+20     	; 0xb88 <checkCarArrived+0x32>
     b74:	44 0f       	add	r20, r20
     b76:	55 1f       	adc	r21, r21
     b78:	fc 01       	movw	r30, r24
     b7a:	e4 0f       	add	r30, r20
     b7c:	f5 1f       	adc	r31, r21
	
		self->queue[direction]++;
     b7e:	82 8d       	ldd	r24, Z+26	; 0x1a
     b80:	93 8d       	ldd	r25, Z+27	; 0x1b
     b82:	01 96       	adiw	r24, 0x01	; 1
     b84:	93 8f       	std	Z+27, r25	; 0x1b
     b86:	82 8f       	std	Z+26, r24	; 0x1a
     b88:	08 95       	ret

00000b8a <parseLightStatus>:
	
	}

}

void parseLightStatus(MainClass* self, int* input, int direction){
     b8a:	cf 92       	push	r12
     b8c:	df 92       	push	r13
     b8e:	ef 92       	push	r14
     b90:	ff 92       	push	r15
     b92:	0f 93       	push	r16
     b94:	1f 93       	push	r17
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	00 d0       	rcall	.+0      	; 0xb9c <parseLightStatus+0x12>
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
     ba0:	7c 01       	movw	r14, r24
     ba2:	8a 01       	movw	r16, r20
	
	int arg = direction;
     ba4:	5a 83       	std	Y+2, r21	; 0x02
     ba6:	49 83       	std	Y+1, r20	; 0x01
	SYNC(&(self->lightHandler), &getLightState, &arg);
     ba8:	6c 01       	movw	r12, r24
     baa:	8c e0       	ldi	r24, 0x0C	; 12
     bac:	c8 0e       	add	r12, r24
     bae:	d1 1c       	adc	r13, r1
     bb0:	ae 01       	movw	r20, r28
     bb2:	4f 5f       	subi	r20, 0xFF	; 255
     bb4:	5f 4f       	sbci	r21, 0xFF	; 255
     bb6:	6f e4       	ldi	r22, 0x4F	; 79
     bb8:	75 e0       	ldi	r23, 0x05	; 5
     bba:	c6 01       	movw	r24, r12
     bbc:	0e 94 cf 11 	call	0x239e	; 0x239e <sync>
     bc0:	f8 01       	movw	r30, r16
     bc2:	ee 0f       	add	r30, r30
     bc4:	ff 1f       	adc	r31, r31
     bc6:	ee 0d       	add	r30, r14
     bc8:	ff 1d       	adc	r31, r15
	
	if(self->queue[direction] && arg == GREEN){
     bca:	82 8d       	ldd	r24, Z+26	; 0x1a
     bcc:	93 8d       	ldd	r25, Z+27	; 0x1b
     bce:	00 97       	sbiw	r24, 0x00	; 0
     bd0:	71 f0       	breq	.+28     	; 0xbee <parseLightStatus+0x64>
     bd2:	29 81       	ldd	r18, Y+1	; 0x01
     bd4:	3a 81       	ldd	r19, Y+2	; 0x02
     bd6:	21 30       	cpi	r18, 0x01	; 1
     bd8:	31 05       	cpc	r19, r1
     bda:	49 f4       	brne	.+18     	; 0xbee <parseLightStatus+0x64>
		self->queue[direction]--;
     bdc:	01 97       	sbiw	r24, 0x01	; 1
     bde:	93 8f       	std	Z+27, r25	; 0x1b
     be0:	82 8f       	std	Z+26, r24	; 0x1a
		SYNC(&(self->lightHandler), &pushLightState, direction);
     be2:	a8 01       	movw	r20, r16
     be4:	60 e0       	ldi	r22, 0x00	; 0
     be6:	75 e0       	ldi	r23, 0x05	; 5
     be8:	c6 01       	movw	r24, r12
     bea:	0e 94 cf 11 	call	0x239e	; 0x239e <sync>
	}
	
     bee:	0f 90       	pop	r0
     bf0:	0f 90       	pop	r0
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	1f 91       	pop	r17
     bf8:	0f 91       	pop	r16
     bfa:	ff 90       	pop	r15
     bfc:	ef 90       	pop	r14
     bfe:	df 90       	pop	r13
     c00:	cf 90       	pop	r12
     c02:	08 95       	ret

00000c04 <onSensorRead>:
	
	SEND(MSEC(1000), MSEC(2000), self, &cycleSensorRead, NULL);
	
}

void onSensorRead(MainClass* self, int input){
     c04:	0f 93       	push	r16
     c06:	1f 93       	push	r17
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	00 d0       	rcall	.+0      	; 0xc0e <onSensorRead+0xa>
     c0e:	cd b7       	in	r28, 0x3d	; 61
     c10:	de b7       	in	r29, 0x3e	; 62
     c12:	8c 01       	movw	r16, r24
     c14:	7a 83       	std	Y+2, r23	; 0x02
     c16:	69 83       	std	Y+1, r22	; 0x01
		
	checkCarArrived(self, &input, NORTH);
     c18:	40 e0       	ldi	r20, 0x00	; 0
     c1a:	50 e0       	ldi	r21, 0x00	; 0
     c1c:	be 01       	movw	r22, r28
     c1e:	6f 5f       	subi	r22, 0xFF	; 255
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	0e 94 ab 05 	call	0xb56	; 0xb56 <checkCarArrived>
	checkCarArrived(self, &input, SOUTH);
     c26:	41 e0       	ldi	r20, 0x01	; 1
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	be 01       	movw	r22, r28
     c2c:	6f 5f       	subi	r22, 0xFF	; 255
     c2e:	7f 4f       	sbci	r23, 0xFF	; 255
     c30:	c8 01       	movw	r24, r16
     c32:	0e 94 ab 05 	call	0xb56	; 0xb56 <checkCarArrived>
	
	parseLightStatus(self, &input, NORTH);
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	be 01       	movw	r22, r28
     c3c:	6f 5f       	subi	r22, 0xFF	; 255
     c3e:	7f 4f       	sbci	r23, 0xFF	; 255
     c40:	c8 01       	movw	r24, r16
     c42:	0e 94 c5 05 	call	0xb8a	; 0xb8a <parseLightStatus>
	parseLightStatus(self, &input, SOUTH);
     c46:	41 e0       	ldi	r20, 0x01	; 1
     c48:	50 e0       	ldi	r21, 0x00	; 0
     c4a:	be 01       	movw	r22, r28
     c4c:	6f 5f       	subi	r22, 0xFF	; 255
     c4e:	7f 4f       	sbci	r23, 0xFF	; 255
     c50:	c8 01       	movw	r24, r16
     c52:	0e 94 c5 05 	call	0xb8a	; 0xb8a <parseLightStatus>
	
	writeChar('0' + self->queue[0], 0);
     c56:	f8 01       	movw	r30, r16
     c58:	82 8d       	ldd	r24, Z+26	; 0x1a
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	80 5d       	subi	r24, 0xD0	; 208
     c60:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	writeChar('0' + self->queue[1], 5);
     c64:	f8 01       	movw	r30, r16
     c66:	84 8d       	ldd	r24, Z+28	; 0x1c
     c68:	65 e0       	ldi	r22, 0x05	; 5
     c6a:	70 e0       	ldi	r23, 0x00	; 0
     c6c:	80 5d       	subi	r24, 0xD0	; 208
     c6e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	
}
     c72:	0f 90       	pop	r0
     c74:	0f 90       	pop	r0
     c76:	df 91       	pop	r29
     c78:	cf 91       	pop	r28
     c7a:	1f 91       	pop	r17
     c7c:	0f 91       	pop	r16
     c7e:	08 95       	ret

00000c80 <cycleSensorRead>:
	initLightHandler(&(self->lightHandler), &(self->serial));
	
	SYNC(self, &cycleSensorRead, NULL);
}

void cycleSensorRead(MainClass* self){
     c80:	cf 92       	push	r12
     c82:	df 92       	push	r13
     c84:	ef 92       	push	r14
     c86:	ff 92       	push	r15
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	8c 01       	movw	r16, r24
	
	onSensorRead(self, 0b0000);
     c8e:	60 e0       	ldi	r22, 0x00	; 0
     c90:	70 e0       	ldi	r23, 0x00	; 0
     c92:	0e 94 02 06 	call	0xc04	; 0xc04 <onSensorRead>
	
	SEND(MSEC(1000), MSEC(2000), self, &cycleSensorRead, NULL);
     c96:	c1 2c       	mov	r12, r1
     c98:	d1 2c       	mov	r13, r1
     c9a:	0f 2e       	mov	r0, r31
     c9c:	f0 e4       	ldi	r31, 0x40	; 64
     c9e:	ef 2e       	mov	r14, r31
     ca0:	f6 e0       	ldi	r31, 0x06	; 6
     ca2:	ff 2e       	mov	r15, r31
     ca4:	f0 2d       	mov	r31, r0
     ca6:	24 e2       	ldi	r18, 0x24	; 36
     ca8:	34 ef       	ldi	r19, 0xF4	; 244
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	62 e1       	ldi	r22, 0x12	; 18
     cb0:	7a e7       	ldi	r23, 0x7A	; 122
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	
}
     cba:	1f 91       	pop	r17
     cbc:	0f 91       	pop	r16
     cbe:	ff 90       	pop	r15
     cc0:	ef 90       	pop	r14
     cc2:	df 90       	pop	r13
     cc4:	cf 90       	pop	r12
     cc6:	08 95       	ret

00000cc8 <read>:
	UDR0 = input;
	
	//writeChar('0' + (input % 10), 5);
}

void read(Serial* self){
     cc8:	cf 92       	push	r12
     cca:	df 92       	push	r13
     ccc:	ef 92       	push	r14
     cce:	ff 92       	push	r15
     cd0:	0f 93       	push	r16
     cd2:	1f 93       	push	r17
     cd4:	dc 01       	movw	r26, r24
	
	while(!(UCSR0A & (1<<RXC0)));
     cd6:	e0 ec       	ldi	r30, 0xC0	; 192
     cd8:	f0 e0       	ldi	r31, 0x00	; 0
     cda:	90 81       	ld	r25, Z
     cdc:	99 23       	and	r25, r25
     cde:	ec f7       	brge	.-6      	; 0xcda <read+0x12>
	
	int temp = UDR0;
     ce0:	c0 90 c6 00 	lds	r12, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	//writeChar('0' + (temp % 10), 0);
	
	ASYNC(self->onReadObject, self->onReadFunction, (unsigned char)temp);
     ce4:	d1 2c       	mov	r13, r1
     ce6:	16 96       	adiw	r26, 0x06	; 6
     ce8:	ed 90       	ld	r14, X+
     cea:	fc 90       	ld	r15, X
     cec:	17 97       	sbiw	r26, 0x07	; 7
     cee:	14 96       	adiw	r26, 0x04	; 4
     cf0:	0d 91       	ld	r16, X+
     cf2:	1c 91       	ld	r17, X
     cf4:	15 97       	sbiw	r26, 0x05	; 5
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	a9 01       	movw	r20, r18
     cfc:	60 e0       	ldi	r22, 0x00	; 0
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	cb 01       	movw	r24, r22
     d02:	0e 94 be 10 	call	0x217c	; 0x217c <async>
	
}
     d06:	1f 91       	pop	r17
     d08:	0f 91       	pop	r16
     d0a:	ff 90       	pop	r15
     d0c:	ef 90       	pop	r14
     d0e:	df 90       	pop	r13
     d10:	cf 90       	pop	r12
     d12:	08 95       	ret

00000d14 <initSerial>:

unsigned int uber = MYUBER;

void read(Serial* self);

void initSerial(Serial* self, Object* onReadObject, void (*onReadFunction)(unsigned char)){
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	ec 01       	movw	r28, r24
     d22:	7b 01       	movw	r14, r22
     d24:	8a 01       	movw	r16, r20
	
	initLCD();
     d26:	0e 94 50 04 	call	0x8a0	; 0x8a0 <initLCD>
	self->onReadObject = onReadObject;
     d2a:	fd 82       	std	Y+5, r15	; 0x05
     d2c:	ec 82       	std	Y+4, r14	; 0x04
	self->onReadFunction = onReadFunction;
     d2e:	1f 83       	std	Y+7, r17	; 0x07
     d30:	0e 83       	std	Y+6, r16	; 0x06
	
	// Sets baud rate
	UBRR0H = (unsigned char)(uber >> 8);
     d32:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
     d36:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)(uber);
     d3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     d3e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	// Enable receive and transmit, and enable and transmit interrupts
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0) | (1 << TXCIE0);
     d42:	88 ed       	ldi	r24, 0xD8	; 216
     d44:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	// Set frame format: 8data, 1stop bit
	UCSR0C = (3 << UCSZ00) & ~(1 << USBS0);
     d48:	86 e0       	ldi	r24, 0x06	; 6
     d4a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	
	INSTALL(self, &read, IRQ_USART0_RX);
     d4e:	48 e0       	ldi	r20, 0x08	; 8
     d50:	64 e6       	ldi	r22, 0x64	; 100
     d52:	76 e0       	ldi	r23, 0x06	; 6
     d54:	ce 01       	movw	r24, r28
     d56:	0e 94 ca 12 	call	0x2594	; 0x2594 <install>
		
}
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	1f 91       	pop	r17
     d60:	0f 91       	pop	r16
     d62:	ff 90       	pop	r15
     d64:	ef 90       	pop	r14
     d66:	08 95       	ret

00000d68 <send>:

void send(Serial* self, unsigned char input){
	while(!(UCSR0A & (1 << UDRE0)));
     d68:	e0 ec       	ldi	r30, 0xC0	; 192
     d6a:	f0 e0       	ldi	r31, 0x00	; 0
     d6c:	80 81       	ld	r24, Z
     d6e:	85 ff       	sbrs	r24, 5
     d70:	fd cf       	rjmp	.-6      	; 0xd6c <send+0x4>
	UDR0 = input;
     d72:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     d76:	08 95       	ret

00000d78 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     d78:	cf 93       	push	r28
     d7a:	df 93       	push	r29
     d7c:	00 d0       	rcall	.+0      	; 0xd7e <initialize+0x6>
     d7e:	00 d0       	rcall	.+0      	; 0xd80 <initialize+0x8>
     d80:	cd b7       	in	r28, 0x3d	; 61
     d82:	de b7       	in	r29, 0x3e	; 62
     d84:	8f ef       	ldi	r24, 0xFF	; 255
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	2f ed       	ldi	r18, 0xDF	; 223
     d8a:	32 e0       	ldi	r19, 0x02	; 2
     d8c:	fc 01       	movw	r30, r24
     d8e:	70 97       	sbiw	r30, 0x10	; 16
     d90:	91 83       	std	Z+1, r25	; 0x01
     d92:	80 83       	st	Z, r24
     d94:	40 96       	adiw	r24, 0x10	; 16
     d96:	82 17       	cp	r24, r18
     d98:	93 07       	cpc	r25, r19
     d9a:	c1 f7       	brne	.-16     	; 0xd8c <initialize+0x14>
     d9c:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <messages+0xe1>
     da0:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <messages+0xe0>
     da4:	ea e3       	ldi	r30, 0x3A	; 58
     da6:	f1 e0       	ldi	r31, 0x01	; 1
     da8:	87 e5       	ldi	r24, 0x57	; 87
     daa:	91 e0       	ldi	r25, 0x01	; 1
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	80 83       	st	Z, r24
     db0:	84 e7       	ldi	r24, 0x74	; 116
     db2:	91 e0       	ldi	r25, 0x01	; 1
     db4:	96 8f       	std	Z+30, r25	; 0x1e
     db6:	85 8f       	std	Z+29, r24	; 0x1d
     db8:	a1 e9       	ldi	r26, 0x91	; 145
     dba:	b1 e0       	ldi	r27, 0x01	; 1
     dbc:	b3 af       	std	Z+59, r27	; 0x3b
     dbe:	a2 af       	std	Z+58, r26	; 0x3a
     dc0:	1d 92       	st	X+, r1
     dc2:	1c 92       	st	X, r1
     dc4:	fa 83       	std	Y+2, r31	; 0x02
     dc6:	e9 83       	std	Y+1, r30	; 0x01
     dc8:	eb e3       	ldi	r30, 0x3B	; 59
     dca:	f3 e0       	ldi	r31, 0x03	; 3
     dcc:	fc 83       	std	Y+4, r31	; 0x04
     dce:	eb 83       	std	Y+3, r30	; 0x03
     dd0:	89 81       	ldd	r24, Y+1	; 0x01
     dd2:	9a 81       	ldd	r25, Y+2	; 0x02
     dd4:	06 96       	adiw	r24, 0x06	; 6
     dd6:	0e 94 06 13 	call	0x260c	; 0x260c <setjmp>
     dda:	8b 81       	ldd	r24, Y+3	; 0x03
     ddc:	9c 81       	ldd	r25, Y+4	; 0x04
     dde:	e9 81       	ldd	r30, Y+1	; 0x01
     de0:	fa 81       	ldd	r31, Y+2	; 0x02
     de2:	97 8b       	std	Z+23, r25	; 0x17
     de4:	86 8b       	std	Z+22, r24	; 0x16
     de6:	91 8f       	std	Z+25, r25	; 0x19
     de8:	80 8f       	std	Z+24, r24	; 0x18
     dea:	8c e5       	ldi	r24, 0x5C	; 92
     dec:	92 e1       	ldi	r25, 0x12	; 18
     dee:	94 8f       	std	Z+28, r25	; 0x1c
     df0:	83 8f       	std	Z+27, r24	; 0x1b
     df2:	15 82       	std	Z+5, r1	; 0x05
     df4:	14 82       	std	Z+4, r1	; 0x04
     df6:	7d 96       	adiw	r30, 0x1d	; 29
     df8:	fa 83       	std	Y+2, r31	; 0x02
     dfa:	e9 83       	std	Y+1, r30	; 0x01
     dfc:	eb 81       	ldd	r30, Y+3	; 0x03
     dfe:	fc 81       	ldd	r31, Y+4	; 0x04
     e00:	e0 5a       	subi	r30, 0xA0	; 160
     e02:	ff 4f       	sbci	r31, 0xFF	; 255
     e04:	fc 83       	std	Y+4, r31	; 0x04
     e06:	eb 83       	std	Y+3, r30	; 0x03
     e08:	89 81       	ldd	r24, Y+1	; 0x01
     e0a:	9a 81       	ldd	r25, Y+2	; 0x02
     e0c:	8e 5a       	subi	r24, 0xAE	; 174
     e0e:	91 40       	sbci	r25, 0x01	; 1
     e10:	f9 f6       	brne	.-66     	; 0xdd0 <initialize+0x58>
     e12:	e2 ed       	ldi	r30, 0xD2	; 210
     e14:	f1 e0       	ldi	r31, 0x01	; 1
     e16:	11 82       	std	Z+1, r1	; 0x01
     e18:	10 82       	st	Z, r1
     e1a:	15 82       	std	Z+5, r1	; 0x05
     e1c:	14 82       	std	Z+4, r1	; 0x04
     e1e:	13 82       	std	Z+3, r1	; 0x03
     e20:	12 82       	std	Z+2, r1	; 0x02
     e22:	e1 e6       	ldi	r30, 0x61	; 97
     e24:	f0 e0       	ldi	r31, 0x00	; 0
     e26:	80 e8       	ldi	r24, 0x80	; 128
     e28:	80 83       	st	Z, r24
     e2a:	10 82       	st	Z, r1
     e2c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e30:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e34:	84 e0       	ldi	r24, 0x04	; 4
     e36:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     e40:	0f 90       	pop	r0
     e42:	0f 90       	pop	r0
     e44:	0f 90       	pop	r0
     e46:	0f 90       	pop	r0
     e48:	df 91       	pop	r29
     e4a:	cf 91       	pop	r28
     e4c:	08 95       	ret

00000e4e <dispatch>:
     e4e:	cf 93       	push	r28
     e50:	df 93       	push	r29
     e52:	00 d0       	rcall	.+0      	; 0xe54 <dispatch+0x6>
     e54:	cd b7       	in	r28, 0x3d	; 61
     e56:	de b7       	in	r29, 0x3e	; 62
     e58:	9a 83       	std	Y+2, r25	; 0x02
     e5a:	89 83       	std	Y+1, r24	; 0x01
     e5c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     e60:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     e64:	06 96       	adiw	r24, 0x06	; 6
     e66:	0e 94 06 13 	call	0x260c	; 0x260c <setjmp>
     e6a:	89 2b       	or	r24, r25
     e6c:	59 f4       	brne	.+22     	; 0xe84 <dispatch+0x36>
     e6e:	89 81       	ldd	r24, Y+1	; 0x01
     e70:	9a 81       	ldd	r25, Y+2	; 0x02
     e72:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
     e76:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	06 96       	adiw	r24, 0x06	; 6
     e80:	0e 94 26 13 	call	0x264c	; 0x264c <longjmp>
     e84:	0f 90       	pop	r0
     e86:	0f 90       	pop	r0
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <schedule>:
     e8e:	0f 93       	push	r16
     e90:	1f 93       	push	r17
     e92:	cf 93       	push	r28
     e94:	df 93       	push	r29
     e96:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <msgQ>
     e9a:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <msgQ+0x1>
     e9e:	30 97       	sbiw	r30, 0x00	; 0
     ea0:	61 f1       	breq	.+88     	; 0xefa <schedule+0x6c>
     ea2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
     ea6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
     eaa:	00 97       	sbiw	r24, 0x00	; 0
     eac:	31 f1       	breq	.+76     	; 0xefa <schedule+0x6c>
     eae:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <activeStack>
     eb2:	d0 91 05 01 	lds	r29, 0x0105	; 0x800105 <activeStack+0x1>
     eb6:	aa 81       	ldd	r26, Y+2	; 0x02
     eb8:	bb 81       	ldd	r27, Y+3	; 0x03
     eba:	10 97       	sbiw	r26, 0x00	; 0
     ebc:	79 f0       	breq	.+30     	; 0xedc <schedule+0x4e>
     ebe:	46 81       	ldd	r20, Z+6	; 0x06
     ec0:	57 81       	ldd	r21, Z+7	; 0x07
     ec2:	60 85       	ldd	r22, Z+8	; 0x08
     ec4:	71 85       	ldd	r23, Z+9	; 0x09
     ec6:	16 96       	adiw	r26, 0x06	; 6
     ec8:	0d 91       	ld	r16, X+
     eca:	1d 91       	ld	r17, X+
     ecc:	2d 91       	ld	r18, X+
     ece:	3c 91       	ld	r19, X
     ed0:	19 97       	sbiw	r26, 0x09	; 9
     ed2:	40 1b       	sub	r20, r16
     ed4:	51 0b       	sbc	r21, r17
     ed6:	62 0b       	sbc	r22, r18
     ed8:	73 0b       	sbc	r23, r19
     eda:	7a f4       	brpl	.+30     	; 0xefa <schedule+0x6c>
     edc:	fc 01       	movw	r30, r24
     ede:	20 81       	ld	r18, Z
     ee0:	31 81       	ldd	r19, Z+1	; 0x01
     ee2:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
     ee6:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
     eea:	d1 83       	std	Z+1, r29	; 0x01
     eec:	c0 83       	st	Z, r28
     eee:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
     ef2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
     ef6:	0e 94 27 07 	call	0xe4e	; 0xe4e <dispatch>
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	08 95       	ret

00000f04 <__vector_1>:
     f04:	1f 92       	push	r1
     f06:	0f 92       	push	r0
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	0f 92       	push	r0
     f0c:	11 24       	eor	r1, r1
     f0e:	2f 93       	push	r18
     f10:	3f 93       	push	r19
     f12:	4f 93       	push	r20
     f14:	5f 93       	push	r21
     f16:	6f 93       	push	r22
     f18:	7f 93       	push	r23
     f1a:	8f 93       	push	r24
     f1c:	9f 93       	push	r25
     f1e:	af 93       	push	r26
     f20:	bf 93       	push	r27
     f22:	ef 93       	push	r30
     f24:	ff 93       	push	r31
     f26:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
     f2a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
     f2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f36:	c9 01       	movw	r24, r18
     f38:	03 2e       	mov	r0, r19
     f3a:	00 0c       	add	r0, r0
     f3c:	aa 0b       	sbc	r26, r26
     f3e:	bb 0b       	sbc	r27, r27
     f40:	dc 01       	movw	r26, r24
     f42:	99 27       	eor	r25, r25
     f44:	88 27       	eor	r24, r24
     f46:	60 e0       	ldi	r22, 0x00	; 0
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	84 2b       	or	r24, r20
     f4c:	95 2b       	or	r25, r21
     f4e:	a6 2b       	or	r26, r22
     f50:	b7 2b       	or	r27, r23
     f52:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
     f56:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
     f5a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
     f5e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
     f62:	b0 9b       	sbis	0x16, 0	; 22
     f64:	1b c0       	rjmp	.+54     	; 0xf9c <__vector_1+0x98>
     f66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f6e:	c9 01       	movw	r24, r18
     f70:	01 96       	adiw	r24, 0x01	; 1
     f72:	09 2e       	mov	r0, r25
     f74:	00 0c       	add	r0, r0
     f76:	aa 0b       	sbc	r26, r26
     f78:	bb 0b       	sbc	r27, r27
     f7a:	dc 01       	movw	r26, r24
     f7c:	99 27       	eor	r25, r25
     f7e:	88 27       	eor	r24, r24
     f80:	60 e0       	ldi	r22, 0x00	; 0
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	84 2b       	or	r24, r20
     f86:	95 2b       	or	r25, r21
     f88:	a6 2b       	or	r26, r22
     f8a:	b7 2b       	or	r27, r23
     f8c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
     f90:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
     f94:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
     f98:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
     f9c:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable>
     fa0:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x1>
     fa4:	30 97       	sbiw	r30, 0x00	; 0
     fa6:	39 f0       	breq	.+14     	; 0xfb6 <__vector_1+0xb2>
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable>
     fb0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x1>
     fb4:	09 95       	icall
     fb6:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
     fba:	ff 91       	pop	r31
     fbc:	ef 91       	pop	r30
     fbe:	bf 91       	pop	r27
     fc0:	af 91       	pop	r26
     fc2:	9f 91       	pop	r25
     fc4:	8f 91       	pop	r24
     fc6:	7f 91       	pop	r23
     fc8:	6f 91       	pop	r22
     fca:	5f 91       	pop	r21
     fcc:	4f 91       	pop	r20
     fce:	3f 91       	pop	r19
     fd0:	2f 91       	pop	r18
     fd2:	0f 90       	pop	r0
     fd4:	0f be       	out	0x3f, r0	; 63
     fd6:	0f 90       	pop	r0
     fd8:	1f 90       	pop	r1
     fda:	18 95       	reti

00000fdc <__vector_2>:
     fdc:	1f 92       	push	r1
     fde:	0f 92       	push	r0
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	0f 92       	push	r0
     fe4:	11 24       	eor	r1, r1
     fe6:	2f 93       	push	r18
     fe8:	3f 93       	push	r19
     fea:	4f 93       	push	r20
     fec:	5f 93       	push	r21
     fee:	6f 93       	push	r22
     ff0:	7f 93       	push	r23
     ff2:	8f 93       	push	r24
     ff4:	9f 93       	push	r25
     ff6:	af 93       	push	r26
     ff8:	bf 93       	push	r27
     ffa:	ef 93       	push	r30
     ffc:	ff 93       	push	r31
     ffe:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1002:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1006:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    100a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    100e:	c9 01       	movw	r24, r18
    1010:	03 2e       	mov	r0, r19
    1012:	00 0c       	add	r0, r0
    1014:	aa 0b       	sbc	r26, r26
    1016:	bb 0b       	sbc	r27, r27
    1018:	dc 01       	movw	r26, r24
    101a:	99 27       	eor	r25, r25
    101c:	88 27       	eor	r24, r24
    101e:	60 e0       	ldi	r22, 0x00	; 0
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	84 2b       	or	r24, r20
    1024:	95 2b       	or	r25, r21
    1026:	a6 2b       	or	r26, r22
    1028:	b7 2b       	or	r27, r23
    102a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    102e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1032:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1036:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    103a:	b0 9b       	sbis	0x16, 0	; 22
    103c:	1b c0       	rjmp	.+54     	; 0x1074 <__vector_2+0x98>
    103e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1042:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1046:	c9 01       	movw	r24, r18
    1048:	01 96       	adiw	r24, 0x01	; 1
    104a:	09 2e       	mov	r0, r25
    104c:	00 0c       	add	r0, r0
    104e:	aa 0b       	sbc	r26, r26
    1050:	bb 0b       	sbc	r27, r27
    1052:	dc 01       	movw	r26, r24
    1054:	99 27       	eor	r25, r25
    1056:	88 27       	eor	r24, r24
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	84 2b       	or	r24, r20
    105e:	95 2b       	or	r25, r21
    1060:	a6 2b       	or	r26, r22
    1062:	b7 2b       	or	r27, r23
    1064:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1068:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    106c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1070:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1074:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x2>
    1078:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x3>
    107c:	30 97       	sbiw	r30, 0x00	; 0
    107e:	39 f0       	breq	.+14     	; 0x108e <__vector_2+0xb2>
    1080:	61 e0       	ldi	r22, 0x01	; 1
    1082:	70 e0       	ldi	r23, 0x00	; 0
    1084:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x2>
    1088:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x3>
    108c:	09 95       	icall
    108e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1092:	ff 91       	pop	r31
    1094:	ef 91       	pop	r30
    1096:	bf 91       	pop	r27
    1098:	af 91       	pop	r26
    109a:	9f 91       	pop	r25
    109c:	8f 91       	pop	r24
    109e:	7f 91       	pop	r23
    10a0:	6f 91       	pop	r22
    10a2:	5f 91       	pop	r21
    10a4:	4f 91       	pop	r20
    10a6:	3f 91       	pop	r19
    10a8:	2f 91       	pop	r18
    10aa:	0f 90       	pop	r0
    10ac:	0f be       	out	0x3f, r0	; 63
    10ae:	0f 90       	pop	r0
    10b0:	1f 90       	pop	r1
    10b2:	18 95       	reti

000010b4 <__vector_3>:
    10b4:	1f 92       	push	r1
    10b6:	0f 92       	push	r0
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	0f 92       	push	r0
    10bc:	11 24       	eor	r1, r1
    10be:	2f 93       	push	r18
    10c0:	3f 93       	push	r19
    10c2:	4f 93       	push	r20
    10c4:	5f 93       	push	r21
    10c6:	6f 93       	push	r22
    10c8:	7f 93       	push	r23
    10ca:	8f 93       	push	r24
    10cc:	9f 93       	push	r25
    10ce:	af 93       	push	r26
    10d0:	bf 93       	push	r27
    10d2:	ef 93       	push	r30
    10d4:	ff 93       	push	r31
    10d6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    10da:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    10de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10e6:	c9 01       	movw	r24, r18
    10e8:	03 2e       	mov	r0, r19
    10ea:	00 0c       	add	r0, r0
    10ec:	aa 0b       	sbc	r26, r26
    10ee:	bb 0b       	sbc	r27, r27
    10f0:	dc 01       	movw	r26, r24
    10f2:	99 27       	eor	r25, r25
    10f4:	88 27       	eor	r24, r24
    10f6:	60 e0       	ldi	r22, 0x00	; 0
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	84 2b       	or	r24, r20
    10fc:	95 2b       	or	r25, r21
    10fe:	a6 2b       	or	r26, r22
    1100:	b7 2b       	or	r27, r23
    1102:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1106:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    110a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    110e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1112:	b0 9b       	sbis	0x16, 0	; 22
    1114:	1b c0       	rjmp	.+54     	; 0x114c <__vector_3+0x98>
    1116:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    111a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    111e:	c9 01       	movw	r24, r18
    1120:	01 96       	adiw	r24, 0x01	; 1
    1122:	09 2e       	mov	r0, r25
    1124:	00 0c       	add	r0, r0
    1126:	aa 0b       	sbc	r26, r26
    1128:	bb 0b       	sbc	r27, r27
    112a:	dc 01       	movw	r26, r24
    112c:	99 27       	eor	r25, r25
    112e:	88 27       	eor	r24, r24
    1130:	60 e0       	ldi	r22, 0x00	; 0
    1132:	70 e0       	ldi	r23, 0x00	; 0
    1134:	84 2b       	or	r24, r20
    1136:	95 2b       	or	r25, r21
    1138:	a6 2b       	or	r26, r22
    113a:	b7 2b       	or	r27, r23
    113c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1140:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1144:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1148:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    114c:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x4>
    1150:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x5>
    1154:	30 97       	sbiw	r30, 0x00	; 0
    1156:	39 f0       	breq	.+14     	; 0x1166 <__vector_3+0xb2>
    1158:	62 e0       	ldi	r22, 0x02	; 2
    115a:	70 e0       	ldi	r23, 0x00	; 0
    115c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x4>
    1160:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x5>
    1164:	09 95       	icall
    1166:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    116a:	ff 91       	pop	r31
    116c:	ef 91       	pop	r30
    116e:	bf 91       	pop	r27
    1170:	af 91       	pop	r26
    1172:	9f 91       	pop	r25
    1174:	8f 91       	pop	r24
    1176:	7f 91       	pop	r23
    1178:	6f 91       	pop	r22
    117a:	5f 91       	pop	r21
    117c:	4f 91       	pop	r20
    117e:	3f 91       	pop	r19
    1180:	2f 91       	pop	r18
    1182:	0f 90       	pop	r0
    1184:	0f be       	out	0x3f, r0	; 63
    1186:	0f 90       	pop	r0
    1188:	1f 90       	pop	r1
    118a:	18 95       	reti

0000118c <__vector_4>:
    118c:	1f 92       	push	r1
    118e:	0f 92       	push	r0
    1190:	0f b6       	in	r0, 0x3f	; 63
    1192:	0f 92       	push	r0
    1194:	11 24       	eor	r1, r1
    1196:	2f 93       	push	r18
    1198:	3f 93       	push	r19
    119a:	4f 93       	push	r20
    119c:	5f 93       	push	r21
    119e:	6f 93       	push	r22
    11a0:	7f 93       	push	r23
    11a2:	8f 93       	push	r24
    11a4:	9f 93       	push	r25
    11a6:	af 93       	push	r26
    11a8:	bf 93       	push	r27
    11aa:	ef 93       	push	r30
    11ac:	ff 93       	push	r31
    11ae:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    11b2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    11b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11be:	c9 01       	movw	r24, r18
    11c0:	03 2e       	mov	r0, r19
    11c2:	00 0c       	add	r0, r0
    11c4:	aa 0b       	sbc	r26, r26
    11c6:	bb 0b       	sbc	r27, r27
    11c8:	dc 01       	movw	r26, r24
    11ca:	99 27       	eor	r25, r25
    11cc:	88 27       	eor	r24, r24
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	84 2b       	or	r24, r20
    11d4:	95 2b       	or	r25, r21
    11d6:	a6 2b       	or	r26, r22
    11d8:	b7 2b       	or	r27, r23
    11da:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    11de:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    11e2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    11e6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    11ea:	b0 9b       	sbis	0x16, 0	; 22
    11ec:	1b c0       	rjmp	.+54     	; 0x1224 <__vector_4+0x98>
    11ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11f6:	c9 01       	movw	r24, r18
    11f8:	01 96       	adiw	r24, 0x01	; 1
    11fa:	09 2e       	mov	r0, r25
    11fc:	00 0c       	add	r0, r0
    11fe:	aa 0b       	sbc	r26, r26
    1200:	bb 0b       	sbc	r27, r27
    1202:	dc 01       	movw	r26, r24
    1204:	99 27       	eor	r25, r25
    1206:	88 27       	eor	r24, r24
    1208:	60 e0       	ldi	r22, 0x00	; 0
    120a:	70 e0       	ldi	r23, 0x00	; 0
    120c:	84 2b       	or	r24, r20
    120e:	95 2b       	or	r25, r21
    1210:	a6 2b       	or	r26, r22
    1212:	b7 2b       	or	r27, r23
    1214:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1218:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    121c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1220:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1224:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x6>
    1228:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x7>
    122c:	30 97       	sbiw	r30, 0x00	; 0
    122e:	39 f0       	breq	.+14     	; 0x123e <__vector_4+0xb2>
    1230:	63 e0       	ldi	r22, 0x03	; 3
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x6>
    1238:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x7>
    123c:	09 95       	icall
    123e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1242:	ff 91       	pop	r31
    1244:	ef 91       	pop	r30
    1246:	bf 91       	pop	r27
    1248:	af 91       	pop	r26
    124a:	9f 91       	pop	r25
    124c:	8f 91       	pop	r24
    124e:	7f 91       	pop	r23
    1250:	6f 91       	pop	r22
    1252:	5f 91       	pop	r21
    1254:	4f 91       	pop	r20
    1256:	3f 91       	pop	r19
    1258:	2f 91       	pop	r18
    125a:	0f 90       	pop	r0
    125c:	0f be       	out	0x3f, r0	; 63
    125e:	0f 90       	pop	r0
    1260:	1f 90       	pop	r1
    1262:	18 95       	reti

00001264 <__vector_5>:
    1264:	1f 92       	push	r1
    1266:	0f 92       	push	r0
    1268:	0f b6       	in	r0, 0x3f	; 63
    126a:	0f 92       	push	r0
    126c:	11 24       	eor	r1, r1
    126e:	2f 93       	push	r18
    1270:	3f 93       	push	r19
    1272:	4f 93       	push	r20
    1274:	5f 93       	push	r21
    1276:	6f 93       	push	r22
    1278:	7f 93       	push	r23
    127a:	8f 93       	push	r24
    127c:	9f 93       	push	r25
    127e:	af 93       	push	r26
    1280:	bf 93       	push	r27
    1282:	ef 93       	push	r30
    1284:	ff 93       	push	r31
    1286:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    128a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    128e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1292:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1296:	c9 01       	movw	r24, r18
    1298:	03 2e       	mov	r0, r19
    129a:	00 0c       	add	r0, r0
    129c:	aa 0b       	sbc	r26, r26
    129e:	bb 0b       	sbc	r27, r27
    12a0:	dc 01       	movw	r26, r24
    12a2:	99 27       	eor	r25, r25
    12a4:	88 27       	eor	r24, r24
    12a6:	60 e0       	ldi	r22, 0x00	; 0
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	84 2b       	or	r24, r20
    12ac:	95 2b       	or	r25, r21
    12ae:	a6 2b       	or	r26, r22
    12b0:	b7 2b       	or	r27, r23
    12b2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    12b6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    12ba:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    12be:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    12c2:	b0 9b       	sbis	0x16, 0	; 22
    12c4:	1b c0       	rjmp	.+54     	; 0x12fc <__vector_5+0x98>
    12c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12ce:	c9 01       	movw	r24, r18
    12d0:	01 96       	adiw	r24, 0x01	; 1
    12d2:	09 2e       	mov	r0, r25
    12d4:	00 0c       	add	r0, r0
    12d6:	aa 0b       	sbc	r26, r26
    12d8:	bb 0b       	sbc	r27, r27
    12da:	dc 01       	movw	r26, r24
    12dc:	99 27       	eor	r25, r25
    12de:	88 27       	eor	r24, r24
    12e0:	60 e0       	ldi	r22, 0x00	; 0
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	84 2b       	or	r24, r20
    12e6:	95 2b       	or	r25, r21
    12e8:	a6 2b       	or	r26, r22
    12ea:	b7 2b       	or	r27, r23
    12ec:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    12f0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    12f4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    12f8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    12fc:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0x8>
    1300:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0x9>
    1304:	30 97       	sbiw	r30, 0x00	; 0
    1306:	39 f0       	breq	.+14     	; 0x1316 <__vector_5+0xb2>
    1308:	64 e0       	ldi	r22, 0x04	; 4
    130a:	70 e0       	ldi	r23, 0x00	; 0
    130c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0x8>
    1310:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0x9>
    1314:	09 95       	icall
    1316:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    131a:	ff 91       	pop	r31
    131c:	ef 91       	pop	r30
    131e:	bf 91       	pop	r27
    1320:	af 91       	pop	r26
    1322:	9f 91       	pop	r25
    1324:	8f 91       	pop	r24
    1326:	7f 91       	pop	r23
    1328:	6f 91       	pop	r22
    132a:	5f 91       	pop	r21
    132c:	4f 91       	pop	r20
    132e:	3f 91       	pop	r19
    1330:	2f 91       	pop	r18
    1332:	0f 90       	pop	r0
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	0f 90       	pop	r0
    1338:	1f 90       	pop	r1
    133a:	18 95       	reti

0000133c <__vector_10>:
    133c:	1f 92       	push	r1
    133e:	0f 92       	push	r0
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	0f 92       	push	r0
    1344:	11 24       	eor	r1, r1
    1346:	2f 93       	push	r18
    1348:	3f 93       	push	r19
    134a:	4f 93       	push	r20
    134c:	5f 93       	push	r21
    134e:	6f 93       	push	r22
    1350:	7f 93       	push	r23
    1352:	8f 93       	push	r24
    1354:	9f 93       	push	r25
    1356:	af 93       	push	r26
    1358:	bf 93       	push	r27
    135a:	ef 93       	push	r30
    135c:	ff 93       	push	r31
    135e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1362:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1366:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    136a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    136e:	c9 01       	movw	r24, r18
    1370:	03 2e       	mov	r0, r19
    1372:	00 0c       	add	r0, r0
    1374:	aa 0b       	sbc	r26, r26
    1376:	bb 0b       	sbc	r27, r27
    1378:	dc 01       	movw	r26, r24
    137a:	99 27       	eor	r25, r25
    137c:	88 27       	eor	r24, r24
    137e:	60 e0       	ldi	r22, 0x00	; 0
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	84 2b       	or	r24, r20
    1384:	95 2b       	or	r25, r21
    1386:	a6 2b       	or	r26, r22
    1388:	b7 2b       	or	r27, r23
    138a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    138e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1392:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1396:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    139a:	b0 9b       	sbis	0x16, 0	; 22
    139c:	1b c0       	rjmp	.+54     	; 0x13d4 <__vector_10+0x98>
    139e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13a6:	c9 01       	movw	r24, r18
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	09 2e       	mov	r0, r25
    13ac:	00 0c       	add	r0, r0
    13ae:	aa 0b       	sbc	r26, r26
    13b0:	bb 0b       	sbc	r27, r27
    13b2:	dc 01       	movw	r26, r24
    13b4:	99 27       	eor	r25, r25
    13b6:	88 27       	eor	r24, r24
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	84 2b       	or	r24, r20
    13be:	95 2b       	or	r25, r21
    13c0:	a6 2b       	or	r26, r22
    13c2:	b7 2b       	or	r27, r23
    13c4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    13c8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    13cc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    13d0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    13d4:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xa>
    13d8:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xb>
    13dc:	30 97       	sbiw	r30, 0x00	; 0
    13de:	39 f0       	breq	.+14     	; 0x13ee <__vector_10+0xb2>
    13e0:	65 e0       	ldi	r22, 0x05	; 5
    13e2:	70 e0       	ldi	r23, 0x00	; 0
    13e4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xa>
    13e8:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xb>
    13ec:	09 95       	icall
    13ee:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    13f2:	ff 91       	pop	r31
    13f4:	ef 91       	pop	r30
    13f6:	bf 91       	pop	r27
    13f8:	af 91       	pop	r26
    13fa:	9f 91       	pop	r25
    13fc:	8f 91       	pop	r24
    13fe:	7f 91       	pop	r23
    1400:	6f 91       	pop	r22
    1402:	5f 91       	pop	r21
    1404:	4f 91       	pop	r20
    1406:	3f 91       	pop	r19
    1408:	2f 91       	pop	r18
    140a:	0f 90       	pop	r0
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	0f 90       	pop	r0
    1410:	1f 90       	pop	r1
    1412:	18 95       	reti

00001414 <__vector_11>:
    1414:	1f 92       	push	r1
    1416:	0f 92       	push	r0
    1418:	0f b6       	in	r0, 0x3f	; 63
    141a:	0f 92       	push	r0
    141c:	11 24       	eor	r1, r1
    141e:	2f 93       	push	r18
    1420:	3f 93       	push	r19
    1422:	4f 93       	push	r20
    1424:	5f 93       	push	r21
    1426:	6f 93       	push	r22
    1428:	7f 93       	push	r23
    142a:	8f 93       	push	r24
    142c:	9f 93       	push	r25
    142e:	af 93       	push	r26
    1430:	bf 93       	push	r27
    1432:	ef 93       	push	r30
    1434:	ff 93       	push	r31
    1436:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    143a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    143e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1442:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1446:	c9 01       	movw	r24, r18
    1448:	03 2e       	mov	r0, r19
    144a:	00 0c       	add	r0, r0
    144c:	aa 0b       	sbc	r26, r26
    144e:	bb 0b       	sbc	r27, r27
    1450:	dc 01       	movw	r26, r24
    1452:	99 27       	eor	r25, r25
    1454:	88 27       	eor	r24, r24
    1456:	60 e0       	ldi	r22, 0x00	; 0
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	84 2b       	or	r24, r20
    145c:	95 2b       	or	r25, r21
    145e:	a6 2b       	or	r26, r22
    1460:	b7 2b       	or	r27, r23
    1462:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1466:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    146a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    146e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1472:	b0 9b       	sbis	0x16, 0	; 22
    1474:	1b c0       	rjmp	.+54     	; 0x14ac <__vector_11+0x98>
    1476:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    147a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    147e:	c9 01       	movw	r24, r18
    1480:	01 96       	adiw	r24, 0x01	; 1
    1482:	09 2e       	mov	r0, r25
    1484:	00 0c       	add	r0, r0
    1486:	aa 0b       	sbc	r26, r26
    1488:	bb 0b       	sbc	r27, r27
    148a:	dc 01       	movw	r26, r24
    148c:	99 27       	eor	r25, r25
    148e:	88 27       	eor	r24, r24
    1490:	60 e0       	ldi	r22, 0x00	; 0
    1492:	70 e0       	ldi	r23, 0x00	; 0
    1494:	84 2b       	or	r24, r20
    1496:	95 2b       	or	r25, r21
    1498:	a6 2b       	or	r26, r22
    149a:	b7 2b       	or	r27, r23
    149c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    14a0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    14a4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    14a8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    14ac:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0xc>
    14b0:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0xd>
    14b4:	30 97       	sbiw	r30, 0x00	; 0
    14b6:	39 f0       	breq	.+14     	; 0x14c6 <__vector_11+0xb2>
    14b8:	66 e0       	ldi	r22, 0x06	; 6
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0xc>
    14c0:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0xd>
    14c4:	09 95       	icall
    14c6:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    14ca:	ff 91       	pop	r31
    14cc:	ef 91       	pop	r30
    14ce:	bf 91       	pop	r27
    14d0:	af 91       	pop	r26
    14d2:	9f 91       	pop	r25
    14d4:	8f 91       	pop	r24
    14d6:	7f 91       	pop	r23
    14d8:	6f 91       	pop	r22
    14da:	5f 91       	pop	r21
    14dc:	4f 91       	pop	r20
    14de:	3f 91       	pop	r19
    14e0:	2f 91       	pop	r18
    14e2:	0f 90       	pop	r0
    14e4:	0f be       	out	0x3f, r0	; 63
    14e6:	0f 90       	pop	r0
    14e8:	1f 90       	pop	r1
    14ea:	18 95       	reti

000014ec <__vector_12>:
    14ec:	1f 92       	push	r1
    14ee:	0f 92       	push	r0
    14f0:	0f b6       	in	r0, 0x3f	; 63
    14f2:	0f 92       	push	r0
    14f4:	11 24       	eor	r1, r1
    14f6:	2f 93       	push	r18
    14f8:	3f 93       	push	r19
    14fa:	4f 93       	push	r20
    14fc:	5f 93       	push	r21
    14fe:	6f 93       	push	r22
    1500:	7f 93       	push	r23
    1502:	8f 93       	push	r24
    1504:	9f 93       	push	r25
    1506:	af 93       	push	r26
    1508:	bf 93       	push	r27
    150a:	ef 93       	push	r30
    150c:	ff 93       	push	r31
    150e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1512:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1516:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    151a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    151e:	c9 01       	movw	r24, r18
    1520:	03 2e       	mov	r0, r19
    1522:	00 0c       	add	r0, r0
    1524:	aa 0b       	sbc	r26, r26
    1526:	bb 0b       	sbc	r27, r27
    1528:	dc 01       	movw	r26, r24
    152a:	99 27       	eor	r25, r25
    152c:	88 27       	eor	r24, r24
    152e:	60 e0       	ldi	r22, 0x00	; 0
    1530:	70 e0       	ldi	r23, 0x00	; 0
    1532:	84 2b       	or	r24, r20
    1534:	95 2b       	or	r25, r21
    1536:	a6 2b       	or	r26, r22
    1538:	b7 2b       	or	r27, r23
    153a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    153e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1542:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1546:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    154a:	b0 9b       	sbis	0x16, 0	; 22
    154c:	1b c0       	rjmp	.+54     	; 0x1584 <__vector_12+0x98>
    154e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1552:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1556:	c9 01       	movw	r24, r18
    1558:	01 96       	adiw	r24, 0x01	; 1
    155a:	09 2e       	mov	r0, r25
    155c:	00 0c       	add	r0, r0
    155e:	aa 0b       	sbc	r26, r26
    1560:	bb 0b       	sbc	r27, r27
    1562:	dc 01       	movw	r26, r24
    1564:	99 27       	eor	r25, r25
    1566:	88 27       	eor	r24, r24
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	70 e0       	ldi	r23, 0x00	; 0
    156c:	84 2b       	or	r24, r20
    156e:	95 2b       	or	r25, r21
    1570:	a6 2b       	or	r26, r22
    1572:	b7 2b       	or	r27, r23
    1574:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1578:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    157c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1580:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1584:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0xe>
    1588:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0xf>
    158c:	30 97       	sbiw	r30, 0x00	; 0
    158e:	39 f0       	breq	.+14     	; 0x159e <__vector_12+0xb2>
    1590:	67 e0       	ldi	r22, 0x07	; 7
    1592:	70 e0       	ldi	r23, 0x00	; 0
    1594:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0xe>
    1598:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0xf>
    159c:	09 95       	icall
    159e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    15a2:	ff 91       	pop	r31
    15a4:	ef 91       	pop	r30
    15a6:	bf 91       	pop	r27
    15a8:	af 91       	pop	r26
    15aa:	9f 91       	pop	r25
    15ac:	8f 91       	pop	r24
    15ae:	7f 91       	pop	r23
    15b0:	6f 91       	pop	r22
    15b2:	5f 91       	pop	r21
    15b4:	4f 91       	pop	r20
    15b6:	3f 91       	pop	r19
    15b8:	2f 91       	pop	r18
    15ba:	0f 90       	pop	r0
    15bc:	0f be       	out	0x3f, r0	; 63
    15be:	0f 90       	pop	r0
    15c0:	1f 90       	pop	r1
    15c2:	18 95       	reti

000015c4 <__vector_13>:
    15c4:	1f 92       	push	r1
    15c6:	0f 92       	push	r0
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	0f 92       	push	r0
    15cc:	11 24       	eor	r1, r1
    15ce:	2f 93       	push	r18
    15d0:	3f 93       	push	r19
    15d2:	4f 93       	push	r20
    15d4:	5f 93       	push	r21
    15d6:	6f 93       	push	r22
    15d8:	7f 93       	push	r23
    15da:	8f 93       	push	r24
    15dc:	9f 93       	push	r25
    15de:	af 93       	push	r26
    15e0:	bf 93       	push	r27
    15e2:	ef 93       	push	r30
    15e4:	ff 93       	push	r31
    15e6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    15ea:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    15ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15f6:	c9 01       	movw	r24, r18
    15f8:	03 2e       	mov	r0, r19
    15fa:	00 0c       	add	r0, r0
    15fc:	aa 0b       	sbc	r26, r26
    15fe:	bb 0b       	sbc	r27, r27
    1600:	dc 01       	movw	r26, r24
    1602:	99 27       	eor	r25, r25
    1604:	88 27       	eor	r24, r24
    1606:	60 e0       	ldi	r22, 0x00	; 0
    1608:	70 e0       	ldi	r23, 0x00	; 0
    160a:	84 2b       	or	r24, r20
    160c:	95 2b       	or	r25, r21
    160e:	a6 2b       	or	r26, r22
    1610:	b7 2b       	or	r27, r23
    1612:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1616:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    161a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    161e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1622:	b0 9b       	sbis	0x16, 0	; 22
    1624:	1b c0       	rjmp	.+54     	; 0x165c <__vector_13+0x98>
    1626:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    162a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    162e:	c9 01       	movw	r24, r18
    1630:	01 96       	adiw	r24, 0x01	; 1
    1632:	09 2e       	mov	r0, r25
    1634:	00 0c       	add	r0, r0
    1636:	aa 0b       	sbc	r26, r26
    1638:	bb 0b       	sbc	r27, r27
    163a:	dc 01       	movw	r26, r24
    163c:	99 27       	eor	r25, r25
    163e:	88 27       	eor	r24, r24
    1640:	60 e0       	ldi	r22, 0x00	; 0
    1642:	70 e0       	ldi	r23, 0x00	; 0
    1644:	84 2b       	or	r24, r20
    1646:	95 2b       	or	r25, r21
    1648:	a6 2b       	or	r26, r22
    164a:	b7 2b       	or	r27, r23
    164c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1650:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1654:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1658:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    165c:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x10>
    1660:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x11>
    1664:	30 97       	sbiw	r30, 0x00	; 0
    1666:	39 f0       	breq	.+14     	; 0x1676 <__vector_13+0xb2>
    1668:	68 e0       	ldi	r22, 0x08	; 8
    166a:	70 e0       	ldi	r23, 0x00	; 0
    166c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x10>
    1670:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x11>
    1674:	09 95       	icall
    1676:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    167a:	ff 91       	pop	r31
    167c:	ef 91       	pop	r30
    167e:	bf 91       	pop	r27
    1680:	af 91       	pop	r26
    1682:	9f 91       	pop	r25
    1684:	8f 91       	pop	r24
    1686:	7f 91       	pop	r23
    1688:	6f 91       	pop	r22
    168a:	5f 91       	pop	r21
    168c:	4f 91       	pop	r20
    168e:	3f 91       	pop	r19
    1690:	2f 91       	pop	r18
    1692:	0f 90       	pop	r0
    1694:	0f be       	out	0x3f, r0	; 63
    1696:	0f 90       	pop	r0
    1698:	1f 90       	pop	r1
    169a:	18 95       	reti

0000169c <__vector_14>:
    169c:	1f 92       	push	r1
    169e:	0f 92       	push	r0
    16a0:	0f b6       	in	r0, 0x3f	; 63
    16a2:	0f 92       	push	r0
    16a4:	11 24       	eor	r1, r1
    16a6:	2f 93       	push	r18
    16a8:	3f 93       	push	r19
    16aa:	4f 93       	push	r20
    16ac:	5f 93       	push	r21
    16ae:	6f 93       	push	r22
    16b0:	7f 93       	push	r23
    16b2:	8f 93       	push	r24
    16b4:	9f 93       	push	r25
    16b6:	af 93       	push	r26
    16b8:	bf 93       	push	r27
    16ba:	ef 93       	push	r30
    16bc:	ff 93       	push	r31
    16be:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    16c2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    16c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16ce:	c9 01       	movw	r24, r18
    16d0:	03 2e       	mov	r0, r19
    16d2:	00 0c       	add	r0, r0
    16d4:	aa 0b       	sbc	r26, r26
    16d6:	bb 0b       	sbc	r27, r27
    16d8:	dc 01       	movw	r26, r24
    16da:	99 27       	eor	r25, r25
    16dc:	88 27       	eor	r24, r24
    16de:	60 e0       	ldi	r22, 0x00	; 0
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	84 2b       	or	r24, r20
    16e4:	95 2b       	or	r25, r21
    16e6:	a6 2b       	or	r26, r22
    16e8:	b7 2b       	or	r27, r23
    16ea:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    16ee:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    16f2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    16f6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    16fa:	b0 9b       	sbis	0x16, 0	; 22
    16fc:	1b c0       	rjmp	.+54     	; 0x1734 <__vector_14+0x98>
    16fe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1702:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1706:	c9 01       	movw	r24, r18
    1708:	01 96       	adiw	r24, 0x01	; 1
    170a:	09 2e       	mov	r0, r25
    170c:	00 0c       	add	r0, r0
    170e:	aa 0b       	sbc	r26, r26
    1710:	bb 0b       	sbc	r27, r27
    1712:	dc 01       	movw	r26, r24
    1714:	99 27       	eor	r25, r25
    1716:	88 27       	eor	r24, r24
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	70 e0       	ldi	r23, 0x00	; 0
    171c:	84 2b       	or	r24, r20
    171e:	95 2b       	or	r25, r21
    1720:	a6 2b       	or	r26, r22
    1722:	b7 2b       	or	r27, r23
    1724:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1728:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    172c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1730:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1734:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x12>
    1738:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x13>
    173c:	30 97       	sbiw	r30, 0x00	; 0
    173e:	39 f0       	breq	.+14     	; 0x174e <__vector_14+0xb2>
    1740:	69 e0       	ldi	r22, 0x09	; 9
    1742:	70 e0       	ldi	r23, 0x00	; 0
    1744:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x12>
    1748:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x13>
    174c:	09 95       	icall
    174e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1752:	ff 91       	pop	r31
    1754:	ef 91       	pop	r30
    1756:	bf 91       	pop	r27
    1758:	af 91       	pop	r26
    175a:	9f 91       	pop	r25
    175c:	8f 91       	pop	r24
    175e:	7f 91       	pop	r23
    1760:	6f 91       	pop	r22
    1762:	5f 91       	pop	r21
    1764:	4f 91       	pop	r20
    1766:	3f 91       	pop	r19
    1768:	2f 91       	pop	r18
    176a:	0f 90       	pop	r0
    176c:	0f be       	out	0x3f, r0	; 63
    176e:	0f 90       	pop	r0
    1770:	1f 90       	pop	r1
    1772:	18 95       	reti

00001774 <__vector_15>:
    1774:	1f 92       	push	r1
    1776:	0f 92       	push	r0
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	0f 92       	push	r0
    177c:	11 24       	eor	r1, r1
    177e:	2f 93       	push	r18
    1780:	3f 93       	push	r19
    1782:	4f 93       	push	r20
    1784:	5f 93       	push	r21
    1786:	6f 93       	push	r22
    1788:	7f 93       	push	r23
    178a:	8f 93       	push	r24
    178c:	9f 93       	push	r25
    178e:	af 93       	push	r26
    1790:	bf 93       	push	r27
    1792:	ef 93       	push	r30
    1794:	ff 93       	push	r31
    1796:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    179a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    179e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17a6:	c9 01       	movw	r24, r18
    17a8:	03 2e       	mov	r0, r19
    17aa:	00 0c       	add	r0, r0
    17ac:	aa 0b       	sbc	r26, r26
    17ae:	bb 0b       	sbc	r27, r27
    17b0:	dc 01       	movw	r26, r24
    17b2:	99 27       	eor	r25, r25
    17b4:	88 27       	eor	r24, r24
    17b6:	60 e0       	ldi	r22, 0x00	; 0
    17b8:	70 e0       	ldi	r23, 0x00	; 0
    17ba:	84 2b       	or	r24, r20
    17bc:	95 2b       	or	r25, r21
    17be:	a6 2b       	or	r26, r22
    17c0:	b7 2b       	or	r27, r23
    17c2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    17c6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    17ca:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    17ce:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    17d2:	b0 9b       	sbis	0x16, 0	; 22
    17d4:	1b c0       	rjmp	.+54     	; 0x180c <__vector_15+0x98>
    17d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17de:	c9 01       	movw	r24, r18
    17e0:	01 96       	adiw	r24, 0x01	; 1
    17e2:	09 2e       	mov	r0, r25
    17e4:	00 0c       	add	r0, r0
    17e6:	aa 0b       	sbc	r26, r26
    17e8:	bb 0b       	sbc	r27, r27
    17ea:	dc 01       	movw	r26, r24
    17ec:	99 27       	eor	r25, r25
    17ee:	88 27       	eor	r24, r24
    17f0:	60 e0       	ldi	r22, 0x00	; 0
    17f2:	70 e0       	ldi	r23, 0x00	; 0
    17f4:	84 2b       	or	r24, r20
    17f6:	95 2b       	or	r25, r21
    17f8:	a6 2b       	or	r26, r22
    17fa:	b7 2b       	or	r27, r23
    17fc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1800:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1804:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1808:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    180c:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x14>
    1810:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x15>
    1814:	30 97       	sbiw	r30, 0x00	; 0
    1816:	39 f0       	breq	.+14     	; 0x1826 <__vector_15+0xb2>
    1818:	6a e0       	ldi	r22, 0x0A	; 10
    181a:	70 e0       	ldi	r23, 0x00	; 0
    181c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x14>
    1820:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x15>
    1824:	09 95       	icall
    1826:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    182a:	ff 91       	pop	r31
    182c:	ef 91       	pop	r30
    182e:	bf 91       	pop	r27
    1830:	af 91       	pop	r26
    1832:	9f 91       	pop	r25
    1834:	8f 91       	pop	r24
    1836:	7f 91       	pop	r23
    1838:	6f 91       	pop	r22
    183a:	5f 91       	pop	r21
    183c:	4f 91       	pop	r20
    183e:	3f 91       	pop	r19
    1840:	2f 91       	pop	r18
    1842:	0f 90       	pop	r0
    1844:	0f be       	out	0x3f, r0	; 63
    1846:	0f 90       	pop	r0
    1848:	1f 90       	pop	r1
    184a:	18 95       	reti

0000184c <__vector_16>:
    184c:	1f 92       	push	r1
    184e:	0f 92       	push	r0
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	0f 92       	push	r0
    1854:	11 24       	eor	r1, r1
    1856:	2f 93       	push	r18
    1858:	3f 93       	push	r19
    185a:	4f 93       	push	r20
    185c:	5f 93       	push	r21
    185e:	6f 93       	push	r22
    1860:	7f 93       	push	r23
    1862:	8f 93       	push	r24
    1864:	9f 93       	push	r25
    1866:	af 93       	push	r26
    1868:	bf 93       	push	r27
    186a:	ef 93       	push	r30
    186c:	ff 93       	push	r31
    186e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1872:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1876:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    187a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    187e:	c9 01       	movw	r24, r18
    1880:	03 2e       	mov	r0, r19
    1882:	00 0c       	add	r0, r0
    1884:	aa 0b       	sbc	r26, r26
    1886:	bb 0b       	sbc	r27, r27
    1888:	dc 01       	movw	r26, r24
    188a:	99 27       	eor	r25, r25
    188c:	88 27       	eor	r24, r24
    188e:	60 e0       	ldi	r22, 0x00	; 0
    1890:	70 e0       	ldi	r23, 0x00	; 0
    1892:	84 2b       	or	r24, r20
    1894:	95 2b       	or	r25, r21
    1896:	a6 2b       	or	r26, r22
    1898:	b7 2b       	or	r27, r23
    189a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    189e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    18a2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    18a6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    18aa:	b0 9b       	sbis	0x16, 0	; 22
    18ac:	1b c0       	rjmp	.+54     	; 0x18e4 <__vector_16+0x98>
    18ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18b6:	c9 01       	movw	r24, r18
    18b8:	01 96       	adiw	r24, 0x01	; 1
    18ba:	09 2e       	mov	r0, r25
    18bc:	00 0c       	add	r0, r0
    18be:	aa 0b       	sbc	r26, r26
    18c0:	bb 0b       	sbc	r27, r27
    18c2:	dc 01       	movw	r26, r24
    18c4:	99 27       	eor	r25, r25
    18c6:	88 27       	eor	r24, r24
    18c8:	60 e0       	ldi	r22, 0x00	; 0
    18ca:	70 e0       	ldi	r23, 0x00	; 0
    18cc:	84 2b       	or	r24, r20
    18ce:	95 2b       	or	r25, r21
    18d0:	a6 2b       	or	r26, r22
    18d2:	b7 2b       	or	r27, r23
    18d4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    18d8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    18dc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    18e0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    18e4:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x16>
    18e8:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x17>
    18ec:	30 97       	sbiw	r30, 0x00	; 0
    18ee:	39 f0       	breq	.+14     	; 0x18fe <__vector_16+0xb2>
    18f0:	6b e0       	ldi	r22, 0x0B	; 11
    18f2:	70 e0       	ldi	r23, 0x00	; 0
    18f4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x16>
    18f8:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x17>
    18fc:	09 95       	icall
    18fe:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1902:	ff 91       	pop	r31
    1904:	ef 91       	pop	r30
    1906:	bf 91       	pop	r27
    1908:	af 91       	pop	r26
    190a:	9f 91       	pop	r25
    190c:	8f 91       	pop	r24
    190e:	7f 91       	pop	r23
    1910:	6f 91       	pop	r22
    1912:	5f 91       	pop	r21
    1914:	4f 91       	pop	r20
    1916:	3f 91       	pop	r19
    1918:	2f 91       	pop	r18
    191a:	0f 90       	pop	r0
    191c:	0f be       	out	0x3f, r0	; 63
    191e:	0f 90       	pop	r0
    1920:	1f 90       	pop	r1
    1922:	18 95       	reti

00001924 <__vector_17>:
    1924:	1f 92       	push	r1
    1926:	0f 92       	push	r0
    1928:	0f b6       	in	r0, 0x3f	; 63
    192a:	0f 92       	push	r0
    192c:	11 24       	eor	r1, r1
    192e:	2f 93       	push	r18
    1930:	3f 93       	push	r19
    1932:	4f 93       	push	r20
    1934:	5f 93       	push	r21
    1936:	6f 93       	push	r22
    1938:	7f 93       	push	r23
    193a:	8f 93       	push	r24
    193c:	9f 93       	push	r25
    193e:	af 93       	push	r26
    1940:	bf 93       	push	r27
    1942:	ef 93       	push	r30
    1944:	ff 93       	push	r31
    1946:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    194a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    194e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1952:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1956:	c9 01       	movw	r24, r18
    1958:	03 2e       	mov	r0, r19
    195a:	00 0c       	add	r0, r0
    195c:	aa 0b       	sbc	r26, r26
    195e:	bb 0b       	sbc	r27, r27
    1960:	dc 01       	movw	r26, r24
    1962:	99 27       	eor	r25, r25
    1964:	88 27       	eor	r24, r24
    1966:	60 e0       	ldi	r22, 0x00	; 0
    1968:	70 e0       	ldi	r23, 0x00	; 0
    196a:	84 2b       	or	r24, r20
    196c:	95 2b       	or	r25, r21
    196e:	a6 2b       	or	r26, r22
    1970:	b7 2b       	or	r27, r23
    1972:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1976:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    197a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    197e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1982:	b0 9b       	sbis	0x16, 0	; 22
    1984:	1b c0       	rjmp	.+54     	; 0x19bc <__vector_17+0x98>
    1986:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    198a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    198e:	c9 01       	movw	r24, r18
    1990:	01 96       	adiw	r24, 0x01	; 1
    1992:	09 2e       	mov	r0, r25
    1994:	00 0c       	add	r0, r0
    1996:	aa 0b       	sbc	r26, r26
    1998:	bb 0b       	sbc	r27, r27
    199a:	dc 01       	movw	r26, r24
    199c:	99 27       	eor	r25, r25
    199e:	88 27       	eor	r24, r24
    19a0:	60 e0       	ldi	r22, 0x00	; 0
    19a2:	70 e0       	ldi	r23, 0x00	; 0
    19a4:	84 2b       	or	r24, r20
    19a6:	95 2b       	or	r25, r21
    19a8:	a6 2b       	or	r26, r22
    19aa:	b7 2b       	or	r27, r23
    19ac:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    19b0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    19b4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    19b8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    19bc:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x18>
    19c0:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x19>
    19c4:	30 97       	sbiw	r30, 0x00	; 0
    19c6:	39 f0       	breq	.+14     	; 0x19d6 <__vector_17+0xb2>
    19c8:	6c e0       	ldi	r22, 0x0C	; 12
    19ca:	70 e0       	ldi	r23, 0x00	; 0
    19cc:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x18>
    19d0:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x19>
    19d4:	09 95       	icall
    19d6:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    19da:	ff 91       	pop	r31
    19dc:	ef 91       	pop	r30
    19de:	bf 91       	pop	r27
    19e0:	af 91       	pop	r26
    19e2:	9f 91       	pop	r25
    19e4:	8f 91       	pop	r24
    19e6:	7f 91       	pop	r23
    19e8:	6f 91       	pop	r22
    19ea:	5f 91       	pop	r21
    19ec:	4f 91       	pop	r20
    19ee:	3f 91       	pop	r19
    19f0:	2f 91       	pop	r18
    19f2:	0f 90       	pop	r0
    19f4:	0f be       	out	0x3f, r0	; 63
    19f6:	0f 90       	pop	r0
    19f8:	1f 90       	pop	r1
    19fa:	18 95       	reti

000019fc <__vector_18>:
    19fc:	1f 92       	push	r1
    19fe:	0f 92       	push	r0
    1a00:	0f b6       	in	r0, 0x3f	; 63
    1a02:	0f 92       	push	r0
    1a04:	11 24       	eor	r1, r1
    1a06:	2f 93       	push	r18
    1a08:	3f 93       	push	r19
    1a0a:	4f 93       	push	r20
    1a0c:	5f 93       	push	r21
    1a0e:	6f 93       	push	r22
    1a10:	7f 93       	push	r23
    1a12:	8f 93       	push	r24
    1a14:	9f 93       	push	r25
    1a16:	af 93       	push	r26
    1a18:	bf 93       	push	r27
    1a1a:	ef 93       	push	r30
    1a1c:	ff 93       	push	r31
    1a1e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1a22:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1a26:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a2a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a2e:	c9 01       	movw	r24, r18
    1a30:	03 2e       	mov	r0, r19
    1a32:	00 0c       	add	r0, r0
    1a34:	aa 0b       	sbc	r26, r26
    1a36:	bb 0b       	sbc	r27, r27
    1a38:	dc 01       	movw	r26, r24
    1a3a:	99 27       	eor	r25, r25
    1a3c:	88 27       	eor	r24, r24
    1a3e:	60 e0       	ldi	r22, 0x00	; 0
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	84 2b       	or	r24, r20
    1a44:	95 2b       	or	r25, r21
    1a46:	a6 2b       	or	r26, r22
    1a48:	b7 2b       	or	r27, r23
    1a4a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a4e:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a52:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a56:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a5a:	b0 9b       	sbis	0x16, 0	; 22
    1a5c:	1b c0       	rjmp	.+54     	; 0x1a94 <__vector_18+0x98>
    1a5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a66:	c9 01       	movw	r24, r18
    1a68:	01 96       	adiw	r24, 0x01	; 1
    1a6a:	09 2e       	mov	r0, r25
    1a6c:	00 0c       	add	r0, r0
    1a6e:	aa 0b       	sbc	r26, r26
    1a70:	bb 0b       	sbc	r27, r27
    1a72:	dc 01       	movw	r26, r24
    1a74:	99 27       	eor	r25, r25
    1a76:	88 27       	eor	r24, r24
    1a78:	60 e0       	ldi	r22, 0x00	; 0
    1a7a:	70 e0       	ldi	r23, 0x00	; 0
    1a7c:	84 2b       	or	r24, r20
    1a7e:	95 2b       	or	r25, r21
    1a80:	a6 2b       	or	r26, r22
    1a82:	b7 2b       	or	r27, r23
    1a84:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a88:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a8c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a90:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a94:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1a>
    1a98:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1b>
    1a9c:	30 97       	sbiw	r30, 0x00	; 0
    1a9e:	39 f0       	breq	.+14     	; 0x1aae <__vector_18+0xb2>
    1aa0:	6d e0       	ldi	r22, 0x0D	; 13
    1aa2:	70 e0       	ldi	r23, 0x00	; 0
    1aa4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1a>
    1aa8:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1b>
    1aac:	09 95       	icall
    1aae:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1ab2:	ff 91       	pop	r31
    1ab4:	ef 91       	pop	r30
    1ab6:	bf 91       	pop	r27
    1ab8:	af 91       	pop	r26
    1aba:	9f 91       	pop	r25
    1abc:	8f 91       	pop	r24
    1abe:	7f 91       	pop	r23
    1ac0:	6f 91       	pop	r22
    1ac2:	5f 91       	pop	r21
    1ac4:	4f 91       	pop	r20
    1ac6:	3f 91       	pop	r19
    1ac8:	2f 91       	pop	r18
    1aca:	0f 90       	pop	r0
    1acc:	0f be       	out	0x3f, r0	; 63
    1ace:	0f 90       	pop	r0
    1ad0:	1f 90       	pop	r1
    1ad2:	18 95       	reti

00001ad4 <__vector_19>:
    1ad4:	1f 92       	push	r1
    1ad6:	0f 92       	push	r0
    1ad8:	0f b6       	in	r0, 0x3f	; 63
    1ada:	0f 92       	push	r0
    1adc:	11 24       	eor	r1, r1
    1ade:	2f 93       	push	r18
    1ae0:	3f 93       	push	r19
    1ae2:	4f 93       	push	r20
    1ae4:	5f 93       	push	r21
    1ae6:	6f 93       	push	r22
    1ae8:	7f 93       	push	r23
    1aea:	8f 93       	push	r24
    1aec:	9f 93       	push	r25
    1aee:	af 93       	push	r26
    1af0:	bf 93       	push	r27
    1af2:	ef 93       	push	r30
    1af4:	ff 93       	push	r31
    1af6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1afa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1afe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b02:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b06:	c9 01       	movw	r24, r18
    1b08:	03 2e       	mov	r0, r19
    1b0a:	00 0c       	add	r0, r0
    1b0c:	aa 0b       	sbc	r26, r26
    1b0e:	bb 0b       	sbc	r27, r27
    1b10:	dc 01       	movw	r26, r24
    1b12:	99 27       	eor	r25, r25
    1b14:	88 27       	eor	r24, r24
    1b16:	60 e0       	ldi	r22, 0x00	; 0
    1b18:	70 e0       	ldi	r23, 0x00	; 0
    1b1a:	84 2b       	or	r24, r20
    1b1c:	95 2b       	or	r25, r21
    1b1e:	a6 2b       	or	r26, r22
    1b20:	b7 2b       	or	r27, r23
    1b22:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1b26:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1b2a:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1b2e:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1b32:	b0 9b       	sbis	0x16, 0	; 22
    1b34:	1b c0       	rjmp	.+54     	; 0x1b6c <__vector_19+0x98>
    1b36:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b3a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b3e:	c9 01       	movw	r24, r18
    1b40:	01 96       	adiw	r24, 0x01	; 1
    1b42:	09 2e       	mov	r0, r25
    1b44:	00 0c       	add	r0, r0
    1b46:	aa 0b       	sbc	r26, r26
    1b48:	bb 0b       	sbc	r27, r27
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	99 27       	eor	r25, r25
    1b4e:	88 27       	eor	r24, r24
    1b50:	60 e0       	ldi	r22, 0x00	; 0
    1b52:	70 e0       	ldi	r23, 0x00	; 0
    1b54:	84 2b       	or	r24, r20
    1b56:	95 2b       	or	r25, r21
    1b58:	a6 2b       	or	r26, r22
    1b5a:	b7 2b       	or	r27, r23
    1b5c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1b60:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1b64:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1b68:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1b6c:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x1c>
    1b70:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x1d>
    1b74:	30 97       	sbiw	r30, 0x00	; 0
    1b76:	39 f0       	breq	.+14     	; 0x1b86 <__vector_19+0xb2>
    1b78:	6e e0       	ldi	r22, 0x0E	; 14
    1b7a:	70 e0       	ldi	r23, 0x00	; 0
    1b7c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x1c>
    1b80:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x1d>
    1b84:	09 95       	icall
    1b86:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1b8a:	ff 91       	pop	r31
    1b8c:	ef 91       	pop	r30
    1b8e:	bf 91       	pop	r27
    1b90:	af 91       	pop	r26
    1b92:	9f 91       	pop	r25
    1b94:	8f 91       	pop	r24
    1b96:	7f 91       	pop	r23
    1b98:	6f 91       	pop	r22
    1b9a:	5f 91       	pop	r21
    1b9c:	4f 91       	pop	r20
    1b9e:	3f 91       	pop	r19
    1ba0:	2f 91       	pop	r18
    1ba2:	0f 90       	pop	r0
    1ba4:	0f be       	out	0x3f, r0	; 63
    1ba6:	0f 90       	pop	r0
    1ba8:	1f 90       	pop	r1
    1baa:	18 95       	reti

00001bac <__vector_20>:
    1bac:	1f 92       	push	r1
    1bae:	0f 92       	push	r0
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	0f 92       	push	r0
    1bb4:	11 24       	eor	r1, r1
    1bb6:	2f 93       	push	r18
    1bb8:	3f 93       	push	r19
    1bba:	4f 93       	push	r20
    1bbc:	5f 93       	push	r21
    1bbe:	6f 93       	push	r22
    1bc0:	7f 93       	push	r23
    1bc2:	8f 93       	push	r24
    1bc4:	9f 93       	push	r25
    1bc6:	af 93       	push	r26
    1bc8:	bf 93       	push	r27
    1bca:	ef 93       	push	r30
    1bcc:	ff 93       	push	r31
    1bce:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1bd2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1bd6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bda:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bde:	c9 01       	movw	r24, r18
    1be0:	03 2e       	mov	r0, r19
    1be2:	00 0c       	add	r0, r0
    1be4:	aa 0b       	sbc	r26, r26
    1be6:	bb 0b       	sbc	r27, r27
    1be8:	dc 01       	movw	r26, r24
    1bea:	99 27       	eor	r25, r25
    1bec:	88 27       	eor	r24, r24
    1bee:	60 e0       	ldi	r22, 0x00	; 0
    1bf0:	70 e0       	ldi	r23, 0x00	; 0
    1bf2:	84 2b       	or	r24, r20
    1bf4:	95 2b       	or	r25, r21
    1bf6:	a6 2b       	or	r26, r22
    1bf8:	b7 2b       	or	r27, r23
    1bfa:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1bfe:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1c02:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1c06:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1c0a:	b0 9b       	sbis	0x16, 0	; 22
    1c0c:	1b c0       	rjmp	.+54     	; 0x1c44 <__vector_20+0x98>
    1c0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c16:	c9 01       	movw	r24, r18
    1c18:	01 96       	adiw	r24, 0x01	; 1
    1c1a:	09 2e       	mov	r0, r25
    1c1c:	00 0c       	add	r0, r0
    1c1e:	aa 0b       	sbc	r26, r26
    1c20:	bb 0b       	sbc	r27, r27
    1c22:	dc 01       	movw	r26, r24
    1c24:	99 27       	eor	r25, r25
    1c26:	88 27       	eor	r24, r24
    1c28:	60 e0       	ldi	r22, 0x00	; 0
    1c2a:	70 e0       	ldi	r23, 0x00	; 0
    1c2c:	84 2b       	or	r24, r20
    1c2e:	95 2b       	or	r25, r21
    1c30:	a6 2b       	or	r26, r22
    1c32:	b7 2b       	or	r27, r23
    1c34:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1c38:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1c3c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1c40:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1c44:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x1e>
    1c48:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x1f>
    1c4c:	30 97       	sbiw	r30, 0x00	; 0
    1c4e:	39 f0       	breq	.+14     	; 0x1c5e <__vector_20+0xb2>
    1c50:	6f e0       	ldi	r22, 0x0F	; 15
    1c52:	70 e0       	ldi	r23, 0x00	; 0
    1c54:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x1e>
    1c58:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x1f>
    1c5c:	09 95       	icall
    1c5e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1c62:	ff 91       	pop	r31
    1c64:	ef 91       	pop	r30
    1c66:	bf 91       	pop	r27
    1c68:	af 91       	pop	r26
    1c6a:	9f 91       	pop	r25
    1c6c:	8f 91       	pop	r24
    1c6e:	7f 91       	pop	r23
    1c70:	6f 91       	pop	r22
    1c72:	5f 91       	pop	r21
    1c74:	4f 91       	pop	r20
    1c76:	3f 91       	pop	r19
    1c78:	2f 91       	pop	r18
    1c7a:	0f 90       	pop	r0
    1c7c:	0f be       	out	0x3f, r0	; 63
    1c7e:	0f 90       	pop	r0
    1c80:	1f 90       	pop	r1
    1c82:	18 95       	reti

00001c84 <__vector_21>:
    1c84:	1f 92       	push	r1
    1c86:	0f 92       	push	r0
    1c88:	0f b6       	in	r0, 0x3f	; 63
    1c8a:	0f 92       	push	r0
    1c8c:	11 24       	eor	r1, r1
    1c8e:	2f 93       	push	r18
    1c90:	3f 93       	push	r19
    1c92:	4f 93       	push	r20
    1c94:	5f 93       	push	r21
    1c96:	6f 93       	push	r22
    1c98:	7f 93       	push	r23
    1c9a:	8f 93       	push	r24
    1c9c:	9f 93       	push	r25
    1c9e:	af 93       	push	r26
    1ca0:	bf 93       	push	r27
    1ca2:	ef 93       	push	r30
    1ca4:	ff 93       	push	r31
    1ca6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1caa:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1cae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cb2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cb6:	c9 01       	movw	r24, r18
    1cb8:	03 2e       	mov	r0, r19
    1cba:	00 0c       	add	r0, r0
    1cbc:	aa 0b       	sbc	r26, r26
    1cbe:	bb 0b       	sbc	r27, r27
    1cc0:	dc 01       	movw	r26, r24
    1cc2:	99 27       	eor	r25, r25
    1cc4:	88 27       	eor	r24, r24
    1cc6:	60 e0       	ldi	r22, 0x00	; 0
    1cc8:	70 e0       	ldi	r23, 0x00	; 0
    1cca:	84 2b       	or	r24, r20
    1ccc:	95 2b       	or	r25, r21
    1cce:	a6 2b       	or	r26, r22
    1cd0:	b7 2b       	or	r27, r23
    1cd2:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1cd6:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1cda:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1cde:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1ce2:	b0 9b       	sbis	0x16, 0	; 22
    1ce4:	1b c0       	rjmp	.+54     	; 0x1d1c <__vector_21+0x98>
    1ce6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cee:	c9 01       	movw	r24, r18
    1cf0:	01 96       	adiw	r24, 0x01	; 1
    1cf2:	09 2e       	mov	r0, r25
    1cf4:	00 0c       	add	r0, r0
    1cf6:	aa 0b       	sbc	r26, r26
    1cf8:	bb 0b       	sbc	r27, r27
    1cfa:	dc 01       	movw	r26, r24
    1cfc:	99 27       	eor	r25, r25
    1cfe:	88 27       	eor	r24, r24
    1d00:	60 e0       	ldi	r22, 0x00	; 0
    1d02:	70 e0       	ldi	r23, 0x00	; 0
    1d04:	84 2b       	or	r24, r20
    1d06:	95 2b       	or	r25, r21
    1d08:	a6 2b       	or	r26, r22
    1d0a:	b7 2b       	or	r27, r23
    1d0c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1d10:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1d14:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1d18:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1d1c:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x20>
    1d20:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x21>
    1d24:	30 97       	sbiw	r30, 0x00	; 0
    1d26:	39 f0       	breq	.+14     	; 0x1d36 <__vector_21+0xb2>
    1d28:	60 e1       	ldi	r22, 0x10	; 16
    1d2a:	70 e0       	ldi	r23, 0x00	; 0
    1d2c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x20>
    1d30:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x21>
    1d34:	09 95       	icall
    1d36:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1d3a:	ff 91       	pop	r31
    1d3c:	ef 91       	pop	r30
    1d3e:	bf 91       	pop	r27
    1d40:	af 91       	pop	r26
    1d42:	9f 91       	pop	r25
    1d44:	8f 91       	pop	r24
    1d46:	7f 91       	pop	r23
    1d48:	6f 91       	pop	r22
    1d4a:	5f 91       	pop	r21
    1d4c:	4f 91       	pop	r20
    1d4e:	3f 91       	pop	r19
    1d50:	2f 91       	pop	r18
    1d52:	0f 90       	pop	r0
    1d54:	0f be       	out	0x3f, r0	; 63
    1d56:	0f 90       	pop	r0
    1d58:	1f 90       	pop	r1
    1d5a:	18 95       	reti

00001d5c <__vector_22>:
    1d5c:	1f 92       	push	r1
    1d5e:	0f 92       	push	r0
    1d60:	0f b6       	in	r0, 0x3f	; 63
    1d62:	0f 92       	push	r0
    1d64:	11 24       	eor	r1, r1
    1d66:	2f 93       	push	r18
    1d68:	3f 93       	push	r19
    1d6a:	4f 93       	push	r20
    1d6c:	5f 93       	push	r21
    1d6e:	6f 93       	push	r22
    1d70:	7f 93       	push	r23
    1d72:	8f 93       	push	r24
    1d74:	9f 93       	push	r25
    1d76:	af 93       	push	r26
    1d78:	bf 93       	push	r27
    1d7a:	ef 93       	push	r30
    1d7c:	ff 93       	push	r31
    1d7e:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1d82:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1d86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d8e:	c9 01       	movw	r24, r18
    1d90:	03 2e       	mov	r0, r19
    1d92:	00 0c       	add	r0, r0
    1d94:	aa 0b       	sbc	r26, r26
    1d96:	bb 0b       	sbc	r27, r27
    1d98:	dc 01       	movw	r26, r24
    1d9a:	99 27       	eor	r25, r25
    1d9c:	88 27       	eor	r24, r24
    1d9e:	60 e0       	ldi	r22, 0x00	; 0
    1da0:	70 e0       	ldi	r23, 0x00	; 0
    1da2:	84 2b       	or	r24, r20
    1da4:	95 2b       	or	r25, r21
    1da6:	a6 2b       	or	r26, r22
    1da8:	b7 2b       	or	r27, r23
    1daa:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1dae:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1db2:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1db6:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1dba:	b0 9b       	sbis	0x16, 0	; 22
    1dbc:	1b c0       	rjmp	.+54     	; 0x1df4 <__vector_22+0x98>
    1dbe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1dc2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1dc6:	c9 01       	movw	r24, r18
    1dc8:	01 96       	adiw	r24, 0x01	; 1
    1dca:	09 2e       	mov	r0, r25
    1dcc:	00 0c       	add	r0, r0
    1dce:	aa 0b       	sbc	r26, r26
    1dd0:	bb 0b       	sbc	r27, r27
    1dd2:	dc 01       	movw	r26, r24
    1dd4:	99 27       	eor	r25, r25
    1dd6:	88 27       	eor	r24, r24
    1dd8:	60 e0       	ldi	r22, 0x00	; 0
    1dda:	70 e0       	ldi	r23, 0x00	; 0
    1ddc:	84 2b       	or	r24, r20
    1dde:	95 2b       	or	r25, r21
    1de0:	a6 2b       	or	r26, r22
    1de2:	b7 2b       	or	r27, r23
    1de4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1de8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1dec:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1df0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1df4:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x22>
    1df8:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x23>
    1dfc:	30 97       	sbiw	r30, 0x00	; 0
    1dfe:	39 f0       	breq	.+14     	; 0x1e0e <__vector_22+0xb2>
    1e00:	61 e1       	ldi	r22, 0x11	; 17
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x22>
    1e08:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x23>
    1e0c:	09 95       	icall
    1e0e:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    1e12:	ff 91       	pop	r31
    1e14:	ef 91       	pop	r30
    1e16:	bf 91       	pop	r27
    1e18:	af 91       	pop	r26
    1e1a:	9f 91       	pop	r25
    1e1c:	8f 91       	pop	r24
    1e1e:	7f 91       	pop	r23
    1e20:	6f 91       	pop	r22
    1e22:	5f 91       	pop	r21
    1e24:	4f 91       	pop	r20
    1e26:	3f 91       	pop	r19
    1e28:	2f 91       	pop	r18
    1e2a:	0f 90       	pop	r0
    1e2c:	0f be       	out	0x3f, r0	; 63
    1e2e:	0f 90       	pop	r0
    1e30:	1f 90       	pop	r1
    1e32:	18 95       	reti

00001e34 <enqueueByDeadline>:
    1e34:	ef 92       	push	r14
    1e36:	ff 92       	push	r15
    1e38:	0f 93       	push	r16
    1e3a:	1f 93       	push	r17
    1e3c:	cf 93       	push	r28
    1e3e:	df 93       	push	r29
    1e40:	7b 01       	movw	r14, r22
    1e42:	eb 01       	movw	r28, r22
    1e44:	a8 81       	ld	r26, Y
    1e46:	b9 81       	ldd	r27, Y+1	; 0x01
    1e48:	10 97       	sbiw	r26, 0x00	; 0
    1e4a:	61 f1       	breq	.+88     	; 0x1ea4 <enqueueByDeadline+0x70>
    1e4c:	fc 01       	movw	r30, r24
    1e4e:	06 81       	ldd	r16, Z+6	; 0x06
    1e50:	17 81       	ldd	r17, Z+7	; 0x07
    1e52:	20 85       	ldd	r18, Z+8	; 0x08
    1e54:	31 85       	ldd	r19, Z+9	; 0x09
    1e56:	16 96       	adiw	r26, 0x06	; 6
    1e58:	4d 91       	ld	r20, X+
    1e5a:	5d 91       	ld	r21, X+
    1e5c:	6d 91       	ld	r22, X+
    1e5e:	7c 91       	ld	r23, X
    1e60:	19 97       	sbiw	r26, 0x09	; 9
    1e62:	04 17       	cp	r16, r20
    1e64:	15 07       	cpc	r17, r21
    1e66:	26 07       	cpc	r18, r22
    1e68:	37 07       	cpc	r19, r23
    1e6a:	14 f4       	brge	.+4      	; 0x1e70 <enqueueByDeadline+0x3c>
    1e6c:	1b c0       	rjmp	.+54     	; 0x1ea4 <enqueueByDeadline+0x70>
    1e6e:	df 01       	movw	r26, r30
    1e70:	ed 91       	ld	r30, X+
    1e72:	fc 91       	ld	r31, X
    1e74:	11 97       	sbiw	r26, 0x01	; 1
    1e76:	30 97       	sbiw	r30, 0x00	; 0
    1e78:	49 f0       	breq	.+18     	; 0x1e8c <enqueueByDeadline+0x58>
    1e7a:	46 81       	ldd	r20, Z+6	; 0x06
    1e7c:	57 81       	ldd	r21, Z+7	; 0x07
    1e7e:	60 85       	ldd	r22, Z+8	; 0x08
    1e80:	71 85       	ldd	r23, Z+9	; 0x09
    1e82:	04 17       	cp	r16, r20
    1e84:	15 07       	cpc	r17, r21
    1e86:	26 07       	cpc	r18, r22
    1e88:	37 07       	cpc	r19, r23
    1e8a:	8c f7       	brge	.-30     	; 0x1e6e <enqueueByDeadline+0x3a>
    1e8c:	ec 01       	movw	r28, r24
    1e8e:	f9 83       	std	Y+1, r31	; 0x01
    1e90:	e8 83       	st	Y, r30
    1e92:	10 97       	sbiw	r26, 0x00	; 0
    1e94:	21 f4       	brne	.+8      	; 0x1e9e <enqueueByDeadline+0x6a>
    1e96:	f7 01       	movw	r30, r14
    1e98:	91 83       	std	Z+1, r25	; 0x01
    1e9a:	80 83       	st	Z, r24
    1e9c:	07 c0       	rjmp	.+14     	; 0x1eac <enqueueByDeadline+0x78>
    1e9e:	8d 93       	st	X+, r24
    1ea0:	9c 93       	st	X, r25
    1ea2:	04 c0       	rjmp	.+8      	; 0x1eac <enqueueByDeadline+0x78>
    1ea4:	ec 01       	movw	r28, r24
    1ea6:	b9 83       	std	Y+1, r27	; 0x01
    1ea8:	a8 83       	st	Y, r26
    1eaa:	f5 cf       	rjmp	.-22     	; 0x1e96 <enqueueByDeadline+0x62>
    1eac:	df 91       	pop	r29
    1eae:	cf 91       	pop	r28
    1eb0:	1f 91       	pop	r17
    1eb2:	0f 91       	pop	r16
    1eb4:	ff 90       	pop	r15
    1eb6:	ef 90       	pop	r14
    1eb8:	08 95       	ret

00001eba <enqueueByBaseline>:
    1eba:	ef 92       	push	r14
    1ebc:	ff 92       	push	r15
    1ebe:	0f 93       	push	r16
    1ec0:	1f 93       	push	r17
    1ec2:	cf 93       	push	r28
    1ec4:	df 93       	push	r29
    1ec6:	7b 01       	movw	r14, r22
    1ec8:	eb 01       	movw	r28, r22
    1eca:	a8 81       	ld	r26, Y
    1ecc:	b9 81       	ldd	r27, Y+1	; 0x01
    1ece:	10 97       	sbiw	r26, 0x00	; 0
    1ed0:	61 f1       	breq	.+88     	; 0x1f2a <enqueueByBaseline+0x70>
    1ed2:	fc 01       	movw	r30, r24
    1ed4:	02 81       	ldd	r16, Z+2	; 0x02
    1ed6:	13 81       	ldd	r17, Z+3	; 0x03
    1ed8:	24 81       	ldd	r18, Z+4	; 0x04
    1eda:	35 81       	ldd	r19, Z+5	; 0x05
    1edc:	12 96       	adiw	r26, 0x02	; 2
    1ede:	4d 91       	ld	r20, X+
    1ee0:	5d 91       	ld	r21, X+
    1ee2:	6d 91       	ld	r22, X+
    1ee4:	7c 91       	ld	r23, X
    1ee6:	15 97       	sbiw	r26, 0x05	; 5
    1ee8:	04 17       	cp	r16, r20
    1eea:	15 07       	cpc	r17, r21
    1eec:	26 07       	cpc	r18, r22
    1eee:	37 07       	cpc	r19, r23
    1ef0:	14 f4       	brge	.+4      	; 0x1ef6 <enqueueByBaseline+0x3c>
    1ef2:	1b c0       	rjmp	.+54     	; 0x1f2a <enqueueByBaseline+0x70>
    1ef4:	df 01       	movw	r26, r30
    1ef6:	ed 91       	ld	r30, X+
    1ef8:	fc 91       	ld	r31, X
    1efa:	11 97       	sbiw	r26, 0x01	; 1
    1efc:	30 97       	sbiw	r30, 0x00	; 0
    1efe:	49 f0       	breq	.+18     	; 0x1f12 <enqueueByBaseline+0x58>
    1f00:	42 81       	ldd	r20, Z+2	; 0x02
    1f02:	53 81       	ldd	r21, Z+3	; 0x03
    1f04:	64 81       	ldd	r22, Z+4	; 0x04
    1f06:	75 81       	ldd	r23, Z+5	; 0x05
    1f08:	04 17       	cp	r16, r20
    1f0a:	15 07       	cpc	r17, r21
    1f0c:	26 07       	cpc	r18, r22
    1f0e:	37 07       	cpc	r19, r23
    1f10:	8c f7       	brge	.-30     	; 0x1ef4 <enqueueByBaseline+0x3a>
    1f12:	ec 01       	movw	r28, r24
    1f14:	f9 83       	std	Y+1, r31	; 0x01
    1f16:	e8 83       	st	Y, r30
    1f18:	10 97       	sbiw	r26, 0x00	; 0
    1f1a:	21 f4       	brne	.+8      	; 0x1f24 <enqueueByBaseline+0x6a>
    1f1c:	f7 01       	movw	r30, r14
    1f1e:	91 83       	std	Z+1, r25	; 0x01
    1f20:	80 83       	st	Z, r24
    1f22:	07 c0       	rjmp	.+14     	; 0x1f32 <enqueueByBaseline+0x78>
    1f24:	8d 93       	st	X+, r24
    1f26:	9c 93       	st	X, r25
    1f28:	04 c0       	rjmp	.+8      	; 0x1f32 <enqueueByBaseline+0x78>
    1f2a:	ec 01       	movw	r28, r24
    1f2c:	b9 83       	std	Y+1, r27	; 0x01
    1f2e:	a8 83       	st	Y, r26
    1f30:	f5 cf       	rjmp	.-22     	; 0x1f1c <enqueueByBaseline+0x62>
    1f32:	df 91       	pop	r29
    1f34:	cf 91       	pop	r28
    1f36:	1f 91       	pop	r17
    1f38:	0f 91       	pop	r16
    1f3a:	ff 90       	pop	r15
    1f3c:	ef 90       	pop	r14
    1f3e:	08 95       	ret

00001f40 <dequeue>:
    1f40:	dc 01       	movw	r26, r24
    1f42:	ed 91       	ld	r30, X+
    1f44:	fc 91       	ld	r31, X
    1f46:	11 97       	sbiw	r26, 0x01	; 1
    1f48:	30 97       	sbiw	r30, 0x00	; 0
    1f4a:	59 f4       	brne	.+22     	; 0x1f62 <dequeue+0x22>
    1f4c:	8f ef       	ldi	r24, 0xFF	; 255
    1f4e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1f52:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1f56:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    1f5a:	81 e0       	ldi	r24, 0x01	; 1
    1f5c:	83 bf       	out	0x33, r24	; 51
    1f5e:	88 95       	sleep
    1f60:	fd cf       	rjmp	.-6      	; 0x1f5c <dequeue+0x1c>
    1f62:	20 81       	ld	r18, Z
    1f64:	31 81       	ldd	r19, Z+1	; 0x01
    1f66:	2d 93       	st	X+, r18
    1f68:	3c 93       	st	X, r19
    1f6a:	cf 01       	movw	r24, r30
    1f6c:	08 95       	ret

00001f6e <__vector_9>:
    1f6e:	1f 92       	push	r1
    1f70:	0f 92       	push	r0
    1f72:	0f b6       	in	r0, 0x3f	; 63
    1f74:	0f 92       	push	r0
    1f76:	11 24       	eor	r1, r1
    1f78:	2f 93       	push	r18
    1f7a:	3f 93       	push	r19
    1f7c:	4f 93       	push	r20
    1f7e:	5f 93       	push	r21
    1f80:	6f 93       	push	r22
    1f82:	7f 93       	push	r23
    1f84:	8f 93       	push	r24
    1f86:	9f 93       	push	r25
    1f88:	ef 93       	push	r30
    1f8a:	ff 93       	push	r31
    1f8c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    1f90:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    1f94:	01 96       	adiw	r24, 0x01	; 1
    1f96:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
    1f9a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
    1f9e:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    1fa2:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    1fa6:	30 97       	sbiw	r30, 0x00	; 0
    1fa8:	01 f1       	breq	.+64     	; 0x1fea <__vector_9+0x7c>
    1faa:	42 81       	ldd	r20, Z+2	; 0x02
    1fac:	53 81       	ldd	r21, Z+3	; 0x03
    1fae:	64 81       	ldd	r22, Z+4	; 0x04
    1fb0:	75 81       	ldd	r23, Z+5	; 0x05
    1fb2:	86 17       	cp	r24, r22
    1fb4:	97 07       	cpc	r25, r23
    1fb6:	c9 f4       	brne	.+50     	; 0x1fea <__vector_9+0x7c>
    1fb8:	ca 01       	movw	r24, r20
    1fba:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1fbe:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1fc2:	42 1b       	sub	r20, r18
    1fc4:	53 0b       	sbc	r21, r19
    1fc6:	41 30       	cpi	r20, 0x01	; 1
    1fc8:	51 05       	cpc	r21, r1
    1fca:	29 f4       	brne	.+10     	; 0x1fd6 <__vector_9+0x68>
    1fcc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1fd0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1fd4:	01 96       	adiw	r24, 0x01	; 1
    1fd6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1fda:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1fde:	ef e6       	ldi	r30, 0x6F	; 111
    1fe0:	f0 e0       	ldi	r31, 0x00	; 0
    1fe2:	80 81       	ld	r24, Z
    1fe4:	82 60       	ori	r24, 0x02	; 2
    1fe6:	80 83       	st	Z, r24
    1fe8:	05 c0       	rjmp	.+10     	; 0x1ff4 <__vector_9+0x86>
    1fea:	ef e6       	ldi	r30, 0x6F	; 111
    1fec:	f0 e0       	ldi	r31, 0x00	; 0
    1fee:	80 81       	ld	r24, Z
    1ff0:	8d 7f       	andi	r24, 0xFD	; 253
    1ff2:	80 83       	st	Z, r24
    1ff4:	ff 91       	pop	r31
    1ff6:	ef 91       	pop	r30
    1ff8:	9f 91       	pop	r25
    1ffa:	8f 91       	pop	r24
    1ffc:	7f 91       	pop	r23
    1ffe:	6f 91       	pop	r22
    2000:	5f 91       	pop	r21
    2002:	4f 91       	pop	r20
    2004:	3f 91       	pop	r19
    2006:	2f 91       	pop	r18
    2008:	0f 90       	pop	r0
    200a:	0f be       	out	0x3f, r0	; 63
    200c:	0f 90       	pop	r0
    200e:	1f 90       	pop	r1
    2010:	18 95       	reti

00002012 <__vector_7>:
    2012:	1f 92       	push	r1
    2014:	0f 92       	push	r0
    2016:	0f b6       	in	r0, 0x3f	; 63
    2018:	0f 92       	push	r0
    201a:	11 24       	eor	r1, r1
    201c:	cf 92       	push	r12
    201e:	df 92       	push	r13
    2020:	ef 92       	push	r14
    2022:	ff 92       	push	r15
    2024:	2f 93       	push	r18
    2026:	3f 93       	push	r19
    2028:	4f 93       	push	r20
    202a:	5f 93       	push	r21
    202c:	6f 93       	push	r22
    202e:	7f 93       	push	r23
    2030:	8f 93       	push	r24
    2032:	9f 93       	push	r25
    2034:	af 93       	push	r26
    2036:	bf 93       	push	r27
    2038:	ef 93       	push	r30
    203a:	ff 93       	push	r31
    203c:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <__data_end>
    2040:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <__data_end+0x1>
    2044:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2048:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    204c:	b0 99       	sbic	0x16, 0	; 22
    204e:	0f c0       	rjmp	.+30     	; 0x206e <__vector_7+0x5c>
    2050:	0d 2c       	mov	r0, r13
    2052:	00 0c       	add	r0, r0
    2054:	ee 08       	sbc	r14, r14
    2056:	ff 08       	sbc	r15, r15
    2058:	d6 01       	movw	r26, r12
    205a:	99 27       	eor	r25, r25
    205c:	88 27       	eor	r24, r24
    205e:	69 01       	movw	r12, r18
    2060:	e1 2c       	mov	r14, r1
    2062:	f1 2c       	mov	r15, r1
    2064:	c8 2a       	or	r12, r24
    2066:	d9 2a       	or	r13, r25
    2068:	ea 2a       	or	r14, r26
    206a:	fb 2a       	or	r15, r27
    206c:	15 c0       	rjmp	.+42     	; 0x2098 <__vector_7+0x86>
    206e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2072:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2076:	8f ef       	ldi	r24, 0xFF	; 255
    2078:	c8 1a       	sub	r12, r24
    207a:	d8 0a       	sbc	r13, r24
    207c:	0d 2c       	mov	r0, r13
    207e:	00 0c       	add	r0, r0
    2080:	ee 08       	sbc	r14, r14
    2082:	ff 08       	sbc	r15, r15
    2084:	d6 01       	movw	r26, r12
    2086:	99 27       	eor	r25, r25
    2088:	88 27       	eor	r24, r24
    208a:	69 01       	movw	r12, r18
    208c:	e1 2c       	mov	r14, r1
    208e:	f1 2c       	mov	r15, r1
    2090:	c8 2a       	or	r12, r24
    2092:	d9 2a       	or	r13, r25
    2094:	ea 2a       	or	r14, r26
    2096:	fb 2a       	or	r15, r27
    2098:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    209c:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    20a0:	30 97       	sbiw	r30, 0x00	; 0
    20a2:	09 f4       	brne	.+2      	; 0x20a6 <__vector_7+0x94>
    20a4:	42 c0       	rjmp	.+132    	; 0x212a <__vector_7+0x118>
    20a6:	82 81       	ldd	r24, Z+2	; 0x02
    20a8:	93 81       	ldd	r25, Z+3	; 0x03
    20aa:	a4 81       	ldd	r26, Z+4	; 0x04
    20ac:	b5 81       	ldd	r27, Z+5	; 0x05
    20ae:	8c 19       	sub	r24, r12
    20b0:	9d 09       	sbc	r25, r13
    20b2:	ae 09       	sbc	r26, r14
    20b4:	bf 09       	sbc	r27, r15
    20b6:	18 16       	cp	r1, r24
    20b8:	19 06       	cpc	r1, r25
    20ba:	1a 06       	cpc	r1, r26
    20bc:	1b 06       	cpc	r1, r27
    20be:	ec f1       	brlt	.+122    	; 0x213a <__vector_7+0x128>
    20c0:	80 e1       	ldi	r24, 0x10	; 16
    20c2:	91 e0       	ldi	r25, 0x01	; 1
    20c4:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <dequeue>
    20c8:	62 e1       	ldi	r22, 0x12	; 18
    20ca:	71 e0       	ldi	r23, 0x01	; 1
    20cc:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <enqueueByDeadline>
    20d0:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    20d4:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    20d8:	30 97       	sbiw	r30, 0x00	; 0
    20da:	39 f1       	breq	.+78     	; 0x212a <__vector_7+0x118>
    20dc:	82 81       	ldd	r24, Z+2	; 0x02
    20de:	93 81       	ldd	r25, Z+3	; 0x03
    20e0:	a4 81       	ldd	r26, Z+4	; 0x04
    20e2:	b5 81       	ldd	r27, Z+5	; 0x05
    20e4:	8c 19       	sub	r24, r12
    20e6:	9d 09       	sbc	r25, r13
    20e8:	ae 09       	sbc	r26, r14
    20ea:	bf 09       	sbc	r27, r15
    20ec:	18 16       	cp	r1, r24
    20ee:	19 06       	cpc	r1, r25
    20f0:	1a 06       	cpc	r1, r26
    20f2:	1b 06       	cpc	r1, r27
    20f4:	2c f7       	brge	.-54     	; 0x20c0 <__vector_7+0xae>
    20f6:	21 c0       	rjmp	.+66     	; 0x213a <__vector_7+0x128>
    20f8:	9c 01       	movw	r18, r24
    20fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    20fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2102:	84 1b       	sub	r24, r20
    2104:	95 0b       	sbc	r25, r21
    2106:	01 97       	sbiw	r24, 0x01	; 1
    2108:	31 f4       	brne	.+12     	; 0x2116 <__vector_7+0x104>
    210a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    210e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2112:	2f 5f       	subi	r18, 0xFF	; 255
    2114:	3f 4f       	sbci	r19, 0xFF	; 255
    2116:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    211a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    211e:	ef e6       	ldi	r30, 0x6F	; 111
    2120:	f0 e0       	ldi	r31, 0x00	; 0
    2122:	80 81       	ld	r24, Z
    2124:	82 60       	ori	r24, 0x02	; 2
    2126:	80 83       	st	Z, r24
    2128:	05 c0       	rjmp	.+10     	; 0x2134 <__vector_7+0x122>
    212a:	ef e6       	ldi	r30, 0x6F	; 111
    212c:	f0 e0       	ldi	r31, 0x00	; 0
    212e:	80 81       	ld	r24, Z
    2130:	8d 7f       	andi	r24, 0xFD	; 253
    2132:	80 83       	st	Z, r24
    2134:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    2138:	0c c0       	rjmp	.+24     	; 0x2152 <__vector_7+0x140>
    213a:	82 81       	ldd	r24, Z+2	; 0x02
    213c:	93 81       	ldd	r25, Z+3	; 0x03
    213e:	a4 81       	ldd	r26, Z+4	; 0x04
    2140:	b5 81       	ldd	r27, Z+5	; 0x05
    2142:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    2146:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    214a:	2a 17       	cp	r18, r26
    214c:	3b 07       	cpc	r19, r27
    214e:	69 f7       	brne	.-38     	; 0x212a <__vector_7+0x118>
    2150:	d3 cf       	rjmp	.-90     	; 0x20f8 <__vector_7+0xe6>
    2152:	ff 91       	pop	r31
    2154:	ef 91       	pop	r30
    2156:	bf 91       	pop	r27
    2158:	af 91       	pop	r26
    215a:	9f 91       	pop	r25
    215c:	8f 91       	pop	r24
    215e:	7f 91       	pop	r23
    2160:	6f 91       	pop	r22
    2162:	5f 91       	pop	r21
    2164:	4f 91       	pop	r20
    2166:	3f 91       	pop	r19
    2168:	2f 91       	pop	r18
    216a:	ff 90       	pop	r15
    216c:	ef 90       	pop	r14
    216e:	df 90       	pop	r13
    2170:	cf 90       	pop	r12
    2172:	0f 90       	pop	r0
    2174:	0f be       	out	0x3f, r0	; 63
    2176:	0f 90       	pop	r0
    2178:	1f 90       	pop	r1
    217a:	18 95       	reti

0000217c <async>:
    217c:	3f 92       	push	r3
    217e:	4f 92       	push	r4
    2180:	5f 92       	push	r5
    2182:	6f 92       	push	r6
    2184:	7f 92       	push	r7
    2186:	8f 92       	push	r8
    2188:	9f 92       	push	r9
    218a:	af 92       	push	r10
    218c:	bf 92       	push	r11
    218e:	cf 92       	push	r12
    2190:	df 92       	push	r13
    2192:	ef 92       	push	r14
    2194:	ff 92       	push	r15
    2196:	0f 93       	push	r16
    2198:	1f 93       	push	r17
    219a:	cf 93       	push	r28
    219c:	df 93       	push	r29
    219e:	2b 01       	movw	r4, r22
    21a0:	3c 01       	movw	r6, r24
    21a2:	49 01       	movw	r8, r18
    21a4:	5a 01       	movw	r10, r20
    21a6:	8f b7       	in	r24, 0x3f	; 63
    21a8:	80 78       	andi	r24, 0x80	; 128
    21aa:	38 2e       	mov	r3, r24
    21ac:	f8 94       	cli
    21ae:	88 e0       	ldi	r24, 0x08	; 8
    21b0:	91 e0       	ldi	r25, 0x01	; 1
    21b2:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <dequeue>
    21b6:	ec 01       	movw	r28, r24
    21b8:	1b 87       	std	Y+11, r17	; 0x0b
    21ba:	0a 87       	std	Y+10, r16	; 0x0a
    21bc:	fd 86       	std	Y+13, r15	; 0x0d
    21be:	ec 86       	std	Y+12, r14	; 0x0c
    21c0:	df 86       	std	Y+15, r13	; 0x0f
    21c2:	ce 86       	std	Y+14, r12	; 0x0e
    21c4:	33 20       	and	r3, r3
    21c6:	61 f0       	breq	.+24     	; 0x21e0 <async+0x64>
    21c8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    21cc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    21d0:	02 80       	ldd	r0, Z+2	; 0x02
    21d2:	f3 81       	ldd	r31, Z+3	; 0x03
    21d4:	e0 2d       	mov	r30, r0
    21d6:	82 81       	ldd	r24, Z+2	; 0x02
    21d8:	93 81       	ldd	r25, Z+3	; 0x03
    21da:	a4 81       	ldd	r26, Z+4	; 0x04
    21dc:	b5 81       	ldd	r27, Z+5	; 0x05
    21de:	08 c0       	rjmp	.+16     	; 0x21f0 <async+0x74>
    21e0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <timestamp>
    21e4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <timestamp+0x1>
    21e8:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <timestamp+0x2>
    21ec:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <timestamp+0x3>
    21f0:	48 0e       	add	r4, r24
    21f2:	59 1e       	adc	r5, r25
    21f4:	6a 1e       	adc	r6, r26
    21f6:	7b 1e       	adc	r7, r27
    21f8:	4a 82       	std	Y+2, r4	; 0x02
    21fa:	5b 82       	std	Y+3, r5	; 0x03
    21fc:	6c 82       	std	Y+4, r6	; 0x04
    21fe:	7d 82       	std	Y+5, r7	; 0x05
    2200:	18 14       	cp	r1, r8
    2202:	19 04       	cpc	r1, r9
    2204:	1a 04       	cpc	r1, r10
    2206:	1b 04       	cpc	r1, r11
    2208:	44 f0       	brlt	.+16     	; 0x221a <async+0x9e>
    220a:	0f 2e       	mov	r0, r31
    220c:	88 24       	eor	r8, r8
    220e:	8a 94       	dec	r8
    2210:	98 2c       	mov	r9, r8
    2212:	a8 2c       	mov	r10, r8
    2214:	ff e7       	ldi	r31, 0x7F	; 127
    2216:	bf 2e       	mov	r11, r31
    2218:	f0 2d       	mov	r31, r0
    221a:	84 0c       	add	r8, r4
    221c:	95 1c       	adc	r9, r5
    221e:	a6 1c       	adc	r10, r6
    2220:	b7 1c       	adc	r11, r7
    2222:	8e 82       	std	Y+6, r8	; 0x06
    2224:	9f 82       	std	Y+7, r9	; 0x07
    2226:	a8 86       	std	Y+8, r10	; 0x08
    2228:	b9 86       	std	Y+9, r11	; 0x09
    222a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    222e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    2232:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2236:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    223a:	b0 99       	sbic	0x16, 0	; 22
    223c:	0e c0       	rjmp	.+28     	; 0x225a <async+0xde>
    223e:	09 2e       	mov	r0, r25
    2240:	00 0c       	add	r0, r0
    2242:	aa 0b       	sbc	r26, r26
    2244:	bb 0b       	sbc	r27, r27
    2246:	dc 01       	movw	r26, r24
    2248:	99 27       	eor	r25, r25
    224a:	88 27       	eor	r24, r24
    224c:	60 e0       	ldi	r22, 0x00	; 0
    224e:	70 e0       	ldi	r23, 0x00	; 0
    2250:	84 2b       	or	r24, r20
    2252:	95 2b       	or	r25, r21
    2254:	a6 2b       	or	r26, r22
    2256:	b7 2b       	or	r27, r23
    2258:	13 c0       	rjmp	.+38     	; 0x2280 <async+0x104>
    225a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    225e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2262:	01 96       	adiw	r24, 0x01	; 1
    2264:	09 2e       	mov	r0, r25
    2266:	00 0c       	add	r0, r0
    2268:	aa 0b       	sbc	r26, r26
    226a:	bb 0b       	sbc	r27, r27
    226c:	dc 01       	movw	r26, r24
    226e:	99 27       	eor	r25, r25
    2270:	88 27       	eor	r24, r24
    2272:	a9 01       	movw	r20, r18
    2274:	60 e0       	ldi	r22, 0x00	; 0
    2276:	70 e0       	ldi	r23, 0x00	; 0
    2278:	84 2b       	or	r24, r20
    227a:	95 2b       	or	r25, r21
    227c:	a6 2b       	or	r26, r22
    227e:	b7 2b       	or	r27, r23
    2280:	48 1a       	sub	r4, r24
    2282:	59 0a       	sbc	r5, r25
    2284:	6a 0a       	sbc	r6, r26
    2286:	7b 0a       	sbc	r7, r27
    2288:	14 14       	cp	r1, r4
    228a:	15 04       	cpc	r1, r5
    228c:	16 04       	cpc	r1, r6
    228e:	17 04       	cpc	r1, r7
    2290:	ac f5       	brge	.+106    	; 0x22fc <async+0x180>
    2292:	60 e1       	ldi	r22, 0x10	; 16
    2294:	71 e0       	ldi	r23, 0x01	; 1
    2296:	ce 01       	movw	r24, r28
    2298:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <enqueueByBaseline>
    229c:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    22a0:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    22a4:	30 97       	sbiw	r30, 0x00	; 0
    22a6:	21 f1       	breq	.+72     	; 0x22f0 <async+0x174>
    22a8:	82 81       	ldd	r24, Z+2	; 0x02
    22aa:	93 81       	ldd	r25, Z+3	; 0x03
    22ac:	a4 81       	ldd	r26, Z+4	; 0x04
    22ae:	b5 81       	ldd	r27, Z+5	; 0x05
    22b0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    22b4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    22b8:	2a 17       	cp	r18, r26
    22ba:	3b 07       	cpc	r19, r27
    22bc:	c9 f4       	brne	.+50     	; 0x22f0 <async+0x174>
    22be:	9c 01       	movw	r18, r24
    22c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    22c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    22c8:	84 1b       	sub	r24, r20
    22ca:	95 0b       	sbc	r25, r21
    22cc:	01 97       	sbiw	r24, 0x01	; 1
    22ce:	31 f4       	brne	.+12     	; 0x22dc <async+0x160>
    22d0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    22d4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    22d8:	2f 5f       	subi	r18, 0xFF	; 255
    22da:	3f 4f       	sbci	r19, 0xFF	; 255
    22dc:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    22e0:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    22e4:	ef e6       	ldi	r30, 0x6F	; 111
    22e6:	f0 e0       	ldi	r31, 0x00	; 0
    22e8:	80 81       	ld	r24, Z
    22ea:	82 60       	ori	r24, 0x02	; 2
    22ec:	80 83       	st	Z, r24
    22ee:	41 c0       	rjmp	.+130    	; 0x2372 <async+0x1f6>
    22f0:	ef e6       	ldi	r30, 0x6F	; 111
    22f2:	f0 e0       	ldi	r31, 0x00	; 0
    22f4:	80 81       	ld	r24, Z
    22f6:	8d 7f       	andi	r24, 0xFD	; 253
    22f8:	80 83       	st	Z, r24
    22fa:	3b c0       	rjmp	.+118    	; 0x2372 <async+0x1f6>
    22fc:	62 e1       	ldi	r22, 0x12	; 18
    22fe:	71 e0       	ldi	r23, 0x01	; 1
    2300:	ce 01       	movw	r24, r28
    2302:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <enqueueByDeadline>
    2306:	33 20       	and	r3, r3
    2308:	b9 f1       	breq	.+110    	; 0x2378 <async+0x1fc>
    230a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    230e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    2312:	00 97       	sbiw	r24, 0x00	; 0
    2314:	81 f1       	breq	.+96     	; 0x2376 <async+0x1fa>
    2316:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    231a:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    231e:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <msgQ>
    2322:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <msgQ+0x1>
    2326:	02 81       	ldd	r16, Z+2	; 0x02
    2328:	13 81       	ldd	r17, Z+3	; 0x03
    232a:	d9 01       	movw	r26, r18
    232c:	16 96       	adiw	r26, 0x06	; 6
    232e:	4d 91       	ld	r20, X+
    2330:	5d 91       	ld	r21, X+
    2332:	6d 91       	ld	r22, X+
    2334:	7c 91       	ld	r23, X
    2336:	19 97       	sbiw	r26, 0x09	; 9
    2338:	d8 01       	movw	r26, r16
    233a:	16 96       	adiw	r26, 0x06	; 6
    233c:	0d 91       	ld	r16, X+
    233e:	1d 91       	ld	r17, X+
    2340:	2d 91       	ld	r18, X+
    2342:	3c 91       	ld	r19, X
    2344:	19 97       	sbiw	r26, 0x09	; 9
    2346:	40 1b       	sub	r20, r16
    2348:	51 0b       	sbc	r21, r17
    234a:	62 0b       	sbc	r22, r18
    234c:	73 0b       	sbc	r23, r19
    234e:	9a f4       	brpl	.+38     	; 0x2376 <async+0x1fa>
    2350:	dc 01       	movw	r26, r24
    2352:	2d 91       	ld	r18, X+
    2354:	3c 91       	ld	r19, X
    2356:	11 97       	sbiw	r26, 0x01	; 1
    2358:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
    235c:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
    2360:	ed 93       	st	X+, r30
    2362:	fc 93       	st	X, r31
    2364:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
    2368:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
    236c:	0e 94 27 07 	call	0xe4e	; 0xe4e <dispatch>
    2370:	02 c0       	rjmp	.+4      	; 0x2376 <async+0x1fa>
    2372:	33 20       	and	r3, r3
    2374:	09 f0       	breq	.+2      	; 0x2378 <async+0x1fc>
    2376:	78 94       	sei
    2378:	ce 01       	movw	r24, r28
    237a:	df 91       	pop	r29
    237c:	cf 91       	pop	r28
    237e:	1f 91       	pop	r17
    2380:	0f 91       	pop	r16
    2382:	ff 90       	pop	r15
    2384:	ef 90       	pop	r14
    2386:	df 90       	pop	r13
    2388:	cf 90       	pop	r12
    238a:	bf 90       	pop	r11
    238c:	af 90       	pop	r10
    238e:	9f 90       	pop	r9
    2390:	8f 90       	pop	r8
    2392:	7f 90       	pop	r7
    2394:	6f 90       	pop	r6
    2396:	5f 90       	pop	r5
    2398:	4f 90       	pop	r4
    239a:	3f 90       	pop	r3
    239c:	08 95       	ret

0000239e <sync>:
    239e:	cf 92       	push	r12
    23a0:	df 92       	push	r13
    23a2:	ef 92       	push	r14
    23a4:	ff 92       	push	r15
    23a6:	0f 93       	push	r16
    23a8:	1f 93       	push	r17
    23aa:	cf 93       	push	r28
    23ac:	df 93       	push	r29
    23ae:	ec 01       	movw	r28, r24
    23b0:	7b 01       	movw	r14, r22
    23b2:	6a 01       	movw	r12, r20
    23b4:	1f b7       	in	r17, 0x3f	; 63
    23b6:	10 78       	andi	r17, 0x80	; 128
    23b8:	f8 94       	cli
    23ba:	a8 81       	ld	r26, Y
    23bc:	b9 81       	ldd	r27, Y+1	; 0x01
    23be:	10 97       	sbiw	r26, 0x00	; 0
    23c0:	61 f1       	breq	.+88     	; 0x241a <sync+0x7c>
    23c2:	14 96       	adiw	r26, 0x04	; 4
    23c4:	ed 91       	ld	r30, X+
    23c6:	fc 91       	ld	r31, X
    23c8:	15 97       	sbiw	r26, 0x05	; 5
    23ca:	30 97       	sbiw	r30, 0x00	; 0
    23cc:	41 f0       	breq	.+16     	; 0x23de <sync+0x40>
    23ce:	a0 81       	ld	r26, Z
    23d0:	b1 81       	ldd	r27, Z+1	; 0x01
    23d2:	14 96       	adiw	r26, 0x04	; 4
    23d4:	ed 91       	ld	r30, X+
    23d6:	fc 91       	ld	r31, X
    23d8:	15 97       	sbiw	r26, 0x05	; 5
    23da:	30 97       	sbiw	r30, 0x00	; 0
    23dc:	c1 f7       	brne	.-16     	; 0x23ce <sync+0x30>
    23de:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    23e2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    23e6:	2a 17       	cp	r18, r26
    23e8:	3b 07       	cpc	r19, r27
    23ea:	21 f0       	breq	.+8      	; 0x23f4 <sync+0x56>
    23ec:	11 23       	and	r17, r17
    23ee:	09 f4       	brne	.+2      	; 0x23f2 <sync+0x54>
    23f0:	3d c0       	rjmp	.+122    	; 0x246c <sync+0xce>
    23f2:	07 c0       	rjmp	.+14     	; 0x2402 <sync+0x64>
    23f4:	11 23       	and	r17, r17
    23f6:	09 f4       	brne	.+2      	; 0x23fa <sync+0x5c>
    23f8:	3c c0       	rjmp	.+120    	; 0x2472 <sync+0xd4>
    23fa:	78 94       	sei
    23fc:	8f ef       	ldi	r24, 0xFF	; 255
    23fe:	9f ef       	ldi	r25, 0xFF	; 255
    2400:	52 c0       	rjmp	.+164    	; 0x24a6 <sync+0x108>
    2402:	8a 81       	ldd	r24, Y+2	; 0x02
    2404:	9b 81       	ldd	r25, Y+3	; 0x03
    2406:	00 97       	sbiw	r24, 0x00	; 0
    2408:	d1 f1       	breq	.+116    	; 0x247e <sync+0xe0>
    240a:	fc 01       	movw	r30, r24
    240c:	15 82       	std	Z+5, r1	; 0x05
    240e:	14 82       	std	Z+4, r1	; 0x04
    2410:	36 c0       	rjmp	.+108    	; 0x247e <sync+0xe0>
    2412:	78 94       	sei
    2414:	80 e0       	ldi	r24, 0x00	; 0
    2416:	90 e0       	ldi	r25, 0x00	; 0
    2418:	46 c0       	rjmp	.+140    	; 0x24a6 <sync+0x108>
    241a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    241e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    2422:	99 83       	std	Y+1, r25	; 0x01
    2424:	88 83       	st	Y, r24
    2426:	11 23       	and	r17, r17
    2428:	29 f0       	breq	.+10     	; 0x2434 <sync+0x96>
    242a:	8a 81       	ldd	r24, Y+2	; 0x02
    242c:	9b 81       	ldd	r25, Y+3	; 0x03
    242e:	01 97       	sbiw	r24, 0x01	; 1
    2430:	09 f0       	breq	.+2      	; 0x2434 <sync+0x96>
    2432:	78 94       	sei
    2434:	b6 01       	movw	r22, r12
    2436:	ce 01       	movw	r24, r28
    2438:	f7 01       	movw	r30, r14
    243a:	09 95       	icall
    243c:	f8 2e       	mov	r15, r24
    243e:	09 2f       	mov	r16, r25
    2440:	8f b7       	in	r24, 0x3f	; 63
    2442:	f8 94       	cli
    2444:	19 82       	std	Y+1, r1	; 0x01
    2446:	18 82       	st	Y, r1
    2448:	8a 81       	ldd	r24, Y+2	; 0x02
    244a:	9b 81       	ldd	r25, Y+3	; 0x03
    244c:	82 30       	cpi	r24, 0x02	; 2
    244e:	91 05       	cpc	r25, r1
    2450:	38 f0       	brcs	.+14     	; 0x2460 <sync+0xc2>
    2452:	1b 82       	std	Y+3, r1	; 0x03
    2454:	1a 82       	std	Y+2, r1	; 0x02
    2456:	fc 01       	movw	r30, r24
    2458:	15 82       	std	Z+5, r1	; 0x05
    245a:	14 82       	std	Z+4, r1	; 0x04
    245c:	0e 94 27 07 	call	0xe4e	; 0xe4e <dispatch>
    2460:	11 23       	and	r17, r17
    2462:	51 f0       	breq	.+20     	; 0x2478 <sync+0xda>
    2464:	78 94       	sei
    2466:	8f 2d       	mov	r24, r15
    2468:	90 2f       	mov	r25, r16
    246a:	1d c0       	rjmp	.+58     	; 0x24a6 <sync+0x108>
    246c:	8f ef       	ldi	r24, 0xFF	; 255
    246e:	9f ef       	ldi	r25, 0xFF	; 255
    2470:	1a c0       	rjmp	.+52     	; 0x24a6 <sync+0x108>
    2472:	8f ef       	ldi	r24, 0xFF	; 255
    2474:	9f ef       	ldi	r25, 0xFF	; 255
    2476:	17 c0       	rjmp	.+46     	; 0x24a6 <sync+0x108>
    2478:	8f 2d       	mov	r24, r15
    247a:	90 2f       	mov	r25, r16
    247c:	14 c0       	rjmp	.+40     	; 0x24a6 <sync+0x108>
    247e:	3b 83       	std	Y+3, r19	; 0x03
    2480:	2a 83       	std	Y+2, r18	; 0x02
    2482:	f9 01       	movw	r30, r18
    2484:	d5 83       	std	Z+5, r29	; 0x05
    2486:	c4 83       	std	Z+4, r28	; 0x04
    2488:	cd 01       	movw	r24, r26
    248a:	0e 94 27 07 	call	0xe4e	; 0xe4e <dispatch>
    248e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    2492:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    2496:	82 81       	ldd	r24, Z+2	; 0x02
    2498:	93 81       	ldd	r25, Z+3	; 0x03
    249a:	89 2b       	or	r24, r25
    249c:	09 f4       	brne	.+2      	; 0x24a0 <sync+0x102>
    249e:	b9 cf       	rjmp	.-142    	; 0x2412 <sync+0x74>
    24a0:	f9 83       	std	Y+1, r31	; 0x01
    24a2:	e8 83       	st	Y, r30
    24a4:	c2 cf       	rjmp	.-124    	; 0x242a <sync+0x8c>
    24a6:	df 91       	pop	r29
    24a8:	cf 91       	pop	r28
    24aa:	1f 91       	pop	r17
    24ac:	0f 91       	pop	r16
    24ae:	ff 90       	pop	r15
    24b0:	ef 90       	pop	r14
    24b2:	df 90       	pop	r13
    24b4:	cf 90       	pop	r12
    24b6:	08 95       	ret

000024b8 <run>:
    24b8:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    24bc:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    24c0:	82 e1       	ldi	r24, 0x12	; 18
    24c2:	91 e0       	ldi	r25, 0x01	; 1
    24c4:	0e 94 a0 0f 	call	0x1f40	; 0x1f40 <dequeue>
    24c8:	ec 01       	movw	r28, r24
    24ca:	d8 01       	movw	r26, r16
    24cc:	13 96       	adiw	r26, 0x03	; 3
    24ce:	9c 93       	st	X, r25
    24d0:	8e 93       	st	-X, r24
    24d2:	12 97       	sbiw	r26, 0x02	; 2
    24d4:	78 94       	sei
    24d6:	4e 85       	ldd	r20, Y+14	; 0x0e
    24d8:	5f 85       	ldd	r21, Y+15	; 0x0f
    24da:	6c 85       	ldd	r22, Y+12	; 0x0c
    24dc:	7d 85       	ldd	r23, Y+13	; 0x0d
    24de:	8a 85       	ldd	r24, Y+10	; 0x0a
    24e0:	9b 85       	ldd	r25, Y+11	; 0x0b
    24e2:	0e 94 cf 11 	call	0x239e	; 0x239e <sync>
    24e6:	8f b7       	in	r24, 0x3f	; 63
    24e8:	f8 94       	cli
    24ea:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <msgPool>
    24ee:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <msgPool+0x1>
    24f2:	99 83       	std	Y+1, r25	; 0x01
    24f4:	88 83       	st	Y, r24
    24f6:	d0 93 09 01 	sts	0x0109, r29	; 0x800109 <msgPool+0x1>
    24fa:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <msgPool>
    24fe:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    2502:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    2506:	00 81       	ld	r16, Z
    2508:	11 81       	ldd	r17, Z+1	; 0x01
    250a:	e8 01       	movw	r28, r16
    250c:	2a 81       	ldd	r18, Y+2	; 0x02
    250e:	3b 81       	ldd	r19, Y+3	; 0x03
    2510:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <msgQ>
    2514:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <msgQ+0x1>
    2518:	10 97       	sbiw	r26, 0x00	; 0
    251a:	c1 f0       	breq	.+48     	; 0x254c <run+0x94>
    251c:	21 15       	cp	r18, r1
    251e:	31 05       	cpc	r19, r1
    2520:	59 f2       	breq	.-106    	; 0x24b8 <run>
    2522:	16 96       	adiw	r26, 0x06	; 6
    2524:	8d 91       	ld	r24, X+
    2526:	9d 91       	ld	r25, X+
    2528:	0d 90       	ld	r0, X+
    252a:	bc 91       	ld	r27, X
    252c:	a0 2d       	mov	r26, r0
    252e:	e9 01       	movw	r28, r18
    2530:	4e 81       	ldd	r20, Y+6	; 0x06
    2532:	5f 81       	ldd	r21, Y+7	; 0x07
    2534:	68 85       	ldd	r22, Y+8	; 0x08
    2536:	79 85       	ldd	r23, Y+9	; 0x09
    2538:	84 1b       	sub	r24, r20
    253a:	95 0b       	sbc	r25, r21
    253c:	a6 0b       	sbc	r26, r22
    253e:	b7 0b       	sbc	r27, r23
    2540:	18 16       	cp	r1, r24
    2542:	19 06       	cpc	r1, r25
    2544:	1a 06       	cpc	r1, r26
    2546:	1b 06       	cpc	r1, r27
    2548:	0c f0       	brlt	.+2      	; 0x254c <run+0x94>
    254a:	b6 cf       	rjmp	.-148    	; 0x24b8 <run>
    254c:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <activeStack+0x1>
    2550:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <activeStack>
    2554:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    2558:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    255c:	91 83       	std	Z+1, r25	; 0x01
    255e:	80 83       	st	Z, r24
    2560:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <threadPool+0x1>
    2564:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <threadPool>
    2568:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    256c:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    2570:	14 96       	adiw	r26, 0x04	; 4
    2572:	ed 91       	ld	r30, X+
    2574:	fc 91       	ld	r31, X
    2576:	15 97       	sbiw	r26, 0x05	; 5
    2578:	30 97       	sbiw	r30, 0x00	; 0
    257a:	41 f0       	breq	.+16     	; 0x258c <run+0xd4>
    257c:	a0 81       	ld	r26, Z
    257e:	b1 81       	ldd	r27, Z+1	; 0x01
    2580:	14 96       	adiw	r26, 0x04	; 4
    2582:	ed 91       	ld	r30, X+
    2584:	fc 91       	ld	r31, X
    2586:	15 97       	sbiw	r26, 0x05	; 5
    2588:	30 97       	sbiw	r30, 0x00	; 0
    258a:	c1 f7       	brne	.-16     	; 0x257c <run+0xc4>
    258c:	cd 01       	movw	r24, r26
    258e:	0e 94 27 07 	call	0xe4e	; 0xe4e <dispatch>
    2592:	92 cf       	rjmp	.-220    	; 0x24b8 <run>

00002594 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2594:	42 31       	cpi	r20, 0x12	; 18
    2596:	b8 f4       	brcc	.+46     	; 0x25c6 <install+0x32>
        char status;
        DISABLE(status);
    2598:	2f b7       	in	r18, 0x3f	; 63
    259a:	f8 94       	cli
        otable[i] = obj;
    259c:	50 e0       	ldi	r21, 0x00	; 0
    259e:	44 0f       	add	r20, r20
    25a0:	55 1f       	adc	r21, r21
    25a2:	fa 01       	movw	r30, r20
    25a4:	ea 5e       	subi	r30, 0xEA	; 234
    25a6:	fe 4f       	sbci	r31, 0xFE	; 254
    25a8:	91 83       	std	Z+1, r25	; 0x01
    25aa:	80 83       	st	Z, r24
        mtable[i] = m;
    25ac:	fa 01       	movw	r30, r20
    25ae:	e2 55       	subi	r30, 0x52	; 82
    25b0:	fe 4f       	sbci	r31, 0xFE	; 254
    25b2:	71 83       	std	Z+1, r23	; 0x01
    25b4:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    25b6:	41 e0       	ldi	r20, 0x01	; 1
    25b8:	50 e0       	ldi	r21, 0x00	; 0
    25ba:	fc 01       	movw	r30, r24
    25bc:	53 83       	std	Z+3, r21	; 0x03
    25be:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    25c0:	22 23       	and	r18, r18
    25c2:	0c f4       	brge	.+2      	; 0x25c6 <install+0x32>
    25c4:	78 94       	sei
    25c6:	08 95       	ret

000025c8 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    25c8:	8c 01       	movw	r16, r24
    25ca:	7b 01       	movw	r14, r22
    25cc:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    25ce:	8f b7       	in	r24, 0x3f	; 63
    25d0:	f8 94       	cli
    initialize();
    25d2:	0e 94 bc 06 	call	0xd78	; 0xd78 <initialize>
    ENABLE(1);
    25d6:	78 94       	sei
    if (m != NULL)
    25d8:	e1 14       	cp	r14, r1
    25da:	f1 04       	cpc	r15, r1
    25dc:	41 f0       	breq	.+16     	; 0x25ee <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    25de:	20 e0       	ldi	r18, 0x00	; 0
    25e0:	30 e0       	ldi	r19, 0x00	; 0
    25e2:	a9 01       	movw	r20, r18
    25e4:	60 e0       	ldi	r22, 0x00	; 0
    25e6:	70 e0       	ldi	r23, 0x00	; 0
    25e8:	cb 01       	movw	r24, r22
    25ea:	0e 94 be 10 	call	0x217c	; 0x217c <async>
    DISABLE(status);
    25ee:	8f b7       	in	r24, 0x3f	; 63
    25f0:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    25f2:	0e 94 47 07 	call	0xe8e	; 0xe8e <schedule>
    ENABLE(1);
    25f6:	78 94       	sei
    while (1) {
        SLEEP();
    25f8:	81 e0       	ldi	r24, 0x01	; 1
    25fa:	83 bf       	out	0x33, r24	; 51
    25fc:	88 95       	sleep
    25fe:	fd cf       	rjmp	.-6      	; 0x25fa <tinytimber+0x32>

00002600 <__tablejump2__>:
    2600:	ee 0f       	add	r30, r30
    2602:	ff 1f       	adc	r31, r31
    2604:	05 90       	lpm	r0, Z+
    2606:	f4 91       	lpm	r31, Z
    2608:	e0 2d       	mov	r30, r0
    260a:	09 94       	ijmp

0000260c <setjmp>:
    260c:	dc 01       	movw	r26, r24
    260e:	2d 92       	st	X+, r2
    2610:	3d 92       	st	X+, r3
    2612:	4d 92       	st	X+, r4
    2614:	5d 92       	st	X+, r5
    2616:	6d 92       	st	X+, r6
    2618:	7d 92       	st	X+, r7
    261a:	8d 92       	st	X+, r8
    261c:	9d 92       	st	X+, r9
    261e:	ad 92       	st	X+, r10
    2620:	bd 92       	st	X+, r11
    2622:	cd 92       	st	X+, r12
    2624:	dd 92       	st	X+, r13
    2626:	ed 92       	st	X+, r14
    2628:	fd 92       	st	X+, r15
    262a:	0d 93       	st	X+, r16
    262c:	1d 93       	st	X+, r17
    262e:	cd 93       	st	X+, r28
    2630:	dd 93       	st	X+, r29
    2632:	ff 91       	pop	r31
    2634:	ef 91       	pop	r30
    2636:	8d b7       	in	r24, 0x3d	; 61
    2638:	8d 93       	st	X+, r24
    263a:	8e b7       	in	r24, 0x3e	; 62
    263c:	8d 93       	st	X+, r24
    263e:	8f b7       	in	r24, 0x3f	; 63
    2640:	8d 93       	st	X+, r24
    2642:	ed 93       	st	X+, r30
    2644:	fd 93       	st	X+, r31
    2646:	88 27       	eor	r24, r24
    2648:	99 27       	eor	r25, r25
    264a:	09 94       	ijmp

0000264c <longjmp>:
    264c:	dc 01       	movw	r26, r24
    264e:	cb 01       	movw	r24, r22
    2650:	81 30       	cpi	r24, 0x01	; 1
    2652:	91 05       	cpc	r25, r1
    2654:	81 1d       	adc	r24, r1
    2656:	2d 90       	ld	r2, X+
    2658:	3d 90       	ld	r3, X+
    265a:	4d 90       	ld	r4, X+
    265c:	5d 90       	ld	r5, X+
    265e:	6d 90       	ld	r6, X+
    2660:	7d 90       	ld	r7, X+
    2662:	8d 90       	ld	r8, X+
    2664:	9d 90       	ld	r9, X+
    2666:	ad 90       	ld	r10, X+
    2668:	bd 90       	ld	r11, X+
    266a:	cd 90       	ld	r12, X+
    266c:	dd 90       	ld	r13, X+
    266e:	ed 90       	ld	r14, X+
    2670:	fd 90       	ld	r15, X+
    2672:	0d 91       	ld	r16, X+
    2674:	1d 91       	ld	r17, X+
    2676:	cd 91       	ld	r28, X+
    2678:	dd 91       	ld	r29, X+
    267a:	ed 91       	ld	r30, X+
    267c:	fd 91       	ld	r31, X+
    267e:	0d 90       	ld	r0, X+
    2680:	f8 94       	cli
    2682:	fe bf       	out	0x3e, r31	; 62
    2684:	0f be       	out	0x3f, r0	; 63
    2686:	ed bf       	out	0x3d, r30	; 61
    2688:	ed 91       	ld	r30, X+
    268a:	fd 91       	ld	r31, X+
    268c:	09 94       	ijmp

0000268e <_exit>:
    268e:	f8 94       	cli

00002690 <__stop_program>:
    2690:	ff cf       	rjmp	.-2      	; 0x2690 <__stop_program>
