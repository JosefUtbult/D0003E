
Labb5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00002820  000028b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002820  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000355  0080010a  0080010a  000028be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000028be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000028f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00002930  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000036d1  00000000  00000000  00002bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010a8  00000000  00000000  00006291  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000192e  00000000  00000000  00007339  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d28  00000000  00000000  00008c68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a1e  00000000  00000000  00009990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003e9d  00000000  00000000  0000a3ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000e24b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__ctors_end>
       4:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__vector_1>
       8:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__vector_2>
       c:	0c 94 13 09 	jmp	0x1226	; 0x1226 <__vector_3>
      10:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__vector_4>
      14:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__vector_5>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__vector_7>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 70 10 	jmp	0x20e0	; 0x20e0 <__vector_9>
      28:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__vector_10>
      2c:	0c 94 c3 0a 	jmp	0x1586	; 0x1586 <__vector_11>
      30:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__vector_12>
      34:	0c 94 9b 0b 	jmp	0x1736	; 0x1736 <__vector_13>
      38:	0c 94 07 0c 	jmp	0x180e	; 0x180e <__vector_14>
      3c:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__vector_15>
      40:	0c 94 df 0c 	jmp	0x19be	; 0x19be <__vector_16>
      44:	0c 94 4b 0d 	jmp	0x1a96	; 0x1a96 <__vector_17>
      48:	0c 94 b7 0d 	jmp	0x1b6e	; 0x1b6e <__vector_18>
      4c:	0c 94 23 0e 	jmp	0x1c46	; 0x1c46 <__vector_19>
      50:	0c 94 8f 0e 	jmp	0x1d1e	; 0x1d1e <__vector_20>
      54:	0c 94 fb 0e 	jmp	0x1df6	; 0x1df6 <__vector_21>
      58:	0c 94 67 0f 	jmp	0x1ece	; 0x1ece <__vector_22>
      5c:	92 02       	muls	r25, r18
      5e:	9e 02       	muls	r25, r30
      60:	aa 02       	muls	r26, r26
      62:	b6 02       	muls	r27, r22
      64:	c2 02       	muls	r28, r18
      66:	ce 02       	muls	r28, r30
      68:	da 02       	muls	r29, r26
      6a:	e6 02       	muls	r30, r22
      6c:	f2 02       	muls	r31, r18
      6e:	fe 02       	muls	r31, r30
      70:	42 04       	cpc	r4, r2
      72:	42 04       	cpc	r4, r2
      74:	42 04       	cpc	r4, r2
      76:	42 04       	cpc	r4, r2
      78:	42 04       	cpc	r4, r2
      7a:	42 04       	cpc	r4, r2
      7c:	42 04       	cpc	r4, r2
      7e:	0a 03       	fmul	r16, r18
      80:	16 03       	mulsu	r17, r22
      82:	22 03       	mulsu	r18, r18
      84:	2e 03       	fmul	r18, r22
      86:	3a 03       	fmul	r19, r18
      88:	46 03       	mulsu	r20, r22
      8a:	52 03       	mulsu	r21, r18
      8c:	5e 03       	fmul	r21, r22
      8e:	6a 03       	fmul	r22, r18
      90:	76 03       	mulsu	r23, r22
      92:	82 03       	fmuls	r16, r18
      94:	8e 03       	fmulsu	r16, r22
      96:	9a 03       	fmulsu	r17, r18
      98:	a6 03       	fmuls	r18, r22
      9a:	b2 03       	fmuls	r19, r18
      9c:	be 03       	fmulsu	r19, r22
      9e:	ca 03       	fmulsu	r20, r18
      a0:	d6 03       	fmuls	r21, r22
      a2:	e2 03       	fmuls	r22, r18
      a4:	ee 03       	fmulsu	r22, r22
      a6:	fa 03       	fmulsu	r23, r18
      a8:	06 04       	cpc	r0, r6
      aa:	12 04       	cpc	r1, r2
      ac:	1e 04       	cpc	r1, r14
      ae:	2a 04       	cpc	r2, r10
      b0:	36 04       	cpc	r3, r6

000000b2 <__ctors_end>:
      b2:	11 24       	eor	r1, r1
      b4:	1f be       	out	0x3f, r1	; 63
      b6:	cf ef       	ldi	r28, 0xFF	; 255
      b8:	d4 e0       	ldi	r29, 0x04	; 4
      ba:	de bf       	out	0x3e, r29	; 62
      bc:	cd bf       	out	0x3d, r28	; 61

000000be <__do_copy_data>:
      be:	11 e0       	ldi	r17, 0x01	; 1
      c0:	a0 e0       	ldi	r26, 0x00	; 0
      c2:	b1 e0       	ldi	r27, 0x01	; 1
      c4:	e0 e2       	ldi	r30, 0x20	; 32
      c6:	f8 e2       	ldi	r31, 0x28	; 40
      c8:	02 c0       	rjmp	.+4      	; 0xce <__do_copy_data+0x10>
      ca:	05 90       	lpm	r0, Z+
      cc:	0d 92       	st	X+, r0
      ce:	aa 30       	cpi	r26, 0x0A	; 10
      d0:	b1 07       	cpc	r27, r17
      d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0xc>

000000d4 <__do_clear_bss>:
      d4:	24 e0       	ldi	r18, 0x04	; 4
      d6:	aa e0       	ldi	r26, 0x0A	; 10
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
      dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
      de:	af 35       	cpi	r26, 0x5F	; 95
      e0:	b2 07       	cpc	r27, r18
      e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
      e4:	0e 94 2d 05 	call	0xa5a	; 0xa5a <main>
      e8:	0c 94 0e 14 	jmp	0x281c	; 0x281c <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <LCDWritePackage>:
	LCDDR13 = 0x00;
	
	LCDDR15 = 0x00;
	LCDDR16 = 0x00;
	LCDDR17 = 0x00;
	LCDDR18 = 0x00;
      f0:	cf 92       	push	r12
      f2:	df 92       	push	r13
      f4:	ef 92       	push	r14
      f6:	ff 92       	push	r15
      f8:	0f 93       	push	r16
      fa:	1f 93       	push	r17
      fc:	99 23       	and	r25, r25
      fe:	0c f4       	brge	.+2      	; 0x102 <LCDWritePackage+0x12>
     100:	f7 c1       	rjmp	.+1006   	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     102:	82 30       	cpi	r24, 0x02	; 2
     104:	91 05       	cpc	r25, r1
     106:	8c f4       	brge	.+34     	; 0x12a <LCDWritePackage+0x3a>
     108:	e0 91 ec 00 	lds	r30, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     10c:	01 97       	sbiw	r24, 0x01	; 1
     10e:	09 f0       	breq	.+2      	; 0x112 <LCDWritePackage+0x22>
     110:	9b c0       	rjmp	.+310    	; 0x248 <LCDWritePackage+0x158>
     112:	48 c0       	rjmp	.+144    	; 0x1a4 <LCDWritePackage+0xb4>
     114:	04 c0       	rjmp	.+8      	; 0x11e <LCDWritePackage+0x2e>
     116:	00 0f       	add	r16, r16
     118:	11 1f       	adc	r17, r17
     11a:	22 1f       	adc	r18, r18
     11c:	33 1f       	adc	r19, r19
     11e:	9a 95       	dec	r25
     120:	d2 f7       	brpl	.-12     	; 0x116 <LCDWritePackage+0x26>
     122:	08 2b       	or	r16, r24
     124:	00 93 fb 00 	sts	0x00FB, r16	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     128:	e3 c1       	rjmp	.+966    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     12a:	84 30       	cpi	r24, 0x04	; 4
     12c:	91 05       	cpc	r25, r1
     12e:	8c f4       	brge	.+34     	; 0x152 <LCDWritePackage+0x62>
     130:	e0 91 ed 00 	lds	r30, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     134:	03 97       	sbiw	r24, 0x03	; 3
     136:	09 f0       	breq	.+2      	; 0x13a <LCDWritePackage+0x4a>
     138:	9f c0       	rjmp	.+318    	; 0x278 <LCDWritePackage+0x188>
     13a:	b6 c0       	rjmp	.+364    	; 0x2a8 <LCDWritePackage+0x1b8>
     13c:	04 c0       	rjmp	.+8      	; 0x146 <LCDWritePackage+0x56>
     13e:	00 0f       	add	r16, r16
     140:	11 1f       	adc	r17, r17
     142:	22 1f       	adc	r18, r18
     144:	33 1f       	adc	r19, r19
     146:	9a 95       	dec	r25
     148:	d2 f7       	brpl	.-12     	; 0x13e <LCDWritePackage+0x4e>
     14a:	08 2b       	or	r16, r24
     14c:	00 93 fc 00 	sts	0x00FC, r16	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     150:	cf c1       	rjmp	.+926    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     152:	86 30       	cpi	r24, 0x06	; 6
     154:	91 05       	cpc	r25, r1
     156:	8c f4       	brge	.+34     	; 0x17a <LCDWritePackage+0x8a>
     158:	e0 91 ee 00 	lds	r30, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     15c:	05 97       	sbiw	r24, 0x05	; 5
     15e:	09 f0       	breq	.+2      	; 0x162 <LCDWritePackage+0x72>
     160:	f5 c0       	rjmp	.+490    	; 0x34c <LCDWritePackage+0x25c>
     162:	0c c1       	rjmp	.+536    	; 0x37c <LCDWritePackage+0x28c>
     164:	04 c0       	rjmp	.+8      	; 0x16e <LCDWritePackage+0x7e>
     166:	00 0f       	add	r16, r16
     168:	11 1f       	adc	r17, r17
     16a:	22 1f       	adc	r18, r18
     16c:	33 1f       	adc	r19, r19
     16e:	9a 95       	dec	r25
     170:	d2 f7       	brpl	.-12     	; 0x166 <LCDWritePackage+0x76>
     172:	08 2b       	or	r16, r24
     174:	00 93 fd 00 	sts	0x00FD, r16	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     178:	bb c1       	rjmp	.+886    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     17a:	88 30       	cpi	r24, 0x08	; 8
     17c:	91 05       	cpc	r25, r1
     17e:	0c f0       	brlt	.+2      	; 0x182 <LCDWritePackage+0x92>
     180:	b7 c1       	rjmp	.+878    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     182:	e0 91 ef 00 	lds	r30, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     186:	07 97       	sbiw	r24, 0x07	; 7
     188:	09 f0       	breq	.+2      	; 0x18c <LCDWritePackage+0x9c>
     18a:	4a c1       	rjmp	.+660    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     18c:	61 c1       	rjmp	.+706    	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     18e:	04 c0       	rjmp	.+8      	; 0x198 <LCDWritePackage+0xa8>
     190:	00 0f       	add	r16, r16
     192:	11 1f       	adc	r17, r17
     194:	22 1f       	adc	r18, r18
     196:	33 1f       	adc	r19, r19
     198:	9a 95       	dec	r25
     19a:	d2 f7       	brpl	.-12     	; 0x190 <LCDWritePackage+0xa0>
     19c:	08 2b       	or	r16, r24
     19e:	00 93 fe 00 	sts	0x00FE, r16	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     1a2:	a6 c1       	rjmp	.+844    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     1a4:	9e 2f       	mov	r25, r30
     1a6:	9f 70       	andi	r25, 0x0F	; 15
     1a8:	6b 01       	movw	r12, r22
     1aa:	e1 2c       	mov	r14, r1
     1ac:	f1 2c       	mov	r15, r1
     1ae:	cc 0c       	add	r12, r12
     1b0:	dd 1c       	adc	r13, r13
     1b2:	ee 1c       	adc	r14, r14
     1b4:	ff 1c       	adc	r15, r15
     1b6:	cc 0c       	add	r12, r12
     1b8:	dd 1c       	adc	r13, r13
     1ba:	ee 1c       	adc	r14, r14
     1bc:	ff 1c       	adc	r15, r15
     1be:	cc 0c       	add	r12, r12
     1c0:	dd 1c       	adc	r13, r13
     1c2:	ee 1c       	adc	r14, r14
     1c4:	ff 1c       	adc	r15, r15
     1c6:	cc 0c       	add	r12, r12
     1c8:	dd 1c       	adc	r13, r13
     1ca:	ee 1c       	adc	r14, r14
     1cc:	ff 1c       	adc	r15, r15
     1ce:	e9 2f       	mov	r30, r25
     1d0:	ec 29       	or	r30, r12
     1d2:	e0 93 ec 00 	sts	0x00EC, r30	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     1d6:	e1 ef       	ldi	r30, 0xF1	; 241
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	8f 70       	andi	r24, 0x0F	; 15
     1de:	60 e0       	ldi	r22, 0x00	; 0
     1e0:	70 e0       	ldi	r23, 0x00	; 0
     1e2:	44 0f       	add	r20, r20
     1e4:	55 1f       	adc	r21, r21
     1e6:	66 1f       	adc	r22, r22
     1e8:	77 1f       	adc	r23, r23
     1ea:	44 0f       	add	r20, r20
     1ec:	55 1f       	adc	r21, r21
     1ee:	66 1f       	adc	r22, r22
     1f0:	77 1f       	adc	r23, r23
     1f2:	44 0f       	add	r20, r20
     1f4:	55 1f       	adc	r21, r21
     1f6:	66 1f       	adc	r22, r22
     1f8:	77 1f       	adc	r23, r23
     1fa:	44 0f       	add	r20, r20
     1fc:	55 1f       	adc	r21, r21
     1fe:	66 1f       	adc	r22, r22
     200:	77 1f       	adc	r23, r23
     202:	48 2b       	or	r20, r24
     204:	40 83       	st	Z, r20
     206:	e6 ef       	ldi	r30, 0xF6	; 246
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	48 2f       	mov	r20, r24
     20e:	4f 70       	andi	r20, 0x0F	; 15
     210:	c9 01       	movw	r24, r18
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b0 e0       	ldi	r27, 0x00	; 0
     216:	88 0f       	add	r24, r24
     218:	99 1f       	adc	r25, r25
     21a:	aa 1f       	adc	r26, r26
     21c:	bb 1f       	adc	r27, r27
     21e:	88 0f       	add	r24, r24
     220:	99 1f       	adc	r25, r25
     222:	aa 1f       	adc	r26, r26
     224:	bb 1f       	adc	r27, r27
     226:	88 0f       	add	r24, r24
     228:	99 1f       	adc	r25, r25
     22a:	aa 1f       	adc	r26, r26
     22c:	bb 1f       	adc	r27, r27
     22e:	88 0f       	add	r24, r24
     230:	99 1f       	adc	r25, r25
     232:	aa 1f       	adc	r26, r26
     234:	bb 1f       	adc	r27, r27
     236:	84 2b       	or	r24, r20
     238:	80 83       	st	Z, r24
     23a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     23e:	8f 70       	andi	r24, 0x0F	; 15
     240:	20 e0       	ldi	r18, 0x00	; 0
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	94 e0       	ldi	r25, 0x04	; 4
     246:	66 cf       	rjmp	.-308    	; 0x114 <LCDWritePackage+0x24>
     248:	8e 2f       	mov	r24, r30
     24a:	80 7f       	andi	r24, 0xF0	; 240
     24c:	86 2b       	or	r24, r22
     24e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     252:	e1 ef       	ldi	r30, 0xF1	; 241
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	80 7f       	andi	r24, 0xF0	; 240
     25a:	48 2b       	or	r20, r24
     25c:	40 83       	st	Z, r20
     25e:	e6 ef       	ldi	r30, 0xF6	; 246
     260:	f0 e0       	ldi	r31, 0x00	; 0
     262:	80 81       	ld	r24, Z
     264:	80 7f       	andi	r24, 0xF0	; 240
     266:	82 2b       	or	r24, r18
     268:	80 83       	st	Z, r24
     26a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7e00fb>
     26e:	80 7f       	andi	r24, 0xF0	; 240
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	4e cf       	rjmp	.-356    	; 0x114 <LCDWritePackage+0x24>
     278:	8e 2f       	mov	r24, r30
     27a:	80 7f       	andi	r24, 0xF0	; 240
     27c:	86 2b       	or	r24, r22
     27e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     282:	e2 ef       	ldi	r30, 0xF2	; 242
     284:	f0 e0       	ldi	r31, 0x00	; 0
     286:	80 81       	ld	r24, Z
     288:	80 7f       	andi	r24, 0xF0	; 240
     28a:	48 2b       	or	r20, r24
     28c:	40 83       	st	Z, r20
     28e:	e7 ef       	ldi	r30, 0xF7	; 247
     290:	f0 e0       	ldi	r31, 0x00	; 0
     292:	80 81       	ld	r24, Z
     294:	80 7f       	andi	r24, 0xF0	; 240
     296:	82 2b       	or	r24, r18
     298:	80 83       	st	Z, r24
     29a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     29e:	80 7f       	andi	r24, 0xF0	; 240
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	4a cf       	rjmp	.-364    	; 0x13c <LCDWritePackage+0x4c>
     2a8:	9e 2f       	mov	r25, r30
     2aa:	9f 70       	andi	r25, 0x0F	; 15
     2ac:	6b 01       	movw	r12, r22
     2ae:	e1 2c       	mov	r14, r1
     2b0:	f1 2c       	mov	r15, r1
     2b2:	cc 0c       	add	r12, r12
     2b4:	dd 1c       	adc	r13, r13
     2b6:	ee 1c       	adc	r14, r14
     2b8:	ff 1c       	adc	r15, r15
     2ba:	cc 0c       	add	r12, r12
     2bc:	dd 1c       	adc	r13, r13
     2be:	ee 1c       	adc	r14, r14
     2c0:	ff 1c       	adc	r15, r15
     2c2:	cc 0c       	add	r12, r12
     2c4:	dd 1c       	adc	r13, r13
     2c6:	ee 1c       	adc	r14, r14
     2c8:	ff 1c       	adc	r15, r15
     2ca:	cc 0c       	add	r12, r12
     2cc:	dd 1c       	adc	r13, r13
     2ce:	ee 1c       	adc	r14, r14
     2d0:	ff 1c       	adc	r15, r15
     2d2:	e9 2f       	mov	r30, r25
     2d4:	ec 29       	or	r30, r12
     2d6:	e0 93 ed 00 	sts	0x00ED, r30	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     2da:	e2 ef       	ldi	r30, 0xF2	; 242
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	80 81       	ld	r24, Z
     2e0:	8f 70       	andi	r24, 0x0F	; 15
     2e2:	60 e0       	ldi	r22, 0x00	; 0
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	44 0f       	add	r20, r20
     2e8:	55 1f       	adc	r21, r21
     2ea:	66 1f       	adc	r22, r22
     2ec:	77 1f       	adc	r23, r23
     2ee:	44 0f       	add	r20, r20
     2f0:	55 1f       	adc	r21, r21
     2f2:	66 1f       	adc	r22, r22
     2f4:	77 1f       	adc	r23, r23
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	44 0f       	add	r20, r20
     300:	55 1f       	adc	r21, r21
     302:	66 1f       	adc	r22, r22
     304:	77 1f       	adc	r23, r23
     306:	48 2b       	or	r20, r24
     308:	40 83       	st	Z, r20
     30a:	e7 ef       	ldi	r30, 0xF7	; 247
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	48 2f       	mov	r20, r24
     312:	4f 70       	andi	r20, 0x0F	; 15
     314:	c9 01       	movw	r24, r18
     316:	a0 e0       	ldi	r26, 0x00	; 0
     318:	b0 e0       	ldi	r27, 0x00	; 0
     31a:	88 0f       	add	r24, r24
     31c:	99 1f       	adc	r25, r25
     31e:	aa 1f       	adc	r26, r26
     320:	bb 1f       	adc	r27, r27
     322:	88 0f       	add	r24, r24
     324:	99 1f       	adc	r25, r25
     326:	aa 1f       	adc	r26, r26
     328:	bb 1f       	adc	r27, r27
     32a:	88 0f       	add	r24, r24
     32c:	99 1f       	adc	r25, r25
     32e:	aa 1f       	adc	r26, r26
     330:	bb 1f       	adc	r27, r27
     332:	88 0f       	add	r24, r24
     334:	99 1f       	adc	r25, r25
     336:	aa 1f       	adc	r26, r26
     338:	bb 1f       	adc	r27, r27
     33a:	84 2b       	or	r24, r20
     33c:	80 83       	st	Z, r24
     33e:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7e00fc>
     342:	8f 70       	andi	r24, 0x0F	; 15
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	94 e0       	ldi	r25, 0x04	; 4
     34a:	f8 ce       	rjmp	.-528    	; 0x13c <LCDWritePackage+0x4c>
     34c:	8e 2f       	mov	r24, r30
     34e:	80 7f       	andi	r24, 0xF0	; 240
     350:	86 2b       	or	r24, r22
     352:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     356:	e3 ef       	ldi	r30, 0xF3	; 243
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	80 81       	ld	r24, Z
     35c:	80 7f       	andi	r24, 0xF0	; 240
     35e:	48 2b       	or	r20, r24
     360:	40 83       	st	Z, r20
     362:	e8 ef       	ldi	r30, 0xF8	; 248
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 7f       	andi	r24, 0xF0	; 240
     36a:	82 2b       	or	r24, r18
     36c:	80 83       	st	Z, r24
     36e:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     372:	80 7f       	andi	r24, 0xF0	; 240
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	f4 ce       	rjmp	.-536    	; 0x164 <LCDWritePackage+0x74>
     37c:	6b 01       	movw	r12, r22
     37e:	e1 2c       	mov	r14, r1
     380:	f1 2c       	mov	r15, r1
     382:	cc 0c       	add	r12, r12
     384:	dd 1c       	adc	r13, r13
     386:	ee 1c       	adc	r14, r14
     388:	ff 1c       	adc	r15, r15
     38a:	cc 0c       	add	r12, r12
     38c:	dd 1c       	adc	r13, r13
     38e:	ee 1c       	adc	r14, r14
     390:	ff 1c       	adc	r15, r15
     392:	cc 0c       	add	r12, r12
     394:	dd 1c       	adc	r13, r13
     396:	ee 1c       	adc	r14, r14
     398:	ff 1c       	adc	r15, r15
     39a:	cc 0c       	add	r12, r12
     39c:	dd 1c       	adc	r13, r13
     39e:	ee 1c       	adc	r14, r14
     3a0:	ff 1c       	adc	r15, r15
     3a2:	9e 2f       	mov	r25, r30
     3a4:	9f 70       	andi	r25, 0x0F	; 15
     3a6:	e9 2f       	mov	r30, r25
     3a8:	ec 29       	or	r30, r12
     3aa:	e0 93 ee 00 	sts	0x00EE, r30	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     3ae:	e3 ef       	ldi	r30, 0xF3	; 243
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	80 81       	ld	r24, Z
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	44 0f       	add	r20, r20
     3ba:	55 1f       	adc	r21, r21
     3bc:	66 1f       	adc	r22, r22
     3be:	77 1f       	adc	r23, r23
     3c0:	44 0f       	add	r20, r20
     3c2:	55 1f       	adc	r21, r21
     3c4:	66 1f       	adc	r22, r22
     3c6:	77 1f       	adc	r23, r23
     3c8:	44 0f       	add	r20, r20
     3ca:	55 1f       	adc	r21, r21
     3cc:	66 1f       	adc	r22, r22
     3ce:	77 1f       	adc	r23, r23
     3d0:	44 0f       	add	r20, r20
     3d2:	55 1f       	adc	r21, r21
     3d4:	66 1f       	adc	r22, r22
     3d6:	77 1f       	adc	r23, r23
     3d8:	8f 70       	andi	r24, 0x0F	; 15
     3da:	48 2b       	or	r20, r24
     3dc:	40 83       	st	Z, r20
     3de:	e8 ef       	ldi	r30, 0xF8	; 248
     3e0:	f0 e0       	ldi	r31, 0x00	; 0
     3e2:	40 81       	ld	r20, Z
     3e4:	c9 01       	movw	r24, r18
     3e6:	a0 e0       	ldi	r26, 0x00	; 0
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	aa 1f       	adc	r26, r26
     3f0:	bb 1f       	adc	r27, r27
     3f2:	88 0f       	add	r24, r24
     3f4:	99 1f       	adc	r25, r25
     3f6:	aa 1f       	adc	r26, r26
     3f8:	bb 1f       	adc	r27, r27
     3fa:	88 0f       	add	r24, r24
     3fc:	99 1f       	adc	r25, r25
     3fe:	aa 1f       	adc	r26, r26
     400:	bb 1f       	adc	r27, r27
     402:	88 0f       	add	r24, r24
     404:	99 1f       	adc	r25, r25
     406:	aa 1f       	adc	r26, r26
     408:	bb 1f       	adc	r27, r27
     40a:	24 2f       	mov	r18, r20
     40c:	2f 70       	andi	r18, 0x0F	; 15
     40e:	82 2b       	or	r24, r18
     410:	80 83       	st	Z, r24
     412:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7e00fd>
     416:	8f 70       	andi	r24, 0x0F	; 15
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	94 e0       	ldi	r25, 0x04	; 4
     41e:	a2 ce       	rjmp	.-700    	; 0x164 <LCDWritePackage+0x74>
     420:	8e 2f       	mov	r24, r30
     422:	80 7f       	andi	r24, 0xF0	; 240
     424:	86 2b       	or	r24, r22
     426:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     42a:	e3 ef       	ldi	r30, 0xF3	; 243
     42c:	f0 e0       	ldi	r31, 0x00	; 0
     42e:	80 81       	ld	r24, Z
     430:	80 7f       	andi	r24, 0xF0	; 240
     432:	48 2b       	or	r20, r24
     434:	40 83       	st	Z, r20
     436:	e9 ef       	ldi	r30, 0xF9	; 249
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	80 7f       	andi	r24, 0xF0	; 240
     43e:	82 2b       	or	r24, r18
     440:	80 83       	st	Z, r24
     442:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     446:	80 7f       	andi	r24, 0xF0	; 240
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	9f ce       	rjmp	.-706    	; 0x18e <LCDWritePackage+0x9e>
     450:	cb 01       	movw	r24, r22
     452:	a0 e0       	ldi	r26, 0x00	; 0
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	88 0f       	add	r24, r24
     458:	99 1f       	adc	r25, r25
     45a:	aa 1f       	adc	r26, r26
     45c:	bb 1f       	adc	r27, r27
     45e:	88 0f       	add	r24, r24
     460:	99 1f       	adc	r25, r25
     462:	aa 1f       	adc	r26, r26
     464:	bb 1f       	adc	r27, r27
     466:	88 0f       	add	r24, r24
     468:	99 1f       	adc	r25, r25
     46a:	aa 1f       	adc	r26, r26
     46c:	bb 1f       	adc	r27, r27
     46e:	88 0f       	add	r24, r24
     470:	99 1f       	adc	r25, r25
     472:	aa 1f       	adc	r26, r26
     474:	bb 1f       	adc	r27, r27
     476:	ef 70       	andi	r30, 0x0F	; 15
     478:	8e 2b       	or	r24, r30
     47a:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
     47e:	e3 ef       	ldi	r30, 0xF3	; 243
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	60 e0       	ldi	r22, 0x00	; 0
     486:	70 e0       	ldi	r23, 0x00	; 0
     488:	44 0f       	add	r20, r20
     48a:	55 1f       	adc	r21, r21
     48c:	66 1f       	adc	r22, r22
     48e:	77 1f       	adc	r23, r23
     490:	44 0f       	add	r20, r20
     492:	55 1f       	adc	r21, r21
     494:	66 1f       	adc	r22, r22
     496:	77 1f       	adc	r23, r23
     498:	44 0f       	add	r20, r20
     49a:	55 1f       	adc	r21, r21
     49c:	66 1f       	adc	r22, r22
     49e:	77 1f       	adc	r23, r23
     4a0:	44 0f       	add	r20, r20
     4a2:	55 1f       	adc	r21, r21
     4a4:	66 1f       	adc	r22, r22
     4a6:	77 1f       	adc	r23, r23
     4a8:	8f 70       	andi	r24, 0x0F	; 15
     4aa:	48 2b       	or	r20, r24
     4ac:	40 83       	st	Z, r20
     4ae:	e9 ef       	ldi	r30, 0xF9	; 249
     4b0:	f0 e0       	ldi	r31, 0x00	; 0
     4b2:	40 81       	ld	r20, Z
     4b4:	c9 01       	movw	r24, r18
     4b6:	a0 e0       	ldi	r26, 0x00	; 0
     4b8:	b0 e0       	ldi	r27, 0x00	; 0
     4ba:	88 0f       	add	r24, r24
     4bc:	99 1f       	adc	r25, r25
     4be:	aa 1f       	adc	r26, r26
     4c0:	bb 1f       	adc	r27, r27
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	aa 1f       	adc	r26, r26
     4c8:	bb 1f       	adc	r27, r27
     4ca:	88 0f       	add	r24, r24
     4cc:	99 1f       	adc	r25, r25
     4ce:	aa 1f       	adc	r26, r26
     4d0:	bb 1f       	adc	r27, r27
     4d2:	88 0f       	add	r24, r24
     4d4:	99 1f       	adc	r25, r25
     4d6:	aa 1f       	adc	r26, r26
     4d8:	bb 1f       	adc	r27, r27
     4da:	24 2f       	mov	r18, r20
     4dc:	2f 70       	andi	r18, 0x0F	; 15
     4de:	82 2b       	or	r24, r18
     4e0:	80 83       	st	Z, r24
     4e2:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
     4e6:	8f 70       	andi	r24, 0x0F	; 15
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	94 e0       	ldi	r25, 0x04	; 4
     4ee:	4f ce       	rjmp	.-866    	; 0x18e <LCDWritePackage+0x9e>
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	08 95       	ret

000004fe <writeChar>:
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	66 30       	cpi	r22, 0x06	; 6
     504:	71 05       	cpc	r23, r1
     506:	08 f0       	brcs	.+2      	; 0x50a <__stack+0xb>
     508:	c8 c1       	rjmp	.+912    	; 0x89a <__stack+0x39b>
     50a:	db 01       	movw	r26, r22
     50c:	48 2f       	mov	r20, r24
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	fa 01       	movw	r30, r20
     512:	f0 97       	sbiw	r30, 0x30	; 48
     514:	eb 32       	cpi	r30, 0x2B	; 43
     516:	f1 05       	cpc	r31, r1
     518:	08 f0       	brcs	.+2      	; 0x51c <__stack+0x1d>
     51a:	b4 c1       	rjmp	.+872    	; 0x884 <__stack+0x385>
     51c:	e2 5d       	subi	r30, 0xD2	; 210
     51e:	ff 4f       	sbci	r31, 0xFF	; 255
     520:	0c 94 b3 13 	jmp	0x2766	; 0x2766 <__tablejump2__>
     524:	05 e0       	ldi	r16, 0x05	; 5
     526:	10 e0       	ldi	r17, 0x00	; 0
     528:	25 e0       	ldi	r18, 0x05	; 5
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	45 e0       	ldi	r20, 0x05	; 5
     52e:	50 e0       	ldi	r21, 0x00	; 0
     530:	69 e0       	ldi	r22, 0x09	; 9
     532:	70 e0       	ldi	r23, 0x00	; 0
     534:	cd 01       	movw	r24, r26
     536:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     53a:	af c1       	rjmp	.+862    	; 0x89a <__stack+0x39b>
     53c:	00 e0       	ldi	r16, 0x00	; 0
     53e:	10 e0       	ldi	r17, 0x00	; 0
     540:	21 e0       	ldi	r18, 0x01	; 1
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	41 e0       	ldi	r20, 0x01	; 1
     546:	50 e0       	ldi	r21, 0x00	; 0
     548:	60 e0       	ldi	r22, 0x00	; 0
     54a:	70 e0       	ldi	r23, 0x00	; 0
     54c:	cd 01       	movw	r24, r26
     54e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     552:	a3 c1       	rjmp	.+838    	; 0x89a <__stack+0x39b>
     554:	05 e0       	ldi	r16, 0x05	; 5
     556:	10 e0       	ldi	r17, 0x00	; 0
     558:	28 e0       	ldi	r18, 0x08	; 8
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	41 e0       	ldi	r20, 0x01	; 1
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	cd 01       	movw	r24, r26
     566:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     56a:	97 c1       	rjmp	.+814    	; 0x89a <__stack+0x39b>
     56c:	01 e0       	ldi	r16, 0x01	; 1
     56e:	10 e0       	ldi	r17, 0x00	; 0
     570:	2b e0       	ldi	r18, 0x0B	; 11
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	41 e0       	ldi	r20, 0x01	; 1
     576:	50 e0       	ldi	r21, 0x00	; 0
     578:	61 e0       	ldi	r22, 0x01	; 1
     57a:	70 e0       	ldi	r23, 0x00	; 0
     57c:	cd 01       	movw	r24, r26
     57e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     582:	8b c1       	rjmp	.+790    	; 0x89a <__stack+0x39b>
     584:	00 e0       	ldi	r16, 0x00	; 0
     586:	10 e0       	ldi	r17, 0x00	; 0
     588:	2b e0       	ldi	r18, 0x0B	; 11
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	45 e0       	ldi	r20, 0x05	; 5
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	cd 01       	movw	r24, r26
     596:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     59a:	7f c1       	rjmp	.+766    	; 0x89a <__stack+0x39b>
     59c:	01 e0       	ldi	r16, 0x01	; 1
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	2b e0       	ldi	r18, 0x0B	; 11
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	44 e0       	ldi	r20, 0x04	; 4
     5a6:	50 e0       	ldi	r21, 0x00	; 0
     5a8:	61 e0       	ldi	r22, 0x01	; 1
     5aa:	70 e0       	ldi	r23, 0x00	; 0
     5ac:	cd 01       	movw	r24, r26
     5ae:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5b2:	73 c1       	rjmp	.+742    	; 0x89a <__stack+0x39b>
     5b4:	01 e0       	ldi	r16, 0x01	; 1
     5b6:	10 e0       	ldi	r17, 0x00	; 0
     5b8:	2f e0       	ldi	r18, 0x0F	; 15
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	44 e0       	ldi	r20, 0x04	; 4
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	cd 01       	movw	r24, r26
     5c6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5ca:	67 c1       	rjmp	.+718    	; 0x89a <__stack+0x39b>
     5cc:	04 e0       	ldi	r16, 0x04	; 4
     5ce:	10 e0       	ldi	r17, 0x00	; 0
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	69 e0       	ldi	r22, 0x09	; 9
     5da:	70 e0       	ldi	r23, 0x00	; 0
     5dc:	cd 01       	movw	r24, r26
     5de:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5e2:	5b c1       	rjmp	.+694    	; 0x89a <__stack+0x39b>
     5e4:	01 e0       	ldi	r16, 0x01	; 1
     5e6:	10 e0       	ldi	r17, 0x00	; 0
     5e8:	2f e0       	ldi	r18, 0x0F	; 15
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	45 e0       	ldi	r20, 0x05	; 5
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	61 e0       	ldi	r22, 0x01	; 1
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	cd 01       	movw	r24, r26
     5f6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     5fa:	4f c1       	rjmp	.+670    	; 0x89a <__stack+0x39b>
     5fc:	01 e0       	ldi	r16, 0x01	; 1
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	2b e0       	ldi	r18, 0x0B	; 11
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	45 e0       	ldi	r20, 0x05	; 5
     606:	50 e0       	ldi	r21, 0x00	; 0
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	cd 01       	movw	r24, r26
     60e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     612:	43 c1       	rjmp	.+646    	; 0x89a <__stack+0x39b>
     614:	00 e0       	ldi	r16, 0x00	; 0
     616:	10 e0       	ldi	r17, 0x00	; 0
     618:	2f e0       	ldi	r18, 0x0F	; 15
     61a:	30 e0       	ldi	r19, 0x00	; 0
     61c:	45 e0       	ldi	r20, 0x05	; 5
     61e:	50 e0       	ldi	r21, 0x00	; 0
     620:	61 e0       	ldi	r22, 0x01	; 1
     622:	70 e0       	ldi	r23, 0x00	; 0
     624:	cd 01       	movw	r24, r26
     626:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     62a:	37 c1       	rjmp	.+622    	; 0x89a <__stack+0x39b>
     62c:	01 e0       	ldi	r16, 0x01	; 1
     62e:	10 e0       	ldi	r17, 0x00	; 0
     630:	2f e0       	ldi	r18, 0x0F	; 15
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	45 e0       	ldi	r20, 0x05	; 5
     636:	50 e0       	ldi	r21, 0x00	; 0
     638:	61 e0       	ldi	r22, 0x01	; 1
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	cd 01       	movw	r24, r26
     63e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     642:	2b c1       	rjmp	.+598    	; 0x89a <__stack+0x39b>
     644:	01 e0       	ldi	r16, 0x01	; 1
     646:	10 e0       	ldi	r17, 0x00	; 0
     648:	24 e0       	ldi	r18, 0x04	; 4
     64a:	30 e0       	ldi	r19, 0x00	; 0
     64c:	44 e0       	ldi	r20, 0x04	; 4
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	61 e0       	ldi	r22, 0x01	; 1
     652:	70 e0       	ldi	r23, 0x00	; 0
     654:	cd 01       	movw	r24, r26
     656:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     65a:	1f c1       	rjmp	.+574    	; 0x89a <__stack+0x39b>
     65c:	04 e0       	ldi	r16, 0x04	; 4
     65e:	10 e0       	ldi	r17, 0x00	; 0
     660:	24 e0       	ldi	r18, 0x04	; 4
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	46 e0       	ldi	r20, 0x06	; 6
     666:	50 e0       	ldi	r21, 0x00	; 0
     668:	60 e0       	ldi	r22, 0x00	; 0
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	cd 01       	movw	r24, r26
     66e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     672:	13 c1       	rjmp	.+550    	; 0x89a <__stack+0x39b>
     674:	01 e0       	ldi	r16, 0x01	; 1
     676:	10 e0       	ldi	r17, 0x00	; 0
     678:	26 e0       	ldi	r18, 0x06	; 6
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	44 e0       	ldi	r20, 0x04	; 4
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	cd 01       	movw	r24, r26
     686:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     68a:	07 c1       	rjmp	.+526    	; 0x89a <__stack+0x39b>
     68c:	00 e0       	ldi	r16, 0x00	; 0
     68e:	10 e0       	ldi	r17, 0x00	; 0
     690:	2e e0       	ldi	r18, 0x0E	; 14
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	44 e0       	ldi	r20, 0x04	; 4
     696:	50 e0       	ldi	r21, 0x00	; 0
     698:	61 e0       	ldi	r22, 0x01	; 1
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	cd 01       	movw	r24, r26
     69e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6a2:	fb c0       	rjmp	.+502    	; 0x89a <__stack+0x39b>
     6a4:	01 e0       	ldi	r16, 0x01	; 1
     6a6:	10 e0       	ldi	r17, 0x00	; 0
     6a8:	2d e0       	ldi	r18, 0x0D	; 13
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	44 e0       	ldi	r20, 0x04	; 4
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	61 e0       	ldi	r22, 0x01	; 1
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	cd 01       	movw	r24, r26
     6b6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6ba:	ef c0       	rjmp	.+478    	; 0x89a <__stack+0x39b>
     6bc:	00 e0       	ldi	r16, 0x00	; 0
     6be:	10 e0       	ldi	r17, 0x00	; 0
     6c0:	2f e0       	ldi	r18, 0x0F	; 15
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	45 e0       	ldi	r20, 0x05	; 5
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	70 e0       	ldi	r23, 0x00	; 0
     6cc:	cd 01       	movw	r24, r26
     6ce:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6d2:	e3 c0       	rjmp	.+454    	; 0x89a <__stack+0x39b>
     6d4:	02 e0       	ldi	r16, 0x02	; 2
     6d6:	10 e0       	ldi	r17, 0x00	; 0
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	48 e0       	ldi	r20, 0x08	; 8
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	cd 01       	movw	r24, r26
     6e6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     6ea:	d7 c0       	rjmp	.+430    	; 0x89a <__stack+0x39b>
     6ec:	01 e0       	ldi	r16, 0x01	; 1
     6ee:	10 e0       	ldi	r17, 0x00	; 0
     6f0:	21 e0       	ldi	r18, 0x01	; 1
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	41 e0       	ldi	r20, 0x01	; 1
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	cd 01       	movw	r24, r26
     6fe:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     702:	cb c0       	rjmp	.+406    	; 0x89a <__stack+0x39b>
     704:	08 e0       	ldi	r16, 0x08	; 8
     706:	10 e0       	ldi	r17, 0x00	; 0
     708:	26 e0       	ldi	r18, 0x06	; 6
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	44 e0       	ldi	r20, 0x04	; 4
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	68 e0       	ldi	r22, 0x08	; 8
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	cd 01       	movw	r24, r26
     716:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     71a:	bf c0       	rjmp	.+382    	; 0x89a <__stack+0x39b>
     71c:	01 e0       	ldi	r16, 0x01	; 1
     71e:	10 e0       	ldi	r17, 0x00	; 0
     720:	24 e0       	ldi	r18, 0x04	; 4
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	44 e0       	ldi	r20, 0x04	; 4
     726:	50 e0       	ldi	r21, 0x00	; 0
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	70 e0       	ldi	r23, 0x00	; 0
     72c:	cd 01       	movw	r24, r26
     72e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     732:	b3 c0       	rjmp	.+358    	; 0x89a <__stack+0x39b>
     734:	00 e0       	ldi	r16, 0x00	; 0
     736:	10 e0       	ldi	r17, 0x00	; 0
     738:	25 e0       	ldi	r18, 0x05	; 5
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	47 e0       	ldi	r20, 0x07	; 7
     73e:	50 e0       	ldi	r21, 0x00	; 0
     740:	68 e0       	ldi	r22, 0x08	; 8
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	cd 01       	movw	r24, r26
     746:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     74a:	a7 c0       	rjmp	.+334    	; 0x89a <__stack+0x39b>
     74c:	08 e0       	ldi	r16, 0x08	; 8
     74e:	10 e0       	ldi	r17, 0x00	; 0
     750:	25 e0       	ldi	r18, 0x05	; 5
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	47 e0       	ldi	r20, 0x07	; 7
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	cd 01       	movw	r24, r26
     75e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     762:	9b c0       	rjmp	.+310    	; 0x89a <__stack+0x39b>
     764:	01 e0       	ldi	r16, 0x01	; 1
     766:	10 e0       	ldi	r17, 0x00	; 0
     768:	25 e0       	ldi	r18, 0x05	; 5
     76a:	30 e0       	ldi	r19, 0x00	; 0
     76c:	45 e0       	ldi	r20, 0x05	; 5
     76e:	50 e0       	ldi	r21, 0x00	; 0
     770:	61 e0       	ldi	r22, 0x01	; 1
     772:	70 e0       	ldi	r23, 0x00	; 0
     774:	cd 01       	movw	r24, r26
     776:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     77a:	8f c0       	rjmp	.+286    	; 0x89a <__stack+0x39b>
     77c:	00 e0       	ldi	r16, 0x00	; 0
     77e:	10 e0       	ldi	r17, 0x00	; 0
     780:	2e e0       	ldi	r18, 0x0E	; 14
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	45 e0       	ldi	r20, 0x05	; 5
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	61 e0       	ldi	r22, 0x01	; 1
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	cd 01       	movw	r24, r26
     78e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     792:	83 c0       	rjmp	.+262    	; 0x89a <__stack+0x39b>
     794:	09 e0       	ldi	r16, 0x09	; 9
     796:	10 e0       	ldi	r17, 0x00	; 0
     798:	25 e0       	ldi	r18, 0x05	; 5
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	45 e0       	ldi	r20, 0x05	; 5
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	61 e0       	ldi	r22, 0x01	; 1
     7a2:	70 e0       	ldi	r23, 0x00	; 0
     7a4:	cd 01       	movw	r24, r26
     7a6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7aa:	77 c0       	rjmp	.+238    	; 0x89a <__stack+0x39b>
     7ac:	08 e0       	ldi	r16, 0x08	; 8
     7ae:	10 e0       	ldi	r17, 0x00	; 0
     7b0:	2e e0       	ldi	r18, 0x0E	; 14
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	45 e0       	ldi	r20, 0x05	; 5
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	61 e0       	ldi	r22, 0x01	; 1
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	cd 01       	movw	r24, r26
     7be:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7c2:	6b c0       	rjmp	.+214    	; 0x89a <__stack+0x39b>
     7c4:	01 e0       	ldi	r16, 0x01	; 1
     7c6:	10 e0       	ldi	r17, 0x00	; 0
     7c8:	2b e0       	ldi	r18, 0x0B	; 11
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	44 e0       	ldi	r20, 0x04	; 4
     7ce:	50 e0       	ldi	r21, 0x00	; 0
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	cd 01       	movw	r24, r26
     7d6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7da:	5f c0       	rjmp	.+190    	; 0x89a <__stack+0x39b>
     7dc:	02 e0       	ldi	r16, 0x02	; 2
     7de:	10 e0       	ldi	r17, 0x00	; 0
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	48 e0       	ldi	r20, 0x08	; 8
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	61 e0       	ldi	r22, 0x01	; 1
     7ea:	70 e0       	ldi	r23, 0x00	; 0
     7ec:	cd 01       	movw	r24, r26
     7ee:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     7f2:	53 c0       	rjmp	.+166    	; 0x89a <__stack+0x39b>
     7f4:	01 e0       	ldi	r16, 0x01	; 1
     7f6:	10 e0       	ldi	r17, 0x00	; 0
     7f8:	25 e0       	ldi	r18, 0x05	; 5
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	45 e0       	ldi	r20, 0x05	; 5
     7fe:	50 e0       	ldi	r21, 0x00	; 0
     800:	60 e0       	ldi	r22, 0x00	; 0
     802:	70 e0       	ldi	r23, 0x00	; 0
     804:	cd 01       	movw	r24, r26
     806:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     80a:	47 c0       	rjmp	.+142    	; 0x89a <__stack+0x39b>
     80c:	04 e0       	ldi	r16, 0x04	; 4
     80e:	10 e0       	ldi	r17, 0x00	; 0
     810:	24 e0       	ldi	r18, 0x04	; 4
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	44 e0       	ldi	r20, 0x04	; 4
     816:	50 e0       	ldi	r21, 0x00	; 0
     818:	68 e0       	ldi	r22, 0x08	; 8
     81a:	70 e0       	ldi	r23, 0x00	; 0
     81c:	cd 01       	movw	r24, r26
     81e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     822:	3b c0       	rjmp	.+118    	; 0x89a <__stack+0x39b>
     824:	03 e0       	ldi	r16, 0x03	; 3
     826:	10 e0       	ldi	r17, 0x00	; 0
     828:	25 e0       	ldi	r18, 0x05	; 5
     82a:	30 e0       	ldi	r19, 0x00	; 0
     82c:	45 e0       	ldi	r20, 0x05	; 5
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	cd 01       	movw	r24, r26
     836:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     83a:	2f c0       	rjmp	.+94     	; 0x89a <__stack+0x39b>
     83c:	0c e0       	ldi	r16, 0x0C	; 12
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	42 e0       	ldi	r20, 0x02	; 2
     846:	50 e0       	ldi	r21, 0x00	; 0
     848:	68 e0       	ldi	r22, 0x08	; 8
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	cd 01       	movw	r24, r26
     84e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     852:	23 c0       	rjmp	.+70     	; 0x89a <__stack+0x39b>
     854:	02 e0       	ldi	r16, 0x02	; 2
     856:	10 e0       	ldi	r17, 0x00	; 0
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	42 e0       	ldi	r20, 0x02	; 2
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	68 e0       	ldi	r22, 0x08	; 8
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	cd 01       	movw	r24, r26
     866:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     86a:	17 c0       	rjmp	.+46     	; 0x89a <__stack+0x39b>
     86c:	05 e0       	ldi	r16, 0x05	; 5
     86e:	10 e0       	ldi	r17, 0x00	; 0
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	40 e0       	ldi	r20, 0x00	; 0
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	69 e0       	ldi	r22, 0x09	; 9
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	cd 01       	movw	r24, r26
     87e:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     882:	0b c0       	rjmp	.+22     	; 0x89a <__stack+0x39b>
     884:	02 e0       	ldi	r16, 0x02	; 2
     886:	10 e0       	ldi	r17, 0x00	; 0
     888:	28 e0       	ldi	r18, 0x08	; 8
     88a:	30 e0       	ldi	r19, 0x00	; 0
     88c:	41 e0       	ldi	r20, 0x01	; 1
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	cd 01       	movw	r24, r26
     896:	0e 94 78 00 	call	0xf0	; 0xf0 <LCDWritePackage>
     89a:	1f 91       	pop	r17
     89c:	0f 91       	pop	r16
     89e:	08 95       	ret

000008a0 <initLCD>:

// Inits the LCD by using some magic

void initLCD(){
	
	LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
     8a0:	87 eb       	ldi	r24, 0xB7	; 183
     8a2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (0<<LCDPS2) | (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
     8a6:	87 e0       	ldi	r24, 0x07	; 7
     8a8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1<<LCDCC3) | (1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
     8ac:	8f e0       	ldi	r24, 0x0F	; 15
     8ae:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	LCDCRA = (1<<LCDEN);
     8b2:	80 e8       	ldi	r24, 0x80	; 128
     8b4:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
     8b8:	08 95       	ret

000008ba <carOffBridge>:
	
}

void getCarsOnBridge(LightHandler* self, int* output){
	
	*output = self->carsOnBridge;
     8ba:	fc 01       	movw	r30, r24
     8bc:	26 81       	ldd	r18, Z+6	; 0x06
     8be:	37 81       	ldd	r19, Z+7	; 0x07
     8c0:	21 50       	subi	r18, 0x01	; 1
     8c2:	31 09       	sbc	r19, r1
     8c4:	37 83       	std	Z+7, r19	; 0x07
     8c6:	26 83       	std	Z+6, r18	; 0x06
     8c8:	23 2b       	or	r18, r19
     8ca:	61 f4       	brne	.+24     	; 0x8e4 <carOffBridge+0x2a>
     8cc:	23 e0       	ldi	r18, 0x03	; 3
     8ce:	30 e0       	ldi	r19, 0x00	; 0
     8d0:	31 87       	std	Z+9, r19	; 0x09
     8d2:	20 87       	std	Z+8, r18	; 0x08
     8d4:	33 87       	std	Z+11, r19	; 0x0b
     8d6:	22 87       	std	Z+10, r18	; 0x0a
     8d8:	40 e0       	ldi	r20, 0x00	; 0
     8da:	50 e0       	ldi	r21, 0x00	; 0
     8dc:	63 e7       	ldi	r22, 0x73	; 115
     8de:	74 e0       	ldi	r23, 0x04	; 4
     8e0:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
     8e4:	08 95       	ret

000008e6 <onLightChange>:
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	ec 01       	movw	r28, r24
     8f8:	88 85       	ldd	r24, Y+8	; 0x08
     8fa:	99 85       	ldd	r25, Y+9	; 0x09
     8fc:	82 30       	cpi	r24, 0x02	; 2
     8fe:	91 05       	cpc	r25, r1
     900:	19 f0       	breq	.+6      	; 0x908 <onLightChange+0x22>
     902:	42 e0       	ldi	r20, 0x02	; 2
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	02 c0       	rjmp	.+4      	; 0x90c <onLightChange+0x26>
     908:	41 e0       	ldi	r20, 0x01	; 1
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	2a 85       	ldd	r18, Y+10	; 0x0a
     90e:	3b 85       	ldd	r19, Y+11	; 0x0b
     910:	22 30       	cpi	r18, 0x02	; 2
     912:	31 05       	cpc	r19, r1
     914:	21 f4       	brne	.+8      	; 0x91e <onLightChange+0x38>
     916:	6a 01       	movw	r12, r20
     918:	68 94       	set
     91a:	c2 f8       	bld	r12, 2
     91c:	03 c0       	rjmp	.+6      	; 0x924 <onLightChange+0x3e>
     91e:	6a 01       	movw	r12, r20
     920:	68 94       	set
     922:	c3 f8       	bld	r12, 3
     924:	02 97       	sbiw	r24, 0x02	; 2
     926:	11 f0       	breq	.+4      	; 0x92c <onLightChange+0x46>
     928:	82 e5       	ldi	r24, 0x52	; 82
     92a:	01 c0       	rjmp	.+2      	; 0x92e <onLightChange+0x48>
     92c:	87 e4       	ldi	r24, 0x47	; 71
     92e:	61 e0       	ldi	r22, 0x01	; 1
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
     936:	8a 85       	ldd	r24, Y+10	; 0x0a
     938:	9b 85       	ldd	r25, Y+11	; 0x0b
     93a:	02 97       	sbiw	r24, 0x02	; 2
     93c:	11 f0       	breq	.+4      	; 0x942 <onLightChange+0x5c>
     93e:	82 e5       	ldi	r24, 0x52	; 82
     940:	01 c0       	rjmp	.+2      	; 0x944 <onLightChange+0x5e>
     942:	87 e4       	ldi	r24, 0x47	; 71
     944:	63 e0       	ldi	r22, 0x03	; 3
     946:	70 e0       	ldi	r23, 0x00	; 0
     948:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
     94c:	8e 81       	ldd	r24, Y+6	; 0x06
     94e:	9f 81       	ldd	r25, Y+7	; 0x07
     950:	6a e0       	ldi	r22, 0x0A	; 10
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	0e 94 9f 13 	call	0x273e	; 0x273e <__divmodhi4>
     958:	62 e0       	ldi	r22, 0x02	; 2
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	80 5d       	subi	r24, 0xD0	; 208
     95e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
     962:	0c 81       	ldd	r16, Y+4	; 0x04
     964:	1d 81       	ldd	r17, Y+5	; 0x05
     966:	0f 2e       	mov	r0, r31
     968:	f1 e5       	ldi	r31, 0x51	; 81
     96a:	ef 2e       	mov	r14, r31
     96c:	f7 e0       	ldi	r31, 0x07	; 7
     96e:	ff 2e       	mov	r15, r31
     970:	f0 2d       	mov	r31, r0
     972:	2f e4       	ldi	r18, 0x4F	; 79
     974:	32 e1       	ldi	r19, 0x12	; 18
     976:	40 e0       	ldi	r20, 0x00	; 0
     978:	50 e0       	ldi	r21, 0x00	; 0
     97a:	65 e3       	ldi	r22, 0x35	; 53
     97c:	7c e0       	ldi	r23, 0x0C	; 12
     97e:	80 e0       	ldi	r24, 0x00	; 0
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	1f 91       	pop	r17
     98c:	0f 91       	pop	r16
     98e:	ff 90       	pop	r15
     990:	ef 90       	pop	r14
     992:	df 90       	pop	r13
     994:	cf 90       	pop	r12
     996:	08 95       	ret

00000998 <initLightHandler>:
     998:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <counter+0x1>
     99c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <counter>
     9a0:	fc 01       	movw	r30, r24
     9a2:	75 83       	std	Z+5, r23	; 0x05
     9a4:	64 83       	std	Z+4, r22	; 0x04
     9a6:	08 95       	ret

000009a8 <pushLightState>:
     9a8:	fb 01       	movw	r30, r22
     9aa:	ee 0f       	add	r30, r30
     9ac:	ff 1f       	adc	r31, r31
     9ae:	e8 0f       	add	r30, r24
     9b0:	f9 1f       	adc	r31, r25
     9b2:	20 85       	ldd	r18, Z+8	; 0x08
     9b4:	31 85       	ldd	r19, Z+9	; 0x09
     9b6:	23 30       	cpi	r18, 0x03	; 3
     9b8:	31 05       	cpc	r19, r1
     9ba:	59 f4       	brne	.+22     	; 0x9d2 <pushLightState+0x2a>
     9bc:	dc 01       	movw	r26, r24
     9be:	16 96       	adiw	r26, 0x06	; 6
     9c0:	8d 91       	ld	r24, X+
     9c2:	9c 91       	ld	r25, X
     9c4:	17 97       	sbiw	r26, 0x07	; 7
     9c6:	89 2b       	or	r24, r25
     9c8:	21 f4       	brne	.+8      	; 0x9d2 <pushLightState+0x2a>
     9ca:	82 e0       	ldi	r24, 0x02	; 2
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	91 87       	std	Z+9, r25	; 0x09
     9d0:	80 87       	std	Z+8, r24	; 0x08
     9d2:	08 95       	ret

000009d4 <pushCarToBridge>:
     9d4:	cf 92       	push	r12
     9d6:	df 92       	push	r13
     9d8:	ef 92       	push	r14
     9da:	ff 92       	push	r15
     9dc:	0f 93       	push	r16
     9de:	1f 93       	push	r17
     9e0:	fc 01       	movw	r30, r24
     9e2:	26 81       	ldd	r18, Z+6	; 0x06
     9e4:	37 81       	ldd	r19, Z+7	; 0x07
     9e6:	2f 5f       	subi	r18, 0xFF	; 255
     9e8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ea:	37 83       	std	Z+7, r19	; 0x07
     9ec:	26 83       	std	Z+6, r18	; 0x06
     9ee:	c1 2c       	mov	r12, r1
     9f0:	d1 2c       	mov	r13, r1
     9f2:	0f 2e       	mov	r0, r31
     9f4:	fd e5       	ldi	r31, 0x5D	; 93
     9f6:	ef 2e       	mov	r14, r31
     9f8:	f4 e0       	ldi	r31, 0x04	; 4
     9fa:	ff 2e       	mov	r15, r31
     9fc:	f0 2d       	mov	r31, r0
     9fe:	8c 01       	movw	r16, r24
     a00:	2f e8       	ldi	r18, 0x8F	; 143
     a02:	3e e6       	ldi	r19, 0x6E	; 110
     a04:	42 e0       	ldi	r20, 0x02	; 2
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	6a e5       	ldi	r22, 0x5A	; 90
     a0a:	72 e6       	ldi	r23, 0x62	; 98
     a0c:	82 e0       	ldi	r24, 0x02	; 2
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	ff 90       	pop	r15
     a1a:	ef 90       	pop	r14
     a1c:	df 90       	pop	r13
     a1e:	cf 90       	pop	r12
     a20:	08 95       	ret

00000a22 <getLightState>:
	
}

void getLightState(LightHandler* self, int* arg){
	
	*arg = self->lightState[*arg];
     a22:	fb 01       	movw	r30, r22
     a24:	20 81       	ld	r18, Z
     a26:	31 81       	ldd	r19, Z+1	; 0x01
     a28:	2c 5f       	subi	r18, 0xFC	; 252
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	22 0f       	add	r18, r18
     a2e:	33 1f       	adc	r19, r19
     a30:	82 0f       	add	r24, r18
     a32:	93 1f       	adc	r25, r19
     a34:	fc 01       	movw	r30, r24
     a36:	80 81       	ld	r24, Z
     a38:	91 81       	ldd	r25, Z+1	; 0x01
     a3a:	fb 01       	movw	r30, r22
     a3c:	91 83       	std	Z+1, r25	; 0x01
     a3e:	80 83       	st	Z, r24
     a40:	08 95       	ret

00000a42 <setLightStateRed>:
	
}

void setLightStateRed(LightHandler* self, int direction){
	self->lightState[direction] = RED;
     a42:	6c 5f       	subi	r22, 0xFC	; 252
     a44:	7f 4f       	sbci	r23, 0xFF	; 255
     a46:	66 0f       	add	r22, r22
     a48:	77 1f       	adc	r23, r23
     a4a:	86 0f       	add	r24, r22
     a4c:	97 1f       	adc	r25, r23
     a4e:	23 e0       	ldi	r18, 0x03	; 3
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	fc 01       	movw	r30, r24
     a54:	31 83       	std	Z+1, r19	; 0x01
     a56:	20 83       	st	Z, r18
     a58:	08 95       	ret

00000a5a <main>:
#include "LCD.h"

#define F_CPU 8000000
#include <util/delay.h>

int main(void){
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	cd b7       	in	r28, 0x3d	; 61
     a60:	de b7       	in	r29, 0x3e	; 62
     a62:	a4 97       	sbiw	r28, 0x24	; 36
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	f8 94       	cli
     a68:	de bf       	out	0x3e, r29	; 62
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	cd bf       	out	0x3d, r28	; 61
	
	CLKPR = 0x80;
     a6e:	e1 e6       	ldi	r30, 0x61	; 97
     a70:	f0 e0       	ldi	r31, 0x00	; 0
     a72:	80 e8       	ldi	r24, 0x80	; 128
     a74:	80 83       	st	Z, r24
	CLKPR = 0x00;
     a76:	10 82       	st	Z, r1
	
	MainClass mainClass = INIT_MAIN_CLASS;
     a78:	ce 01       	movw	r24, r28
     a7a:	01 96       	adiw	r24, 0x01	; 1
     a7c:	24 e2       	ldi	r18, 0x24	; 36
     a7e:	fc 01       	movw	r30, r24
     a80:	11 92       	st	Z+, r1
     a82:	2a 95       	dec	r18
     a84:	e9 f7       	brne	.-6      	; 0xa80 <main+0x26>
     a86:	23 e0       	ldi	r18, 0x03	; 3
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	3a 8f       	std	Y+26, r19	; 0x1a
     a8c:	29 8f       	std	Y+25, r18	; 0x19
     a8e:	3c 8f       	std	Y+28, r19	; 0x1c
     a90:	2b 8f       	std	Y+27, r18	; 0x1b
	TINYTIMBER(&mainClass, &runMain, NULL);
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	6a e5       	ldi	r22, 0x5A	; 90
     a98:	75 e0       	ldi	r23, 0x05	; 5
     a9a:	0e 94 83 13 	call	0x2706	; 0x2706 <tinytimber>
}
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	a4 96       	adiw	r28, 0x24	; 36
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	f8 94       	cli
     aa8:	de bf       	out	0x3e, r29	; 62
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	cd bf       	out	0x3d, r28	; 61
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	08 95       	ret

00000ab4 <runMain>:
void checkCarArrived(MainClass* self, int* input, int direction);
void tryToPass(MainClass* self, int* input, int direction);
void checkBridgeState(MainClass* self, int* input, int direction);


void runMain(MainClass* self){
     ab4:	cf 92       	push	r12
     ab6:	df 92       	push	r13
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	8c 01       	movw	r16, r24
	
	initSerial(&(self->serial), (Object*)(self), (void*)&onSensorRead);
     ac6:	7c 01       	movw	r14, r24
     ac8:	84 e0       	ldi	r24, 0x04	; 4
     aca:	e8 0e       	add	r14, r24
     acc:	f1 1c       	adc	r15, r1
     ace:	4a e6       	ldi	r20, 0x6A	; 106
     ad0:	56 e0       	ldi	r21, 0x06	; 6
     ad2:	b8 01       	movw	r22, r16
     ad4:	c7 01       	movw	r24, r14
     ad6:	0e 94 16 07 	call	0xe2c	; 0xe2c <initSerial>
	initLightHandler(&(self->lightHandler), &(self->serial));
     ada:	e8 01       	movw	r28, r16
     adc:	60 96       	adiw	r28, 0x10	; 16
     ade:	b7 01       	movw	r22, r14
     ae0:	ce 01       	movw	r24, r28
     ae2:	0e 94 cc 04 	call	0x998	; 0x998 <initLightHandler>
	
	SEND(MSEC(100), MSEC(200), self, &onSensorRead, 0b0000);
     ae6:	c1 2c       	mov	r12, r1
     ae8:	d1 2c       	mov	r13, r1
     aea:	0f 2e       	mov	r0, r31
     aec:	fa e6       	ldi	r31, 0x6A	; 106
     aee:	ef 2e       	mov	r14, r31
     af0:	f6 e0       	ldi	r31, 0x06	; 6
     af2:	ff 2e       	mov	r15, r31
     af4:	f0 2d       	mov	r31, r0
     af6:	2a e6       	ldi	r18, 0x6A	; 106
     af8:	38 e1       	ldi	r19, 0x18	; 24
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	50 e0       	ldi	r21, 0x00	; 0
     afe:	65 e3       	ldi	r22, 0x35	; 53
     b00:	7c e0       	ldi	r23, 0x0C	; 12
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
	SEND(MSEC(100), MSEC(200), &(self->lightHandler), &onLightChange, NULL);
     b0a:	0f 2e       	mov	r0, r31
     b0c:	f3 e7       	ldi	r31, 0x73	; 115
     b0e:	ef 2e       	mov	r14, r31
     b10:	f4 e0       	ldi	r31, 0x04	; 4
     b12:	ff 2e       	mov	r15, r31
     b14:	f0 2d       	mov	r31, r0
     b16:	8e 01       	movw	r16, r28
     b18:	2a e6       	ldi	r18, 0x6A	; 106
     b1a:	38 e1       	ldi	r19, 0x18	; 24
     b1c:	40 e0       	ldi	r20, 0x00	; 0
     b1e:	50 e0       	ldi	r21, 0x00	; 0
     b20:	65 e3       	ldi	r22, 0x35	; 53
     b22:	7c e0       	ldi	r23, 0x0C	; 12
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>

}
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	1f 91       	pop	r17
     b32:	0f 91       	pop	r16
     b34:	ff 90       	pop	r15
     b36:	ef 90       	pop	r14
     b38:	df 90       	pop	r13
     b3a:	cf 90       	pop	r12
     b3c:	08 95       	ret

00000b3e <checkCarArrived>:
	SYNC(&(self->lightHandler), &onLightChange, NULL);
}

void checkCarArrived(MainClass* self, int* input, int direction){

	if((*input) & (1 << (direction == NORTH ? 0 : 2))){
     b3e:	fb 01       	movw	r30, r22
     b40:	20 81       	ld	r18, Z
     b42:	31 81       	ldd	r19, Z+1	; 0x01
     b44:	41 15       	cp	r20, r1
     b46:	51 05       	cpc	r21, r1
     b48:	19 f0       	breq	.+6      	; 0xb50 <checkCarArrived+0x12>
     b4a:	64 e0       	ldi	r22, 0x04	; 4
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	02 c0       	rjmp	.+4      	; 0xb54 <checkCarArrived+0x16>
     b50:	61 e0       	ldi	r22, 0x01	; 1
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	26 23       	and	r18, r22
     b56:	37 23       	and	r19, r23
     b58:	23 2b       	or	r18, r19
     b5a:	51 f0       	breq	.+20     	; 0xb70 <checkCarArrived+0x32>
     b5c:	44 0f       	add	r20, r20
     b5e:	55 1f       	adc	r21, r21
     b60:	fc 01       	movw	r30, r24
     b62:	e4 0f       	add	r30, r20
     b64:	f5 1f       	adc	r31, r21
	
		self->queue[direction]++;
     b66:	84 8d       	ldd	r24, Z+28	; 0x1c
     b68:	95 8d       	ldd	r25, Z+29	; 0x1d
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	95 8f       	std	Z+29, r25	; 0x1d
     b6e:	84 8f       	std	Z+28, r24	; 0x1c
     b70:	08 95       	ret

00000b72 <tryToPass>:
	
	}

}

void tryToPass(MainClass* self, int* input, int direction){
     b72:	0f 93       	push	r16
     b74:	1f 93       	push	r17
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
	
	if(*input & (1 << (direction == NORTH ? 1 : 3))){
     b7a:	fb 01       	movw	r30, r22
     b7c:	20 81       	ld	r18, Z
     b7e:	31 81       	ldd	r19, Z+1	; 0x01
     b80:	41 15       	cp	r20, r1
     b82:	51 05       	cpc	r21, r1
     b84:	19 f0       	breq	.+6      	; 0xb8c <tryToPass+0x1a>
     b86:	68 e0       	ldi	r22, 0x08	; 8
     b88:	70 e0       	ldi	r23, 0x00	; 0
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <tryToPass+0x1e>
     b8c:	62 e0       	ldi	r22, 0x02	; 2
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	26 23       	and	r18, r22
     b92:	37 23       	and	r19, r23
     b94:	23 2b       	or	r18, r19
     b96:	21 f1       	breq	.+72     	; 0xbe0 <tryToPass+0x6e>
     b98:	ea 01       	movw	r28, r20
     b9a:	8c 01       	movw	r16, r24
		
		SYNC(&(self->lightHandler), &pushCarToBridge, direction);
     b9c:	6a ee       	ldi	r22, 0xEA	; 234
     b9e:	74 e0       	ldi	r23, 0x04	; 4
     ba0:	40 96       	adiw	r24, 0x10	; 16
     ba2:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
		
		self->passedSinceChange[direction == NORTH ? SOUTH : NORTH] = 0;
     ba6:	21 e0       	ldi	r18, 0x01	; 1
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	20 97       	sbiw	r28, 0x00	; 0
     bac:	11 f0       	breq	.+4      	; 0xbb2 <tryToPass+0x40>
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	d9 01       	movw	r26, r18
     bb4:	50 96       	adiw	r26, 0x10	; 16
     bb6:	aa 0f       	add	r26, r26
     bb8:	bb 1f       	adc	r27, r27
     bba:	a0 0f       	add	r26, r16
     bbc:	b1 1f       	adc	r27, r17
     bbe:	1d 92       	st	X+, r1
     bc0:	1c 92       	st	X, r1
     bc2:	fe 01       	movw	r30, r28
     bc4:	ee 0f       	add	r30, r30
     bc6:	ff 1f       	adc	r31, r31
     bc8:	e0 0f       	add	r30, r16
     bca:	f1 1f       	adc	r31, r17
		self->passedSinceChange[direction]++;
     bcc:	80 a1       	ldd	r24, Z+32	; 0x20
     bce:	91 a1       	ldd	r25, Z+33	; 0x21
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	91 a3       	std	Z+33, r25	; 0x21
     bd4:	80 a3       	std	Z+32, r24	; 0x20
		
		self->queue[direction]--;
     bd6:	84 8d       	ldd	r24, Z+28	; 0x1c
     bd8:	95 8d       	ldd	r25, Z+29	; 0x1d
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	95 8f       	std	Z+29, r25	; 0x1d
     bde:	84 8f       	std	Z+28, r24	; 0x1c
	}
	
	
}
     be0:	df 91       	pop	r29
     be2:	cf 91       	pop	r28
     be4:	1f 91       	pop	r17
     be6:	0f 91       	pop	r16
     be8:	08 95       	ret

00000bea <checkBridgeState>:

void checkBridgeState(MainClass* self, int* input, int direction){
     bea:	8f 92       	push	r8
     bec:	9f 92       	push	r9
     bee:	af 92       	push	r10
     bf0:	bf 92       	push	r11
     bf2:	cf 92       	push	r12
     bf4:	df 92       	push	r13
     bf6:	ef 92       	push	r14
     bf8:	ff 92       	push	r15
     bfa:	0f 93       	push	r16
     bfc:	1f 93       	push	r17
     bfe:	cf 93       	push	r28
     c00:	df 93       	push	r29
     c02:	00 d0       	rcall	.+0      	; 0xc04 <checkBridgeState+0x1a>
     c04:	00 d0       	rcall	.+0      	; 0xc06 <checkBridgeState+0x1c>
     c06:	cd b7       	in	r28, 0x3d	; 61
     c08:	de b7       	in	r29, 0x3e	; 62
     c0a:	5c 01       	movw	r10, r24
     c0c:	7a 01       	movw	r14, r20

	int lightThis = direction;
     c0e:	5a 83       	std	Y+2, r21	; 0x02
     c10:	49 83       	std	Y+1, r20	; 0x01
	SYNC(&(self->lightHandler), &getLightState, &lightThis);
     c12:	6c 01       	movw	r12, r24
     c14:	80 e1       	ldi	r24, 0x10	; 16
     c16:	c8 0e       	add	r12, r24
     c18:	d1 1c       	adc	r13, r1
     c1a:	ae 01       	movw	r20, r28
     c1c:	4f 5f       	subi	r20, 0xFF	; 255
     c1e:	5f 4f       	sbci	r21, 0xFF	; 255
     c20:	61 e1       	ldi	r22, 0x11	; 17
     c22:	75 e0       	ldi	r23, 0x05	; 5
     c24:	c6 01       	movw	r24, r12
     c26:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
	
	int lightOther = ((direction == NORTH) ? SOUTH : NORTH);
     c2a:	01 e0       	ldi	r16, 0x01	; 1
     c2c:	10 e0       	ldi	r17, 0x00	; 0
     c2e:	e1 14       	cp	r14, r1
     c30:	f1 04       	cpc	r15, r1
     c32:	11 f0       	breq	.+4      	; 0xc38 <checkBridgeState+0x4e>
     c34:	00 e0       	ldi	r16, 0x00	; 0
     c36:	10 e0       	ldi	r17, 0x00	; 0
     c38:	1c 83       	std	Y+4, r17	; 0x04
     c3a:	0b 83       	std	Y+3, r16	; 0x03
	SYNC(&(self->lightHandler), &getLightState, &lightOther);
     c3c:	ae 01       	movw	r20, r28
     c3e:	4d 5f       	subi	r20, 0xFD	; 253
     c40:	5f 4f       	sbci	r21, 0xFF	; 255
     c42:	61 e1       	ldi	r22, 0x11	; 17
     c44:	75 e0       	ldi	r23, 0x05	; 5
     c46:	c6 01       	movw	r24, r12
     c48:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
     c4c:	d7 01       	movw	r26, r14
     c4e:	aa 0f       	add	r26, r26
     c50:	bb 1f       	adc	r27, r27
     c52:	aa 0d       	add	r26, r10
     c54:	bb 1d       	adc	r27, r11
	
	
	if((self->passedSinceChange[direction] >= MAXCARS) && self->queue[((direction == NORTH) ? SOUTH : NORTH)]){
     c56:	90 96       	adiw	r26, 0x20	; 32
     c58:	8d 91       	ld	r24, X+
     c5a:	9c 91       	ld	r25, X
     c5c:	91 97       	sbiw	r26, 0x21	; 33
     c5e:	0a 97       	sbiw	r24, 0x0a	; 10
     c60:	c4 f0       	brlt	.+48     	; 0xc92 <checkBridgeState+0xa8>
     c62:	f8 01       	movw	r30, r16
     c64:	3e 96       	adiw	r30, 0x0e	; 14
     c66:	ee 0f       	add	r30, r30
     c68:	ff 1f       	adc	r31, r31
     c6a:	ea 0d       	add	r30, r10
     c6c:	fb 1d       	adc	r31, r11
     c6e:	80 81       	ld	r24, Z
     c70:	91 81       	ldd	r25, Z+1	; 0x01
     c72:	89 2b       	or	r24, r25
     c74:	71 f0       	breq	.+28     	; 0xc92 <checkBridgeState+0xa8>
		SYNC(&(self->lightHandler), &setLightStateRed, direction);
     c76:	a7 01       	movw	r20, r14
     c78:	61 e2       	ldi	r22, 0x21	; 33
     c7a:	75 e0       	ldi	r23, 0x05	; 5
     c7c:	c6 01       	movw	r24, r12
     c7e:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
		SYNC(&(self->lightHandler), &pushLightState, direction == NORTH ? SOUTH : NORTH);
     c82:	40 2f       	mov	r20, r16
     c84:	51 2f       	mov	r21, r17
     c86:	64 ed       	ldi	r22, 0xD4	; 212
     c88:	74 e0       	ldi	r23, 0x04	; 4
     c8a:	c6 01       	movw	r24, r12
     c8c:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
     c90:	10 c0       	rjmp	.+32     	; 0xcb2 <checkBridgeState+0xc8>
	}
	else if(self->queue[direction] && (lightOther == RED)){
     c92:	5c 96       	adiw	r26, 0x1c	; 28
     c94:	8d 91       	ld	r24, X+
     c96:	9c 91       	ld	r25, X
     c98:	5d 97       	sbiw	r26, 0x1d	; 29
     c9a:	89 2b       	or	r24, r25
     c9c:	51 f0       	breq	.+20     	; 0xcb2 <checkBridgeState+0xc8>
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	9c 81       	ldd	r25, Y+4	; 0x04
     ca2:	03 97       	sbiw	r24, 0x03	; 3
     ca4:	31 f4       	brne	.+12     	; 0xcb2 <checkBridgeState+0xc8>
		SYNC(&(self->lightHandler), &pushLightState, direction);
     ca6:	a7 01       	movw	r20, r14
     ca8:	64 ed       	ldi	r22, 0xD4	; 212
     caa:	74 e0       	ldi	r23, 0x04	; 4
     cac:	c6 01       	movw	r24, r12
     cae:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
	}
	
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	0f 90       	pop	r0
     cb8:	0f 90       	pop	r0
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	1f 91       	pop	r17
     cc0:	0f 91       	pop	r16
     cc2:	ff 90       	pop	r15
     cc4:	ef 90       	pop	r14
     cc6:	df 90       	pop	r13
     cc8:	cf 90       	pop	r12
     cca:	bf 90       	pop	r11
     ccc:	af 90       	pop	r10
     cce:	9f 90       	pop	r9
     cd0:	8f 90       	pop	r8
     cd2:	08 95       	ret

00000cd4 <onSensorRead>:
	SEND(MSEC(100), MSEC(200), self, &onSensorRead, 0b0000);
	SEND(MSEC(100), MSEC(200), &(self->lightHandler), &onLightChange, NULL);

}

void onSensorRead(MainClass* self, int input){
     cd4:	ef 92       	push	r14
     cd6:	ff 92       	push	r15
     cd8:	0f 93       	push	r16
     cda:	1f 93       	push	r17
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	00 d0       	rcall	.+0      	; 0xce2 <onSensorRead+0xe>
     ce2:	cd b7       	in	r28, 0x3d	; 61
     ce4:	de b7       	in	r29, 0x3e	; 62
     ce6:	8c 01       	movw	r16, r24
     ce8:	7a 83       	std	Y+2, r23	; 0x02
     cea:	69 83       	std	Y+1, r22	; 0x01
		
	checkCarArrived(self, &input, NORTH);
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	be 01       	movw	r22, r28
     cf2:	6f 5f       	subi	r22, 0xFF	; 255
     cf4:	7f 4f       	sbci	r23, 0xFF	; 255
     cf6:	0e 94 9f 05 	call	0xb3e	; 0xb3e <checkCarArrived>
	checkCarArrived(self, &input, SOUTH);
     cfa:	41 e0       	ldi	r20, 0x01	; 1
     cfc:	50 e0       	ldi	r21, 0x00	; 0
     cfe:	be 01       	movw	r22, r28
     d00:	6f 5f       	subi	r22, 0xFF	; 255
     d02:	7f 4f       	sbci	r23, 0xFF	; 255
     d04:	c8 01       	movw	r24, r16
     d06:	0e 94 9f 05 	call	0xb3e	; 0xb3e <checkCarArrived>
	
	checkBridgeState(self, &input, NORTH);
     d0a:	40 e0       	ldi	r20, 0x00	; 0
     d0c:	50 e0       	ldi	r21, 0x00	; 0
     d0e:	be 01       	movw	r22, r28
     d10:	6f 5f       	subi	r22, 0xFF	; 255
     d12:	7f 4f       	sbci	r23, 0xFF	; 255
     d14:	c8 01       	movw	r24, r16
     d16:	0e 94 f5 05 	call	0xbea	; 0xbea <checkBridgeState>
	checkBridgeState(self, &input, SOUTH);
     d1a:	41 e0       	ldi	r20, 0x01	; 1
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	be 01       	movw	r22, r28
     d20:	6f 5f       	subi	r22, 0xFF	; 255
     d22:	7f 4f       	sbci	r23, 0xFF	; 255
     d24:	c8 01       	movw	r24, r16
     d26:	0e 94 f5 05 	call	0xbea	; 0xbea <checkBridgeState>
	
	tryToPass(self, &input, NORTH);
     d2a:	40 e0       	ldi	r20, 0x00	; 0
     d2c:	50 e0       	ldi	r21, 0x00	; 0
     d2e:	be 01       	movw	r22, r28
     d30:	6f 5f       	subi	r22, 0xFF	; 255
     d32:	7f 4f       	sbci	r23, 0xFF	; 255
     d34:	c8 01       	movw	r24, r16
     d36:	0e 94 b9 05 	call	0xb72	; 0xb72 <tryToPass>
	tryToPass(self, &input, SOUTH);
     d3a:	41 e0       	ldi	r20, 0x01	; 1
     d3c:	50 e0       	ldi	r21, 0x00	; 0
     d3e:	be 01       	movw	r22, r28
     d40:	6f 5f       	subi	r22, 0xFF	; 255
     d42:	7f 4f       	sbci	r23, 0xFF	; 255
     d44:	c8 01       	movw	r24, r16
     d46:	0e 94 b9 05 	call	0xb72	; 0xb72 <tryToPass>
	
	writeChar('0' + (self->queue[NORTH] % 10), 0);
     d4a:	f8 01       	movw	r30, r16
     d4c:	84 8d       	ldd	r24, Z+28	; 0x1c
     d4e:	95 8d       	ldd	r25, Z+29	; 0x1d
     d50:	0f 2e       	mov	r0, r31
     d52:	fa e0       	ldi	r31, 0x0A	; 10
     d54:	ef 2e       	mov	r14, r31
     d56:	f1 2c       	mov	r15, r1
     d58:	f0 2d       	mov	r31, r0
     d5a:	b7 01       	movw	r22, r14
     d5c:	0e 94 9f 13 	call	0x273e	; 0x273e <__divmodhi4>
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	80 5d       	subi	r24, 0xD0	; 208
     d66:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	writeChar('0' + (self->queue[SOUTH] % 10), 4);
     d6a:	f8 01       	movw	r30, r16
     d6c:	86 8d       	ldd	r24, Z+30	; 0x1e
     d6e:	97 8d       	ldd	r25, Z+31	; 0x1f
     d70:	b7 01       	movw	r22, r14
     d72:	0e 94 9f 13 	call	0x273e	; 0x273e <__divmodhi4>
     d76:	64 e0       	ldi	r22, 0x04	; 4
     d78:	70 e0       	ldi	r23, 0x00	; 0
     d7a:	80 5d       	subi	r24, 0xD0	; 208
     d7c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <writeChar>
	
	SYNC(&(self->lightHandler), &onLightChange, NULL);
     d80:	40 e0       	ldi	r20, 0x00	; 0
     d82:	50 e0       	ldi	r21, 0x00	; 0
     d84:	63 e7       	ldi	r22, 0x73	; 115
     d86:	74 e0       	ldi	r23, 0x04	; 4
     d88:	c8 01       	movw	r24, r16
     d8a:	40 96       	adiw	r24, 0x10	; 16
     d8c:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
}
     d90:	0f 90       	pop	r0
     d92:	0f 90       	pop	r0
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	ef 90       	pop	r14
     da0:	08 95       	ret

00000da2 <pushToSerial>:
	//INSTALL(self, &pullFromSerial, IRQ_USART0_RX);
	SEND(MSEC(100), MSEC(110), self, &pushToSerial, NULL);
		
}

void pushToSerial(Serial* self){
     da2:	cf 92       	push	r12
     da4:	df 92       	push	r13
     da6:	ef 92       	push	r14
     da8:	ff 92       	push	r15
     daa:	0f 93       	push	r16
     dac:	1f 93       	push	r17
     dae:	8c 01       	movw	r16, r24
	
	while(!(UCSR0A & (1 << UDRE0)));
     db0:	e0 ec       	ldi	r30, 0xC0	; 192
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	90 81       	ld	r25, Z
     db6:	95 ff       	sbrs	r25, 5
     db8:	fd cf       	rjmp	.-6      	; 0xdb4 <pushToSerial+0x12>
	UDR0 = self->output;
     dba:	f8 01       	movw	r30, r16
     dbc:	82 85       	ldd	r24, Z+10	; 0x0a
     dbe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
		
	//writeChar('0' + (self->output % 10), 5);
	ASYNC(self, &pullFromSerial, NULL);
     dc2:	c1 2c       	mov	r12, r1
     dc4:	d1 2c       	mov	r13, r1
     dc6:	0f 2e       	mov	r0, r31
     dc8:	f8 ef       	ldi	r31, 0xF8	; 248
     dca:	ef 2e       	mov	r14, r31
     dcc:	f6 e0       	ldi	r31, 0x06	; 6
     dce:	ff 2e       	mov	r15, r31
     dd0:	f0 2d       	mov	r31, r0
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	a9 01       	movw	r20, r18
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	cb 01       	movw	r24, r22
     dde:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>

}
     de2:	1f 91       	pop	r17
     de4:	0f 91       	pop	r16
     de6:	ff 90       	pop	r15
     de8:	ef 90       	pop	r14
     dea:	df 90       	pop	r13
     dec:	cf 90       	pop	r12
     dee:	08 95       	ret

00000df0 <pullFromSerial>:

void pullFromSerial(Serial* self){
     df0:	dc 01       	movw	r26, r24
	
	LCDDR0 ^= (1 << 1);
     df2:	ec ee       	ldi	r30, 0xEC	; 236
     df4:	f0 e0       	ldi	r31, 0x00	; 0
     df6:	90 81       	ld	r25, Z
     df8:	82 e0       	ldi	r24, 0x02	; 2
     dfa:	89 27       	eor	r24, r25
     dfc:	80 83       	st	Z, r24
	
	while(!(UCSR0A & (1<<RXC0)));
     dfe:	e0 ec       	ldi	r30, 0xC0	; 192
     e00:	f0 e0       	ldi	r31, 0x00	; 0
     e02:	90 81       	ld	r25, Z
     e04:	99 23       	and	r25, r25
     e06:	ec f7       	brge	.-6      	; 0xe02 <pullFromSerial+0x12>
	
	self->input = UDR0;
     e08:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     e0c:	50 e0       	ldi	r21, 0x00	; 0
     e0e:	19 96       	adiw	r26, 0x09	; 9
     e10:	5c 93       	st	X, r21
     e12:	4e 93       	st	-X, r20
     e14:	18 97       	sbiw	r26, 0x08	; 8
	
	//if(self->input) writeChar('0' + self->input, 5);
	
	SYNC(self->onReadObject, self->onReadFunction, self->input);	
     e16:	16 96       	adiw	r26, 0x06	; 6
     e18:	6d 91       	ld	r22, X+
     e1a:	7c 91       	ld	r23, X
     e1c:	17 97       	sbiw	r26, 0x07	; 7
     e1e:	14 96       	adiw	r26, 0x04	; 4
     e20:	8d 91       	ld	r24, X+
     e22:	9c 91       	ld	r25, X
     e24:	15 97       	sbiw	r26, 0x05	; 5
     e26:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
     e2a:	08 95       	ret

00000e2c <initSerial>:
unsigned int uber = MYUBER;

void pullFromSerial(Serial* self);
void pushToSerial(Serial* self);

void initSerial(Serial* self, Object* onReadObject, void (*onReadFunction)(unsigned char)){
     e2c:	cf 92       	push	r12
     e2e:	df 92       	push	r13
     e30:	ef 92       	push	r14
     e32:	ff 92       	push	r15
     e34:	0f 93       	push	r16
     e36:	1f 93       	push	r17
     e38:	cf 93       	push	r28
     e3a:	df 93       	push	r29
     e3c:	ec 01       	movw	r28, r24
     e3e:	7b 01       	movw	r14, r22
     e40:	8a 01       	movw	r16, r20
	
	initLCD();
     e42:	0e 94 50 04 	call	0x8a0	; 0x8a0 <initLCD>
	self->onReadObject = onReadObject;
     e46:	fd 82       	std	Y+5, r15	; 0x05
     e48:	ec 82       	std	Y+4, r14	; 0x04
	self->onReadFunction = onReadFunction;
     e4a:	1f 83       	std	Y+7, r17	; 0x07
     e4c:	0e 83       	std	Y+6, r16	; 0x06
	
	// Sets baud rate
	UBRR0H = (unsigned char)(uber >> 8);
     e4e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
     e52:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)(uber);
     e56:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e5a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	// Enable receive and transmit, and enable and transmit interrupts
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0) | (1 << TXCIE0);
     e5e:	88 ed       	ldi	r24, 0xD8	; 216
     e60:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	// Set frame format: 8data, 1stop bit
	UCSR0C = (3 << UCSZ00) & ~(1 << USBS0);
     e64:	86 e0       	ldi	r24, 0x06	; 6
     e66:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	
	//INSTALL(self, &pullFromSerial, IRQ_USART0_RX);
	SEND(MSEC(100), MSEC(110), self, &pushToSerial, NULL);
     e6a:	c1 2c       	mov	r12, r1
     e6c:	d1 2c       	mov	r13, r1
     e6e:	0f 2e       	mov	r0, r31
     e70:	f1 ed       	ldi	r31, 0xD1	; 209
     e72:	ef 2e       	mov	r14, r31
     e74:	f6 e0       	ldi	r31, 0x06	; 6
     e76:	ff 2e       	mov	r15, r31
     e78:	f0 2d       	mov	r31, r0
     e7a:	8e 01       	movw	r16, r28
     e7c:	2d e6       	ldi	r18, 0x6D	; 109
     e7e:	3d e0       	ldi	r19, 0x0D	; 13
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	65 e3       	ldi	r22, 0x35	; 53
     e86:	7c e0       	ldi	r23, 0x0C	; 12
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
		
}
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	1f 91       	pop	r17
     e96:	0f 91       	pop	r16
     e98:	ff 90       	pop	r15
     e9a:	ef 90       	pop	r14
     e9c:	df 90       	pop	r13
     e9e:	cf 90       	pop	r12
     ea0:	08 95       	ret

00000ea2 <send>:
	
	SYNC(self->onReadObject, self->onReadFunction, self->input);	
			
}

void send(Serial* self, unsigned char output){
     ea2:	cf 92       	push	r12
     ea4:	df 92       	push	r13
     ea6:	ef 92       	push	r14
     ea8:	ff 92       	push	r15
     eaa:	0f 93       	push	r16
     eac:	1f 93       	push	r17
	
	self->output = output;
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	fc 01       	movw	r30, r24
     eb2:	73 87       	std	Z+11, r23	; 0x0b
     eb4:	62 87       	std	Z+10, r22	; 0x0a
	SEND(MSEC(100), MSEC(110), self, &pushToSerial, NULL);
     eb6:	c1 2c       	mov	r12, r1
     eb8:	d1 2c       	mov	r13, r1
     eba:	0f 2e       	mov	r0, r31
     ebc:	f1 ed       	ldi	r31, 0xD1	; 209
     ebe:	ef 2e       	mov	r14, r31
     ec0:	f6 e0       	ldi	r31, 0x06	; 6
     ec2:	ff 2e       	mov	r15, r31
     ec4:	f0 2d       	mov	r31, r0
     ec6:	8c 01       	movw	r16, r24
     ec8:	2d e6       	ldi	r18, 0x6D	; 109
     eca:	3d e0       	ldi	r19, 0x0D	; 13
     ecc:	40 e0       	ldi	r20, 0x00	; 0
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	65 e3       	ldi	r22, 0x35	; 53
     ed2:	7c e0       	ldi	r23, 0x0C	; 12
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
	
}
     edc:	1f 91       	pop	r17
     ede:	0f 91       	pop	r16
     ee0:	ff 90       	pop	r15
     ee2:	ef 90       	pop	r14
     ee4:	df 90       	pop	r13
     ee6:	cf 90       	pop	r12
     ee8:	08 95       	ret

00000eea <initialize>:
        char status;
        DISABLE(status);
        otable[i] = obj;
        mtable[i] = m;
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
        ENABLE(status);
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	00 d0       	rcall	.+0      	; 0xef0 <initialize+0x6>
     ef0:	00 d0       	rcall	.+0      	; 0xef2 <initialize+0x8>
     ef2:	cd b7       	in	r28, 0x3d	; 61
     ef4:	de b7       	in	r29, 0x3e	; 62
     ef6:	8f ef       	ldi	r24, 0xFF	; 255
     ef8:	91 e0       	ldi	r25, 0x01	; 1
     efa:	2f ed       	ldi	r18, 0xDF	; 223
     efc:	32 e0       	ldi	r19, 0x02	; 2
     efe:	fc 01       	movw	r30, r24
     f00:	70 97       	sbiw	r30, 0x10	; 16
     f02:	91 83       	std	Z+1, r25	; 0x01
     f04:	80 83       	st	Z, r24
     f06:	40 96       	adiw	r24, 0x10	; 16
     f08:	82 17       	cp	r24, r18
     f0a:	93 07       	cpc	r25, r19
     f0c:	c1 f7       	brne	.-16     	; 0xefe <initialize+0x14>
     f0e:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <messages+0xe1>
     f12:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <messages+0xe0>
     f16:	ea e3       	ldi	r30, 0x3A	; 58
     f18:	f1 e0       	ldi	r31, 0x01	; 1
     f1a:	87 e5       	ldi	r24, 0x57	; 87
     f1c:	91 e0       	ldi	r25, 0x01	; 1
     f1e:	91 83       	std	Z+1, r25	; 0x01
     f20:	80 83       	st	Z, r24
     f22:	84 e7       	ldi	r24, 0x74	; 116
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	96 8f       	std	Z+30, r25	; 0x1e
     f28:	85 8f       	std	Z+29, r24	; 0x1d
     f2a:	a1 e9       	ldi	r26, 0x91	; 145
     f2c:	b1 e0       	ldi	r27, 0x01	; 1
     f2e:	b3 af       	std	Z+59, r27	; 0x3b
     f30:	a2 af       	std	Z+58, r26	; 0x3a
     f32:	1d 92       	st	X+, r1
     f34:	1c 92       	st	X, r1
     f36:	fa 83       	std	Y+2, r31	; 0x02
     f38:	e9 83       	std	Y+1, r30	; 0x01
     f3a:	eb e3       	ldi	r30, 0x3B	; 59
     f3c:	f3 e0       	ldi	r31, 0x03	; 3
     f3e:	fc 83       	std	Y+4, r31	; 0x04
     f40:	eb 83       	std	Y+3, r30	; 0x03
     f42:	89 81       	ldd	r24, Y+1	; 0x01
     f44:	9a 81       	ldd	r25, Y+2	; 0x02
     f46:	06 96       	adiw	r24, 0x06	; 6
     f48:	0e 94 cd 13 	call	0x279a	; 0x279a <setjmp>
     f4c:	8b 81       	ldd	r24, Y+3	; 0x03
     f4e:	9c 81       	ldd	r25, Y+4	; 0x04
     f50:	e9 81       	ldd	r30, Y+1	; 0x01
     f52:	fa 81       	ldd	r31, Y+2	; 0x02
     f54:	97 8b       	std	Z+23, r25	; 0x17
     f56:	86 8b       	std	Z+22, r24	; 0x16
     f58:	91 8f       	std	Z+25, r25	; 0x19
     f5a:	80 8f       	std	Z+24, r24	; 0x18
     f5c:	85 e1       	ldi	r24, 0x15	; 21
     f5e:	93 e1       	ldi	r25, 0x13	; 19
     f60:	94 8f       	std	Z+28, r25	; 0x1c
     f62:	83 8f       	std	Z+27, r24	; 0x1b
     f64:	15 82       	std	Z+5, r1	; 0x05
     f66:	14 82       	std	Z+4, r1	; 0x04
     f68:	7d 96       	adiw	r30, 0x1d	; 29
     f6a:	fa 83       	std	Y+2, r31	; 0x02
     f6c:	e9 83       	std	Y+1, r30	; 0x01
     f6e:	eb 81       	ldd	r30, Y+3	; 0x03
     f70:	fc 81       	ldd	r31, Y+4	; 0x04
     f72:	e0 5a       	subi	r30, 0xA0	; 160
     f74:	ff 4f       	sbci	r31, 0xFF	; 255
     f76:	fc 83       	std	Y+4, r31	; 0x04
     f78:	eb 83       	std	Y+3, r30	; 0x03
     f7a:	89 81       	ldd	r24, Y+1	; 0x01
     f7c:	9a 81       	ldd	r25, Y+2	; 0x02
     f7e:	8e 5a       	subi	r24, 0xAE	; 174
     f80:	91 40       	sbci	r25, 0x01	; 1
     f82:	f9 f6       	brne	.-66     	; 0xf42 <initialize+0x58>
     f84:	e2 ed       	ldi	r30, 0xD2	; 210
     f86:	f1 e0       	ldi	r31, 0x01	; 1
     f88:	11 82       	std	Z+1, r1	; 0x01
     f8a:	10 82       	st	Z, r1
     f8c:	15 82       	std	Z+5, r1	; 0x05
     f8e:	14 82       	std	Z+4, r1	; 0x04
     f90:	13 82       	std	Z+3, r1	; 0x03
     f92:	12 82       	std	Z+2, r1	; 0x02
     f94:	e1 e6       	ldi	r30, 0x61	; 97
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	80 e8       	ldi	r24, 0x80	; 128
     f9a:	80 83       	st	Z, r24
     f9c:	10 82       	st	Z, r1
     f9e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fa2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fa6:	84 e0       	ldi	r24, 0x04	; 4
     fa8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     fac:	81 e0       	ldi	r24, 0x01	; 1
     fae:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     fb2:	0f 90       	pop	r0
     fb4:	0f 90       	pop	r0
     fb6:	0f 90       	pop	r0
     fb8:	0f 90       	pop	r0
     fba:	df 91       	pop	r29
     fbc:	cf 91       	pop	r28
     fbe:	08 95       	ret

00000fc0 <dispatch>:
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
     fc4:	00 d0       	rcall	.+0      	; 0xfc6 <dispatch+0x6>
     fc6:	cd b7       	in	r28, 0x3d	; 61
     fc8:	de b7       	in	r29, 0x3e	; 62
     fca:	9a 83       	std	Y+2, r25	; 0x02
     fcc:	89 83       	std	Y+1, r24	; 0x01
     fce:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     fd2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     fd6:	06 96       	adiw	r24, 0x06	; 6
     fd8:	0e 94 cd 13 	call	0x279a	; 0x279a <setjmp>
     fdc:	89 2b       	or	r24, r25
     fde:	59 f4       	brne	.+22     	; 0xff6 <dispatch+0x36>
     fe0:	89 81       	ldd	r24, Y+1	; 0x01
     fe2:	9a 81       	ldd	r25, Y+2	; 0x02
     fe4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
     fe8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
     fec:	61 e0       	ldi	r22, 0x01	; 1
     fee:	70 e0       	ldi	r23, 0x00	; 0
     ff0:	06 96       	adiw	r24, 0x06	; 6
     ff2:	0e 94 ed 13 	call	0x27da	; 0x27da <longjmp>
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	df 91       	pop	r29
     ffc:	cf 91       	pop	r28
     ffe:	08 95       	ret

00001000 <schedule>:
    1000:	0f 93       	push	r16
    1002:	1f 93       	push	r17
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <msgQ>
    100c:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <msgQ+0x1>
    1010:	30 97       	sbiw	r30, 0x00	; 0
    1012:	61 f1       	breq	.+88     	; 0x106c <schedule+0x6c>
    1014:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    1018:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    101c:	00 97       	sbiw	r24, 0x00	; 0
    101e:	31 f1       	breq	.+76     	; 0x106c <schedule+0x6c>
    1020:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <activeStack>
    1024:	d0 91 05 01 	lds	r29, 0x0105	; 0x800105 <activeStack+0x1>
    1028:	aa 81       	ldd	r26, Y+2	; 0x02
    102a:	bb 81       	ldd	r27, Y+3	; 0x03
    102c:	10 97       	sbiw	r26, 0x00	; 0
    102e:	79 f0       	breq	.+30     	; 0x104e <schedule+0x4e>
    1030:	46 81       	ldd	r20, Z+6	; 0x06
    1032:	57 81       	ldd	r21, Z+7	; 0x07
    1034:	60 85       	ldd	r22, Z+8	; 0x08
    1036:	71 85       	ldd	r23, Z+9	; 0x09
    1038:	16 96       	adiw	r26, 0x06	; 6
    103a:	0d 91       	ld	r16, X+
    103c:	1d 91       	ld	r17, X+
    103e:	2d 91       	ld	r18, X+
    1040:	3c 91       	ld	r19, X
    1042:	19 97       	sbiw	r26, 0x09	; 9
    1044:	40 1b       	sub	r20, r16
    1046:	51 0b       	sbc	r21, r17
    1048:	62 0b       	sbc	r22, r18
    104a:	73 0b       	sbc	r23, r19
    104c:	7a f4       	brpl	.+30     	; 0x106c <schedule+0x6c>
    104e:	fc 01       	movw	r30, r24
    1050:	20 81       	ld	r18, Z
    1052:	31 81       	ldd	r19, Z+1	; 0x01
    1054:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
    1058:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
    105c:	d1 83       	std	Z+1, r29	; 0x01
    105e:	c0 83       	st	Z, r28
    1060:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
    1064:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
    1068:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <dispatch>
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	1f 91       	pop	r17
    1072:	0f 91       	pop	r16
    1074:	08 95       	ret

00001076 <__vector_1>:
    1076:	1f 92       	push	r1
    1078:	0f 92       	push	r0
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	0f 92       	push	r0
    107e:	11 24       	eor	r1, r1
    1080:	2f 93       	push	r18
    1082:	3f 93       	push	r19
    1084:	4f 93       	push	r20
    1086:	5f 93       	push	r21
    1088:	6f 93       	push	r22
    108a:	7f 93       	push	r23
    108c:	8f 93       	push	r24
    108e:	9f 93       	push	r25
    1090:	af 93       	push	r26
    1092:	bf 93       	push	r27
    1094:	ef 93       	push	r30
    1096:	ff 93       	push	r31
    1098:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    109c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    10a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10a8:	c9 01       	movw	r24, r18
    10aa:	03 2e       	mov	r0, r19
    10ac:	00 0c       	add	r0, r0
    10ae:	aa 0b       	sbc	r26, r26
    10b0:	bb 0b       	sbc	r27, r27
    10b2:	dc 01       	movw	r26, r24
    10b4:	99 27       	eor	r25, r25
    10b6:	88 27       	eor	r24, r24
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	84 2b       	or	r24, r20
    10be:	95 2b       	or	r25, r21
    10c0:	a6 2b       	or	r26, r22
    10c2:	b7 2b       	or	r27, r23
    10c4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    10c8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    10cc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    10d0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    10d4:	b0 9b       	sbis	0x16, 0	; 22
    10d6:	1b c0       	rjmp	.+54     	; 0x110e <__vector_1+0x98>
    10d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10e0:	c9 01       	movw	r24, r18
    10e2:	01 96       	adiw	r24, 0x01	; 1
    10e4:	09 2e       	mov	r0, r25
    10e6:	00 0c       	add	r0, r0
    10e8:	aa 0b       	sbc	r26, r26
    10ea:	bb 0b       	sbc	r27, r27
    10ec:	dc 01       	movw	r26, r24
    10ee:	99 27       	eor	r25, r25
    10f0:	88 27       	eor	r24, r24
    10f2:	60 e0       	ldi	r22, 0x00	; 0
    10f4:	70 e0       	ldi	r23, 0x00	; 0
    10f6:	84 2b       	or	r24, r20
    10f8:	95 2b       	or	r25, r21
    10fa:	a6 2b       	or	r26, r22
    10fc:	b7 2b       	or	r27, r23
    10fe:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1102:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1106:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    110a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    110e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable>
    1112:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x1>
    1116:	30 97       	sbiw	r30, 0x00	; 0
    1118:	39 f0       	breq	.+14     	; 0x1128 <__vector_1+0xb2>
    111a:	60 e0       	ldi	r22, 0x00	; 0
    111c:	70 e0       	ldi	r23, 0x00	; 0
    111e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable>
    1122:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x1>
    1126:	09 95       	icall
    1128:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    112c:	ff 91       	pop	r31
    112e:	ef 91       	pop	r30
    1130:	bf 91       	pop	r27
    1132:	af 91       	pop	r26
    1134:	9f 91       	pop	r25
    1136:	8f 91       	pop	r24
    1138:	7f 91       	pop	r23
    113a:	6f 91       	pop	r22
    113c:	5f 91       	pop	r21
    113e:	4f 91       	pop	r20
    1140:	3f 91       	pop	r19
    1142:	2f 91       	pop	r18
    1144:	0f 90       	pop	r0
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	0f 90       	pop	r0
    114a:	1f 90       	pop	r1
    114c:	18 95       	reti

0000114e <__vector_2>:
    114e:	1f 92       	push	r1
    1150:	0f 92       	push	r0
    1152:	0f b6       	in	r0, 0x3f	; 63
    1154:	0f 92       	push	r0
    1156:	11 24       	eor	r1, r1
    1158:	2f 93       	push	r18
    115a:	3f 93       	push	r19
    115c:	4f 93       	push	r20
    115e:	5f 93       	push	r21
    1160:	6f 93       	push	r22
    1162:	7f 93       	push	r23
    1164:	8f 93       	push	r24
    1166:	9f 93       	push	r25
    1168:	af 93       	push	r26
    116a:	bf 93       	push	r27
    116c:	ef 93       	push	r30
    116e:	ff 93       	push	r31
    1170:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1174:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1178:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    117c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1180:	c9 01       	movw	r24, r18
    1182:	03 2e       	mov	r0, r19
    1184:	00 0c       	add	r0, r0
    1186:	aa 0b       	sbc	r26, r26
    1188:	bb 0b       	sbc	r27, r27
    118a:	dc 01       	movw	r26, r24
    118c:	99 27       	eor	r25, r25
    118e:	88 27       	eor	r24, r24
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	84 2b       	or	r24, r20
    1196:	95 2b       	or	r25, r21
    1198:	a6 2b       	or	r26, r22
    119a:	b7 2b       	or	r27, r23
    119c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    11a0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    11a4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    11a8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    11ac:	b0 9b       	sbis	0x16, 0	; 22
    11ae:	1b c0       	rjmp	.+54     	; 0x11e6 <__vector_2+0x98>
    11b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11b8:	c9 01       	movw	r24, r18
    11ba:	01 96       	adiw	r24, 0x01	; 1
    11bc:	09 2e       	mov	r0, r25
    11be:	00 0c       	add	r0, r0
    11c0:	aa 0b       	sbc	r26, r26
    11c2:	bb 0b       	sbc	r27, r27
    11c4:	dc 01       	movw	r26, r24
    11c6:	99 27       	eor	r25, r25
    11c8:	88 27       	eor	r24, r24
    11ca:	60 e0       	ldi	r22, 0x00	; 0
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	84 2b       	or	r24, r20
    11d0:	95 2b       	or	r25, r21
    11d2:	a6 2b       	or	r26, r22
    11d4:	b7 2b       	or	r27, r23
    11d6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    11da:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    11de:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    11e2:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    11e6:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x2>
    11ea:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x3>
    11ee:	30 97       	sbiw	r30, 0x00	; 0
    11f0:	39 f0       	breq	.+14     	; 0x1200 <__vector_2+0xb2>
    11f2:	61 e0       	ldi	r22, 0x01	; 1
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x2>
    11fa:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x3>
    11fe:	09 95       	icall
    1200:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1204:	ff 91       	pop	r31
    1206:	ef 91       	pop	r30
    1208:	bf 91       	pop	r27
    120a:	af 91       	pop	r26
    120c:	9f 91       	pop	r25
    120e:	8f 91       	pop	r24
    1210:	7f 91       	pop	r23
    1212:	6f 91       	pop	r22
    1214:	5f 91       	pop	r21
    1216:	4f 91       	pop	r20
    1218:	3f 91       	pop	r19
    121a:	2f 91       	pop	r18
    121c:	0f 90       	pop	r0
    121e:	0f be       	out	0x3f, r0	; 63
    1220:	0f 90       	pop	r0
    1222:	1f 90       	pop	r1
    1224:	18 95       	reti

00001226 <__vector_3>:
    1226:	1f 92       	push	r1
    1228:	0f 92       	push	r0
    122a:	0f b6       	in	r0, 0x3f	; 63
    122c:	0f 92       	push	r0
    122e:	11 24       	eor	r1, r1
    1230:	2f 93       	push	r18
    1232:	3f 93       	push	r19
    1234:	4f 93       	push	r20
    1236:	5f 93       	push	r21
    1238:	6f 93       	push	r22
    123a:	7f 93       	push	r23
    123c:	8f 93       	push	r24
    123e:	9f 93       	push	r25
    1240:	af 93       	push	r26
    1242:	bf 93       	push	r27
    1244:	ef 93       	push	r30
    1246:	ff 93       	push	r31
    1248:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    124c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1250:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1254:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1258:	c9 01       	movw	r24, r18
    125a:	03 2e       	mov	r0, r19
    125c:	00 0c       	add	r0, r0
    125e:	aa 0b       	sbc	r26, r26
    1260:	bb 0b       	sbc	r27, r27
    1262:	dc 01       	movw	r26, r24
    1264:	99 27       	eor	r25, r25
    1266:	88 27       	eor	r24, r24
    1268:	60 e0       	ldi	r22, 0x00	; 0
    126a:	70 e0       	ldi	r23, 0x00	; 0
    126c:	84 2b       	or	r24, r20
    126e:	95 2b       	or	r25, r21
    1270:	a6 2b       	or	r26, r22
    1272:	b7 2b       	or	r27, r23
    1274:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1278:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    127c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1280:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1284:	b0 9b       	sbis	0x16, 0	; 22
    1286:	1b c0       	rjmp	.+54     	; 0x12be <__vector_3+0x98>
    1288:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    128c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1290:	c9 01       	movw	r24, r18
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	09 2e       	mov	r0, r25
    1296:	00 0c       	add	r0, r0
    1298:	aa 0b       	sbc	r26, r26
    129a:	bb 0b       	sbc	r27, r27
    129c:	dc 01       	movw	r26, r24
    129e:	99 27       	eor	r25, r25
    12a0:	88 27       	eor	r24, r24
    12a2:	60 e0       	ldi	r22, 0x00	; 0
    12a4:	70 e0       	ldi	r23, 0x00	; 0
    12a6:	84 2b       	or	r24, r20
    12a8:	95 2b       	or	r25, r21
    12aa:	a6 2b       	or	r26, r22
    12ac:	b7 2b       	or	r27, r23
    12ae:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    12b2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    12b6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    12ba:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    12be:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x4>
    12c2:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x5>
    12c6:	30 97       	sbiw	r30, 0x00	; 0
    12c8:	39 f0       	breq	.+14     	; 0x12d8 <__vector_3+0xb2>
    12ca:	62 e0       	ldi	r22, 0x02	; 2
    12cc:	70 e0       	ldi	r23, 0x00	; 0
    12ce:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x4>
    12d2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x5>
    12d6:	09 95       	icall
    12d8:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    12dc:	ff 91       	pop	r31
    12de:	ef 91       	pop	r30
    12e0:	bf 91       	pop	r27
    12e2:	af 91       	pop	r26
    12e4:	9f 91       	pop	r25
    12e6:	8f 91       	pop	r24
    12e8:	7f 91       	pop	r23
    12ea:	6f 91       	pop	r22
    12ec:	5f 91       	pop	r21
    12ee:	4f 91       	pop	r20
    12f0:	3f 91       	pop	r19
    12f2:	2f 91       	pop	r18
    12f4:	0f 90       	pop	r0
    12f6:	0f be       	out	0x3f, r0	; 63
    12f8:	0f 90       	pop	r0
    12fa:	1f 90       	pop	r1
    12fc:	18 95       	reti

000012fe <__vector_4>:
    12fe:	1f 92       	push	r1
    1300:	0f 92       	push	r0
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	0f 92       	push	r0
    1306:	11 24       	eor	r1, r1
    1308:	2f 93       	push	r18
    130a:	3f 93       	push	r19
    130c:	4f 93       	push	r20
    130e:	5f 93       	push	r21
    1310:	6f 93       	push	r22
    1312:	7f 93       	push	r23
    1314:	8f 93       	push	r24
    1316:	9f 93       	push	r25
    1318:	af 93       	push	r26
    131a:	bf 93       	push	r27
    131c:	ef 93       	push	r30
    131e:	ff 93       	push	r31
    1320:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1324:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1328:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    132c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1330:	c9 01       	movw	r24, r18
    1332:	03 2e       	mov	r0, r19
    1334:	00 0c       	add	r0, r0
    1336:	aa 0b       	sbc	r26, r26
    1338:	bb 0b       	sbc	r27, r27
    133a:	dc 01       	movw	r26, r24
    133c:	99 27       	eor	r25, r25
    133e:	88 27       	eor	r24, r24
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	84 2b       	or	r24, r20
    1346:	95 2b       	or	r25, r21
    1348:	a6 2b       	or	r26, r22
    134a:	b7 2b       	or	r27, r23
    134c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1350:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1354:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1358:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    135c:	b0 9b       	sbis	0x16, 0	; 22
    135e:	1b c0       	rjmp	.+54     	; 0x1396 <__vector_4+0x98>
    1360:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1364:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1368:	c9 01       	movw	r24, r18
    136a:	01 96       	adiw	r24, 0x01	; 1
    136c:	09 2e       	mov	r0, r25
    136e:	00 0c       	add	r0, r0
    1370:	aa 0b       	sbc	r26, r26
    1372:	bb 0b       	sbc	r27, r27
    1374:	dc 01       	movw	r26, r24
    1376:	99 27       	eor	r25, r25
    1378:	88 27       	eor	r24, r24
    137a:	60 e0       	ldi	r22, 0x00	; 0
    137c:	70 e0       	ldi	r23, 0x00	; 0
    137e:	84 2b       	or	r24, r20
    1380:	95 2b       	or	r25, r21
    1382:	a6 2b       	or	r26, r22
    1384:	b7 2b       	or	r27, r23
    1386:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    138a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    138e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1392:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1396:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0x6>
    139a:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0x7>
    139e:	30 97       	sbiw	r30, 0x00	; 0
    13a0:	39 f0       	breq	.+14     	; 0x13b0 <__vector_4+0xb2>
    13a2:	63 e0       	ldi	r22, 0x03	; 3
    13a4:	70 e0       	ldi	r23, 0x00	; 0
    13a6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0x6>
    13aa:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0x7>
    13ae:	09 95       	icall
    13b0:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	0f 90       	pop	r0
    13d2:	1f 90       	pop	r1
    13d4:	18 95       	reti

000013d6 <__vector_5>:
    13d6:	1f 92       	push	r1
    13d8:	0f 92       	push	r0
    13da:	0f b6       	in	r0, 0x3f	; 63
    13dc:	0f 92       	push	r0
    13de:	11 24       	eor	r1, r1
    13e0:	2f 93       	push	r18
    13e2:	3f 93       	push	r19
    13e4:	4f 93       	push	r20
    13e6:	5f 93       	push	r21
    13e8:	6f 93       	push	r22
    13ea:	7f 93       	push	r23
    13ec:	8f 93       	push	r24
    13ee:	9f 93       	push	r25
    13f0:	af 93       	push	r26
    13f2:	bf 93       	push	r27
    13f4:	ef 93       	push	r30
    13f6:	ff 93       	push	r31
    13f8:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    13fc:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1400:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1404:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1408:	c9 01       	movw	r24, r18
    140a:	03 2e       	mov	r0, r19
    140c:	00 0c       	add	r0, r0
    140e:	aa 0b       	sbc	r26, r26
    1410:	bb 0b       	sbc	r27, r27
    1412:	dc 01       	movw	r26, r24
    1414:	99 27       	eor	r25, r25
    1416:	88 27       	eor	r24, r24
    1418:	60 e0       	ldi	r22, 0x00	; 0
    141a:	70 e0       	ldi	r23, 0x00	; 0
    141c:	84 2b       	or	r24, r20
    141e:	95 2b       	or	r25, r21
    1420:	a6 2b       	or	r26, r22
    1422:	b7 2b       	or	r27, r23
    1424:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1428:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    142c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1430:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1434:	b0 9b       	sbis	0x16, 0	; 22
    1436:	1b c0       	rjmp	.+54     	; 0x146e <__vector_5+0x98>
    1438:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    143c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1440:	c9 01       	movw	r24, r18
    1442:	01 96       	adiw	r24, 0x01	; 1
    1444:	09 2e       	mov	r0, r25
    1446:	00 0c       	add	r0, r0
    1448:	aa 0b       	sbc	r26, r26
    144a:	bb 0b       	sbc	r27, r27
    144c:	dc 01       	movw	r26, r24
    144e:	99 27       	eor	r25, r25
    1450:	88 27       	eor	r24, r24
    1452:	60 e0       	ldi	r22, 0x00	; 0
    1454:	70 e0       	ldi	r23, 0x00	; 0
    1456:	84 2b       	or	r24, r20
    1458:	95 2b       	or	r25, r21
    145a:	a6 2b       	or	r26, r22
    145c:	b7 2b       	or	r27, r23
    145e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1462:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1466:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    146a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    146e:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0x8>
    1472:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0x9>
    1476:	30 97       	sbiw	r30, 0x00	; 0
    1478:	39 f0       	breq	.+14     	; 0x1488 <__vector_5+0xb2>
    147a:	64 e0       	ldi	r22, 0x04	; 4
    147c:	70 e0       	ldi	r23, 0x00	; 0
    147e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0x8>
    1482:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0x9>
    1486:	09 95       	icall
    1488:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    148c:	ff 91       	pop	r31
    148e:	ef 91       	pop	r30
    1490:	bf 91       	pop	r27
    1492:	af 91       	pop	r26
    1494:	9f 91       	pop	r25
    1496:	8f 91       	pop	r24
    1498:	7f 91       	pop	r23
    149a:	6f 91       	pop	r22
    149c:	5f 91       	pop	r21
    149e:	4f 91       	pop	r20
    14a0:	3f 91       	pop	r19
    14a2:	2f 91       	pop	r18
    14a4:	0f 90       	pop	r0
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	0f 90       	pop	r0
    14aa:	1f 90       	pop	r1
    14ac:	18 95       	reti

000014ae <__vector_10>:
    14ae:	1f 92       	push	r1
    14b0:	0f 92       	push	r0
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	0f 92       	push	r0
    14b6:	11 24       	eor	r1, r1
    14b8:	2f 93       	push	r18
    14ba:	3f 93       	push	r19
    14bc:	4f 93       	push	r20
    14be:	5f 93       	push	r21
    14c0:	6f 93       	push	r22
    14c2:	7f 93       	push	r23
    14c4:	8f 93       	push	r24
    14c6:	9f 93       	push	r25
    14c8:	af 93       	push	r26
    14ca:	bf 93       	push	r27
    14cc:	ef 93       	push	r30
    14ce:	ff 93       	push	r31
    14d0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    14d4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    14d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14e0:	c9 01       	movw	r24, r18
    14e2:	03 2e       	mov	r0, r19
    14e4:	00 0c       	add	r0, r0
    14e6:	aa 0b       	sbc	r26, r26
    14e8:	bb 0b       	sbc	r27, r27
    14ea:	dc 01       	movw	r26, r24
    14ec:	99 27       	eor	r25, r25
    14ee:	88 27       	eor	r24, r24
    14f0:	60 e0       	ldi	r22, 0x00	; 0
    14f2:	70 e0       	ldi	r23, 0x00	; 0
    14f4:	84 2b       	or	r24, r20
    14f6:	95 2b       	or	r25, r21
    14f8:	a6 2b       	or	r26, r22
    14fa:	b7 2b       	or	r27, r23
    14fc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1500:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1504:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1508:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    150c:	b0 9b       	sbis	0x16, 0	; 22
    150e:	1b c0       	rjmp	.+54     	; 0x1546 <__vector_10+0x98>
    1510:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1514:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1518:	c9 01       	movw	r24, r18
    151a:	01 96       	adiw	r24, 0x01	; 1
    151c:	09 2e       	mov	r0, r25
    151e:	00 0c       	add	r0, r0
    1520:	aa 0b       	sbc	r26, r26
    1522:	bb 0b       	sbc	r27, r27
    1524:	dc 01       	movw	r26, r24
    1526:	99 27       	eor	r25, r25
    1528:	88 27       	eor	r24, r24
    152a:	60 e0       	ldi	r22, 0x00	; 0
    152c:	70 e0       	ldi	r23, 0x00	; 0
    152e:	84 2b       	or	r24, r20
    1530:	95 2b       	or	r25, r21
    1532:	a6 2b       	or	r26, r22
    1534:	b7 2b       	or	r27, r23
    1536:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    153a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    153e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1542:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1546:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xa>
    154a:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xb>
    154e:	30 97       	sbiw	r30, 0x00	; 0
    1550:	39 f0       	breq	.+14     	; 0x1560 <__vector_10+0xb2>
    1552:	65 e0       	ldi	r22, 0x05	; 5
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xa>
    155a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xb>
    155e:	09 95       	icall
    1560:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1564:	ff 91       	pop	r31
    1566:	ef 91       	pop	r30
    1568:	bf 91       	pop	r27
    156a:	af 91       	pop	r26
    156c:	9f 91       	pop	r25
    156e:	8f 91       	pop	r24
    1570:	7f 91       	pop	r23
    1572:	6f 91       	pop	r22
    1574:	5f 91       	pop	r21
    1576:	4f 91       	pop	r20
    1578:	3f 91       	pop	r19
    157a:	2f 91       	pop	r18
    157c:	0f 90       	pop	r0
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	0f 90       	pop	r0
    1582:	1f 90       	pop	r1
    1584:	18 95       	reti

00001586 <__vector_11>:
    1586:	1f 92       	push	r1
    1588:	0f 92       	push	r0
    158a:	0f b6       	in	r0, 0x3f	; 63
    158c:	0f 92       	push	r0
    158e:	11 24       	eor	r1, r1
    1590:	2f 93       	push	r18
    1592:	3f 93       	push	r19
    1594:	4f 93       	push	r20
    1596:	5f 93       	push	r21
    1598:	6f 93       	push	r22
    159a:	7f 93       	push	r23
    159c:	8f 93       	push	r24
    159e:	9f 93       	push	r25
    15a0:	af 93       	push	r26
    15a2:	bf 93       	push	r27
    15a4:	ef 93       	push	r30
    15a6:	ff 93       	push	r31
    15a8:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    15ac:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    15b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15b8:	c9 01       	movw	r24, r18
    15ba:	03 2e       	mov	r0, r19
    15bc:	00 0c       	add	r0, r0
    15be:	aa 0b       	sbc	r26, r26
    15c0:	bb 0b       	sbc	r27, r27
    15c2:	dc 01       	movw	r26, r24
    15c4:	99 27       	eor	r25, r25
    15c6:	88 27       	eor	r24, r24
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	84 2b       	or	r24, r20
    15ce:	95 2b       	or	r25, r21
    15d0:	a6 2b       	or	r26, r22
    15d2:	b7 2b       	or	r27, r23
    15d4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    15d8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    15dc:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    15e0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    15e4:	b0 9b       	sbis	0x16, 0	; 22
    15e6:	1b c0       	rjmp	.+54     	; 0x161e <__vector_11+0x98>
    15e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15f0:	c9 01       	movw	r24, r18
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	09 2e       	mov	r0, r25
    15f6:	00 0c       	add	r0, r0
    15f8:	aa 0b       	sbc	r26, r26
    15fa:	bb 0b       	sbc	r27, r27
    15fc:	dc 01       	movw	r26, r24
    15fe:	99 27       	eor	r25, r25
    1600:	88 27       	eor	r24, r24
    1602:	60 e0       	ldi	r22, 0x00	; 0
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	84 2b       	or	r24, r20
    1608:	95 2b       	or	r25, r21
    160a:	a6 2b       	or	r26, r22
    160c:	b7 2b       	or	r27, r23
    160e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1612:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1616:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    161a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    161e:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0xc>
    1622:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0xd>
    1626:	30 97       	sbiw	r30, 0x00	; 0
    1628:	39 f0       	breq	.+14     	; 0x1638 <__vector_11+0xb2>
    162a:	66 e0       	ldi	r22, 0x06	; 6
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0xc>
    1632:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0xd>
    1636:	09 95       	icall
    1638:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    163c:	ff 91       	pop	r31
    163e:	ef 91       	pop	r30
    1640:	bf 91       	pop	r27
    1642:	af 91       	pop	r26
    1644:	9f 91       	pop	r25
    1646:	8f 91       	pop	r24
    1648:	7f 91       	pop	r23
    164a:	6f 91       	pop	r22
    164c:	5f 91       	pop	r21
    164e:	4f 91       	pop	r20
    1650:	3f 91       	pop	r19
    1652:	2f 91       	pop	r18
    1654:	0f 90       	pop	r0
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	0f 90       	pop	r0
    165a:	1f 90       	pop	r1
    165c:	18 95       	reti

0000165e <__vector_12>:
    165e:	1f 92       	push	r1
    1660:	0f 92       	push	r0
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	0f 92       	push	r0
    1666:	11 24       	eor	r1, r1
    1668:	2f 93       	push	r18
    166a:	3f 93       	push	r19
    166c:	4f 93       	push	r20
    166e:	5f 93       	push	r21
    1670:	6f 93       	push	r22
    1672:	7f 93       	push	r23
    1674:	8f 93       	push	r24
    1676:	9f 93       	push	r25
    1678:	af 93       	push	r26
    167a:	bf 93       	push	r27
    167c:	ef 93       	push	r30
    167e:	ff 93       	push	r31
    1680:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1684:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1688:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    168c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1690:	c9 01       	movw	r24, r18
    1692:	03 2e       	mov	r0, r19
    1694:	00 0c       	add	r0, r0
    1696:	aa 0b       	sbc	r26, r26
    1698:	bb 0b       	sbc	r27, r27
    169a:	dc 01       	movw	r26, r24
    169c:	99 27       	eor	r25, r25
    169e:	88 27       	eor	r24, r24
    16a0:	60 e0       	ldi	r22, 0x00	; 0
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	84 2b       	or	r24, r20
    16a6:	95 2b       	or	r25, r21
    16a8:	a6 2b       	or	r26, r22
    16aa:	b7 2b       	or	r27, r23
    16ac:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    16b0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    16b4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    16b8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    16bc:	b0 9b       	sbis	0x16, 0	; 22
    16be:	1b c0       	rjmp	.+54     	; 0x16f6 <__vector_12+0x98>
    16c0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16c4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16c8:	c9 01       	movw	r24, r18
    16ca:	01 96       	adiw	r24, 0x01	; 1
    16cc:	09 2e       	mov	r0, r25
    16ce:	00 0c       	add	r0, r0
    16d0:	aa 0b       	sbc	r26, r26
    16d2:	bb 0b       	sbc	r27, r27
    16d4:	dc 01       	movw	r26, r24
    16d6:	99 27       	eor	r25, r25
    16d8:	88 27       	eor	r24, r24
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	84 2b       	or	r24, r20
    16e0:	95 2b       	or	r25, r21
    16e2:	a6 2b       	or	r26, r22
    16e4:	b7 2b       	or	r27, r23
    16e6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    16ea:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    16ee:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    16f2:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    16f6:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0xe>
    16fa:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0xf>
    16fe:	30 97       	sbiw	r30, 0x00	; 0
    1700:	39 f0       	breq	.+14     	; 0x1710 <__vector_12+0xb2>
    1702:	67 e0       	ldi	r22, 0x07	; 7
    1704:	70 e0       	ldi	r23, 0x00	; 0
    1706:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0xe>
    170a:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0xf>
    170e:	09 95       	icall
    1710:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1714:	ff 91       	pop	r31
    1716:	ef 91       	pop	r30
    1718:	bf 91       	pop	r27
    171a:	af 91       	pop	r26
    171c:	9f 91       	pop	r25
    171e:	8f 91       	pop	r24
    1720:	7f 91       	pop	r23
    1722:	6f 91       	pop	r22
    1724:	5f 91       	pop	r21
    1726:	4f 91       	pop	r20
    1728:	3f 91       	pop	r19
    172a:	2f 91       	pop	r18
    172c:	0f 90       	pop	r0
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	0f 90       	pop	r0
    1732:	1f 90       	pop	r1
    1734:	18 95       	reti

00001736 <__vector_13>:
    1736:	1f 92       	push	r1
    1738:	0f 92       	push	r0
    173a:	0f b6       	in	r0, 0x3f	; 63
    173c:	0f 92       	push	r0
    173e:	11 24       	eor	r1, r1
    1740:	2f 93       	push	r18
    1742:	3f 93       	push	r19
    1744:	4f 93       	push	r20
    1746:	5f 93       	push	r21
    1748:	6f 93       	push	r22
    174a:	7f 93       	push	r23
    174c:	8f 93       	push	r24
    174e:	9f 93       	push	r25
    1750:	af 93       	push	r26
    1752:	bf 93       	push	r27
    1754:	ef 93       	push	r30
    1756:	ff 93       	push	r31
    1758:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    175c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1760:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1764:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1768:	c9 01       	movw	r24, r18
    176a:	03 2e       	mov	r0, r19
    176c:	00 0c       	add	r0, r0
    176e:	aa 0b       	sbc	r26, r26
    1770:	bb 0b       	sbc	r27, r27
    1772:	dc 01       	movw	r26, r24
    1774:	99 27       	eor	r25, r25
    1776:	88 27       	eor	r24, r24
    1778:	60 e0       	ldi	r22, 0x00	; 0
    177a:	70 e0       	ldi	r23, 0x00	; 0
    177c:	84 2b       	or	r24, r20
    177e:	95 2b       	or	r25, r21
    1780:	a6 2b       	or	r26, r22
    1782:	b7 2b       	or	r27, r23
    1784:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1788:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    178c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1790:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1794:	b0 9b       	sbis	0x16, 0	; 22
    1796:	1b c0       	rjmp	.+54     	; 0x17ce <__vector_13+0x98>
    1798:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    179c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17a0:	c9 01       	movw	r24, r18
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	09 2e       	mov	r0, r25
    17a6:	00 0c       	add	r0, r0
    17a8:	aa 0b       	sbc	r26, r26
    17aa:	bb 0b       	sbc	r27, r27
    17ac:	dc 01       	movw	r26, r24
    17ae:	99 27       	eor	r25, r25
    17b0:	88 27       	eor	r24, r24
    17b2:	60 e0       	ldi	r22, 0x00	; 0
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	84 2b       	or	r24, r20
    17b8:	95 2b       	or	r25, r21
    17ba:	a6 2b       	or	r26, r22
    17bc:	b7 2b       	or	r27, r23
    17be:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    17c2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    17c6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    17ca:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    17ce:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x10>
    17d2:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x11>
    17d6:	30 97       	sbiw	r30, 0x00	; 0
    17d8:	39 f0       	breq	.+14     	; 0x17e8 <__vector_13+0xb2>
    17da:	68 e0       	ldi	r22, 0x08	; 8
    17dc:	70 e0       	ldi	r23, 0x00	; 0
    17de:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x10>
    17e2:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x11>
    17e6:	09 95       	icall
    17e8:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    17ec:	ff 91       	pop	r31
    17ee:	ef 91       	pop	r30
    17f0:	bf 91       	pop	r27
    17f2:	af 91       	pop	r26
    17f4:	9f 91       	pop	r25
    17f6:	8f 91       	pop	r24
    17f8:	7f 91       	pop	r23
    17fa:	6f 91       	pop	r22
    17fc:	5f 91       	pop	r21
    17fe:	4f 91       	pop	r20
    1800:	3f 91       	pop	r19
    1802:	2f 91       	pop	r18
    1804:	0f 90       	pop	r0
    1806:	0f be       	out	0x3f, r0	; 63
    1808:	0f 90       	pop	r0
    180a:	1f 90       	pop	r1
    180c:	18 95       	reti

0000180e <__vector_14>:
    180e:	1f 92       	push	r1
    1810:	0f 92       	push	r0
    1812:	0f b6       	in	r0, 0x3f	; 63
    1814:	0f 92       	push	r0
    1816:	11 24       	eor	r1, r1
    1818:	2f 93       	push	r18
    181a:	3f 93       	push	r19
    181c:	4f 93       	push	r20
    181e:	5f 93       	push	r21
    1820:	6f 93       	push	r22
    1822:	7f 93       	push	r23
    1824:	8f 93       	push	r24
    1826:	9f 93       	push	r25
    1828:	af 93       	push	r26
    182a:	bf 93       	push	r27
    182c:	ef 93       	push	r30
    182e:	ff 93       	push	r31
    1830:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1834:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1838:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    183c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1840:	c9 01       	movw	r24, r18
    1842:	03 2e       	mov	r0, r19
    1844:	00 0c       	add	r0, r0
    1846:	aa 0b       	sbc	r26, r26
    1848:	bb 0b       	sbc	r27, r27
    184a:	dc 01       	movw	r26, r24
    184c:	99 27       	eor	r25, r25
    184e:	88 27       	eor	r24, r24
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	84 2b       	or	r24, r20
    1856:	95 2b       	or	r25, r21
    1858:	a6 2b       	or	r26, r22
    185a:	b7 2b       	or	r27, r23
    185c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1860:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1864:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1868:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    186c:	b0 9b       	sbis	0x16, 0	; 22
    186e:	1b c0       	rjmp	.+54     	; 0x18a6 <__vector_14+0x98>
    1870:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1874:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1878:	c9 01       	movw	r24, r18
    187a:	01 96       	adiw	r24, 0x01	; 1
    187c:	09 2e       	mov	r0, r25
    187e:	00 0c       	add	r0, r0
    1880:	aa 0b       	sbc	r26, r26
    1882:	bb 0b       	sbc	r27, r27
    1884:	dc 01       	movw	r26, r24
    1886:	99 27       	eor	r25, r25
    1888:	88 27       	eor	r24, r24
    188a:	60 e0       	ldi	r22, 0x00	; 0
    188c:	70 e0       	ldi	r23, 0x00	; 0
    188e:	84 2b       	or	r24, r20
    1890:	95 2b       	or	r25, r21
    1892:	a6 2b       	or	r26, r22
    1894:	b7 2b       	or	r27, r23
    1896:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    189a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    189e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    18a2:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    18a6:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x12>
    18aa:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x13>
    18ae:	30 97       	sbiw	r30, 0x00	; 0
    18b0:	39 f0       	breq	.+14     	; 0x18c0 <__vector_14+0xb2>
    18b2:	69 e0       	ldi	r22, 0x09	; 9
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x12>
    18ba:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x13>
    18be:	09 95       	icall
    18c0:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    18c4:	ff 91       	pop	r31
    18c6:	ef 91       	pop	r30
    18c8:	bf 91       	pop	r27
    18ca:	af 91       	pop	r26
    18cc:	9f 91       	pop	r25
    18ce:	8f 91       	pop	r24
    18d0:	7f 91       	pop	r23
    18d2:	6f 91       	pop	r22
    18d4:	5f 91       	pop	r21
    18d6:	4f 91       	pop	r20
    18d8:	3f 91       	pop	r19
    18da:	2f 91       	pop	r18
    18dc:	0f 90       	pop	r0
    18de:	0f be       	out	0x3f, r0	; 63
    18e0:	0f 90       	pop	r0
    18e2:	1f 90       	pop	r1
    18e4:	18 95       	reti

000018e6 <__vector_15>:
    18e6:	1f 92       	push	r1
    18e8:	0f 92       	push	r0
    18ea:	0f b6       	in	r0, 0x3f	; 63
    18ec:	0f 92       	push	r0
    18ee:	11 24       	eor	r1, r1
    18f0:	2f 93       	push	r18
    18f2:	3f 93       	push	r19
    18f4:	4f 93       	push	r20
    18f6:	5f 93       	push	r21
    18f8:	6f 93       	push	r22
    18fa:	7f 93       	push	r23
    18fc:	8f 93       	push	r24
    18fe:	9f 93       	push	r25
    1900:	af 93       	push	r26
    1902:	bf 93       	push	r27
    1904:	ef 93       	push	r30
    1906:	ff 93       	push	r31
    1908:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    190c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1910:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1914:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1918:	c9 01       	movw	r24, r18
    191a:	03 2e       	mov	r0, r19
    191c:	00 0c       	add	r0, r0
    191e:	aa 0b       	sbc	r26, r26
    1920:	bb 0b       	sbc	r27, r27
    1922:	dc 01       	movw	r26, r24
    1924:	99 27       	eor	r25, r25
    1926:	88 27       	eor	r24, r24
    1928:	60 e0       	ldi	r22, 0x00	; 0
    192a:	70 e0       	ldi	r23, 0x00	; 0
    192c:	84 2b       	or	r24, r20
    192e:	95 2b       	or	r25, r21
    1930:	a6 2b       	or	r26, r22
    1932:	b7 2b       	or	r27, r23
    1934:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1938:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    193c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1940:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1944:	b0 9b       	sbis	0x16, 0	; 22
    1946:	1b c0       	rjmp	.+54     	; 0x197e <__vector_15+0x98>
    1948:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    194c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1950:	c9 01       	movw	r24, r18
    1952:	01 96       	adiw	r24, 0x01	; 1
    1954:	09 2e       	mov	r0, r25
    1956:	00 0c       	add	r0, r0
    1958:	aa 0b       	sbc	r26, r26
    195a:	bb 0b       	sbc	r27, r27
    195c:	dc 01       	movw	r26, r24
    195e:	99 27       	eor	r25, r25
    1960:	88 27       	eor	r24, r24
    1962:	60 e0       	ldi	r22, 0x00	; 0
    1964:	70 e0       	ldi	r23, 0x00	; 0
    1966:	84 2b       	or	r24, r20
    1968:	95 2b       	or	r25, r21
    196a:	a6 2b       	or	r26, r22
    196c:	b7 2b       	or	r27, r23
    196e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1972:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1976:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    197a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    197e:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x14>
    1982:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x15>
    1986:	30 97       	sbiw	r30, 0x00	; 0
    1988:	39 f0       	breq	.+14     	; 0x1998 <__vector_15+0xb2>
    198a:	6a e0       	ldi	r22, 0x0A	; 10
    198c:	70 e0       	ldi	r23, 0x00	; 0
    198e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x14>
    1992:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x15>
    1996:	09 95       	icall
    1998:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    199c:	ff 91       	pop	r31
    199e:	ef 91       	pop	r30
    19a0:	bf 91       	pop	r27
    19a2:	af 91       	pop	r26
    19a4:	9f 91       	pop	r25
    19a6:	8f 91       	pop	r24
    19a8:	7f 91       	pop	r23
    19aa:	6f 91       	pop	r22
    19ac:	5f 91       	pop	r21
    19ae:	4f 91       	pop	r20
    19b0:	3f 91       	pop	r19
    19b2:	2f 91       	pop	r18
    19b4:	0f 90       	pop	r0
    19b6:	0f be       	out	0x3f, r0	; 63
    19b8:	0f 90       	pop	r0
    19ba:	1f 90       	pop	r1
    19bc:	18 95       	reti

000019be <__vector_16>:
    19be:	1f 92       	push	r1
    19c0:	0f 92       	push	r0
    19c2:	0f b6       	in	r0, 0x3f	; 63
    19c4:	0f 92       	push	r0
    19c6:	11 24       	eor	r1, r1
    19c8:	2f 93       	push	r18
    19ca:	3f 93       	push	r19
    19cc:	4f 93       	push	r20
    19ce:	5f 93       	push	r21
    19d0:	6f 93       	push	r22
    19d2:	7f 93       	push	r23
    19d4:	8f 93       	push	r24
    19d6:	9f 93       	push	r25
    19d8:	af 93       	push	r26
    19da:	bf 93       	push	r27
    19dc:	ef 93       	push	r30
    19de:	ff 93       	push	r31
    19e0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    19e4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    19e8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    19ec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    19f0:	c9 01       	movw	r24, r18
    19f2:	03 2e       	mov	r0, r19
    19f4:	00 0c       	add	r0, r0
    19f6:	aa 0b       	sbc	r26, r26
    19f8:	bb 0b       	sbc	r27, r27
    19fa:	dc 01       	movw	r26, r24
    19fc:	99 27       	eor	r25, r25
    19fe:	88 27       	eor	r24, r24
    1a00:	60 e0       	ldi	r22, 0x00	; 0
    1a02:	70 e0       	ldi	r23, 0x00	; 0
    1a04:	84 2b       	or	r24, r20
    1a06:	95 2b       	or	r25, r21
    1a08:	a6 2b       	or	r26, r22
    1a0a:	b7 2b       	or	r27, r23
    1a0c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a10:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a14:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a18:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a1c:	b0 9b       	sbis	0x16, 0	; 22
    1a1e:	1b c0       	rjmp	.+54     	; 0x1a56 <__vector_16+0x98>
    1a20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a28:	c9 01       	movw	r24, r18
    1a2a:	01 96       	adiw	r24, 0x01	; 1
    1a2c:	09 2e       	mov	r0, r25
    1a2e:	00 0c       	add	r0, r0
    1a30:	aa 0b       	sbc	r26, r26
    1a32:	bb 0b       	sbc	r27, r27
    1a34:	dc 01       	movw	r26, r24
    1a36:	99 27       	eor	r25, r25
    1a38:	88 27       	eor	r24, r24
    1a3a:	60 e0       	ldi	r22, 0x00	; 0
    1a3c:	70 e0       	ldi	r23, 0x00	; 0
    1a3e:	84 2b       	or	r24, r20
    1a40:	95 2b       	or	r25, r21
    1a42:	a6 2b       	or	r26, r22
    1a44:	b7 2b       	or	r27, r23
    1a46:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1a4a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1a4e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1a52:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1a56:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x16>
    1a5a:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x17>
    1a5e:	30 97       	sbiw	r30, 0x00	; 0
    1a60:	39 f0       	breq	.+14     	; 0x1a70 <__vector_16+0xb2>
    1a62:	6b e0       	ldi	r22, 0x0B	; 11
    1a64:	70 e0       	ldi	r23, 0x00	; 0
    1a66:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x16>
    1a6a:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x17>
    1a6e:	09 95       	icall
    1a70:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1a74:	ff 91       	pop	r31
    1a76:	ef 91       	pop	r30
    1a78:	bf 91       	pop	r27
    1a7a:	af 91       	pop	r26
    1a7c:	9f 91       	pop	r25
    1a7e:	8f 91       	pop	r24
    1a80:	7f 91       	pop	r23
    1a82:	6f 91       	pop	r22
    1a84:	5f 91       	pop	r21
    1a86:	4f 91       	pop	r20
    1a88:	3f 91       	pop	r19
    1a8a:	2f 91       	pop	r18
    1a8c:	0f 90       	pop	r0
    1a8e:	0f be       	out	0x3f, r0	; 63
    1a90:	0f 90       	pop	r0
    1a92:	1f 90       	pop	r1
    1a94:	18 95       	reti

00001a96 <__vector_17>:
    1a96:	1f 92       	push	r1
    1a98:	0f 92       	push	r0
    1a9a:	0f b6       	in	r0, 0x3f	; 63
    1a9c:	0f 92       	push	r0
    1a9e:	11 24       	eor	r1, r1
    1aa0:	2f 93       	push	r18
    1aa2:	3f 93       	push	r19
    1aa4:	4f 93       	push	r20
    1aa6:	5f 93       	push	r21
    1aa8:	6f 93       	push	r22
    1aaa:	7f 93       	push	r23
    1aac:	8f 93       	push	r24
    1aae:	9f 93       	push	r25
    1ab0:	af 93       	push	r26
    1ab2:	bf 93       	push	r27
    1ab4:	ef 93       	push	r30
    1ab6:	ff 93       	push	r31
    1ab8:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1abc:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1ac0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ac4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ac8:	c9 01       	movw	r24, r18
    1aca:	03 2e       	mov	r0, r19
    1acc:	00 0c       	add	r0, r0
    1ace:	aa 0b       	sbc	r26, r26
    1ad0:	bb 0b       	sbc	r27, r27
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	99 27       	eor	r25, r25
    1ad6:	88 27       	eor	r24, r24
    1ad8:	60 e0       	ldi	r22, 0x00	; 0
    1ada:	70 e0       	ldi	r23, 0x00	; 0
    1adc:	84 2b       	or	r24, r20
    1ade:	95 2b       	or	r25, r21
    1ae0:	a6 2b       	or	r26, r22
    1ae2:	b7 2b       	or	r27, r23
    1ae4:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1ae8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1aec:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1af0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1af4:	b0 9b       	sbis	0x16, 0	; 22
    1af6:	1b c0       	rjmp	.+54     	; 0x1b2e <__vector_17+0x98>
    1af8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1afc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b00:	c9 01       	movw	r24, r18
    1b02:	01 96       	adiw	r24, 0x01	; 1
    1b04:	09 2e       	mov	r0, r25
    1b06:	00 0c       	add	r0, r0
    1b08:	aa 0b       	sbc	r26, r26
    1b0a:	bb 0b       	sbc	r27, r27
    1b0c:	dc 01       	movw	r26, r24
    1b0e:	99 27       	eor	r25, r25
    1b10:	88 27       	eor	r24, r24
    1b12:	60 e0       	ldi	r22, 0x00	; 0
    1b14:	70 e0       	ldi	r23, 0x00	; 0
    1b16:	84 2b       	or	r24, r20
    1b18:	95 2b       	or	r25, r21
    1b1a:	a6 2b       	or	r26, r22
    1b1c:	b7 2b       	or	r27, r23
    1b1e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1b22:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1b26:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1b2a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1b2e:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x18>
    1b32:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x19>
    1b36:	30 97       	sbiw	r30, 0x00	; 0
    1b38:	39 f0       	breq	.+14     	; 0x1b48 <__vector_17+0xb2>
    1b3a:	6c e0       	ldi	r22, 0x0C	; 12
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
    1b3e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x18>
    1b42:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x19>
    1b46:	09 95       	icall
    1b48:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1b4c:	ff 91       	pop	r31
    1b4e:	ef 91       	pop	r30
    1b50:	bf 91       	pop	r27
    1b52:	af 91       	pop	r26
    1b54:	9f 91       	pop	r25
    1b56:	8f 91       	pop	r24
    1b58:	7f 91       	pop	r23
    1b5a:	6f 91       	pop	r22
    1b5c:	5f 91       	pop	r21
    1b5e:	4f 91       	pop	r20
    1b60:	3f 91       	pop	r19
    1b62:	2f 91       	pop	r18
    1b64:	0f 90       	pop	r0
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	0f 90       	pop	r0
    1b6a:	1f 90       	pop	r1
    1b6c:	18 95       	reti

00001b6e <__vector_18>:
    1b6e:	1f 92       	push	r1
    1b70:	0f 92       	push	r0
    1b72:	0f b6       	in	r0, 0x3f	; 63
    1b74:	0f 92       	push	r0
    1b76:	11 24       	eor	r1, r1
    1b78:	2f 93       	push	r18
    1b7a:	3f 93       	push	r19
    1b7c:	4f 93       	push	r20
    1b7e:	5f 93       	push	r21
    1b80:	6f 93       	push	r22
    1b82:	7f 93       	push	r23
    1b84:	8f 93       	push	r24
    1b86:	9f 93       	push	r25
    1b88:	af 93       	push	r26
    1b8a:	bf 93       	push	r27
    1b8c:	ef 93       	push	r30
    1b8e:	ff 93       	push	r31
    1b90:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1b94:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1b98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ba0:	c9 01       	movw	r24, r18
    1ba2:	03 2e       	mov	r0, r19
    1ba4:	00 0c       	add	r0, r0
    1ba6:	aa 0b       	sbc	r26, r26
    1ba8:	bb 0b       	sbc	r27, r27
    1baa:	dc 01       	movw	r26, r24
    1bac:	99 27       	eor	r25, r25
    1bae:	88 27       	eor	r24, r24
    1bb0:	60 e0       	ldi	r22, 0x00	; 0
    1bb2:	70 e0       	ldi	r23, 0x00	; 0
    1bb4:	84 2b       	or	r24, r20
    1bb6:	95 2b       	or	r25, r21
    1bb8:	a6 2b       	or	r26, r22
    1bba:	b7 2b       	or	r27, r23
    1bbc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1bc0:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1bc4:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1bc8:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1bcc:	b0 9b       	sbis	0x16, 0	; 22
    1bce:	1b c0       	rjmp	.+54     	; 0x1c06 <__vector_18+0x98>
    1bd0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bd4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bd8:	c9 01       	movw	r24, r18
    1bda:	01 96       	adiw	r24, 0x01	; 1
    1bdc:	09 2e       	mov	r0, r25
    1bde:	00 0c       	add	r0, r0
    1be0:	aa 0b       	sbc	r26, r26
    1be2:	bb 0b       	sbc	r27, r27
    1be4:	dc 01       	movw	r26, r24
    1be6:	99 27       	eor	r25, r25
    1be8:	88 27       	eor	r24, r24
    1bea:	60 e0       	ldi	r22, 0x00	; 0
    1bec:	70 e0       	ldi	r23, 0x00	; 0
    1bee:	84 2b       	or	r24, r20
    1bf0:	95 2b       	or	r25, r21
    1bf2:	a6 2b       	or	r26, r22
    1bf4:	b7 2b       	or	r27, r23
    1bf6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1bfa:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1bfe:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1c02:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1c06:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1a>
    1c0a:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1b>
    1c0e:	30 97       	sbiw	r30, 0x00	; 0
    1c10:	39 f0       	breq	.+14     	; 0x1c20 <__vector_18+0xb2>
    1c12:	6d e0       	ldi	r22, 0x0D	; 13
    1c14:	70 e0       	ldi	r23, 0x00	; 0
    1c16:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1a>
    1c1a:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1b>
    1c1e:	09 95       	icall
    1c20:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1c24:	ff 91       	pop	r31
    1c26:	ef 91       	pop	r30
    1c28:	bf 91       	pop	r27
    1c2a:	af 91       	pop	r26
    1c2c:	9f 91       	pop	r25
    1c2e:	8f 91       	pop	r24
    1c30:	7f 91       	pop	r23
    1c32:	6f 91       	pop	r22
    1c34:	5f 91       	pop	r21
    1c36:	4f 91       	pop	r20
    1c38:	3f 91       	pop	r19
    1c3a:	2f 91       	pop	r18
    1c3c:	0f 90       	pop	r0
    1c3e:	0f be       	out	0x3f, r0	; 63
    1c40:	0f 90       	pop	r0
    1c42:	1f 90       	pop	r1
    1c44:	18 95       	reti

00001c46 <__vector_19>:
    1c46:	1f 92       	push	r1
    1c48:	0f 92       	push	r0
    1c4a:	0f b6       	in	r0, 0x3f	; 63
    1c4c:	0f 92       	push	r0
    1c4e:	11 24       	eor	r1, r1
    1c50:	2f 93       	push	r18
    1c52:	3f 93       	push	r19
    1c54:	4f 93       	push	r20
    1c56:	5f 93       	push	r21
    1c58:	6f 93       	push	r22
    1c5a:	7f 93       	push	r23
    1c5c:	8f 93       	push	r24
    1c5e:	9f 93       	push	r25
    1c60:	af 93       	push	r26
    1c62:	bf 93       	push	r27
    1c64:	ef 93       	push	r30
    1c66:	ff 93       	push	r31
    1c68:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1c6c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1c70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c78:	c9 01       	movw	r24, r18
    1c7a:	03 2e       	mov	r0, r19
    1c7c:	00 0c       	add	r0, r0
    1c7e:	aa 0b       	sbc	r26, r26
    1c80:	bb 0b       	sbc	r27, r27
    1c82:	dc 01       	movw	r26, r24
    1c84:	99 27       	eor	r25, r25
    1c86:	88 27       	eor	r24, r24
    1c88:	60 e0       	ldi	r22, 0x00	; 0
    1c8a:	70 e0       	ldi	r23, 0x00	; 0
    1c8c:	84 2b       	or	r24, r20
    1c8e:	95 2b       	or	r25, r21
    1c90:	a6 2b       	or	r26, r22
    1c92:	b7 2b       	or	r27, r23
    1c94:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1c98:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1c9c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1ca0:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1ca4:	b0 9b       	sbis	0x16, 0	; 22
    1ca6:	1b c0       	rjmp	.+54     	; 0x1cde <__vector_19+0x98>
    1ca8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cb0:	c9 01       	movw	r24, r18
    1cb2:	01 96       	adiw	r24, 0x01	; 1
    1cb4:	09 2e       	mov	r0, r25
    1cb6:	00 0c       	add	r0, r0
    1cb8:	aa 0b       	sbc	r26, r26
    1cba:	bb 0b       	sbc	r27, r27
    1cbc:	dc 01       	movw	r26, r24
    1cbe:	99 27       	eor	r25, r25
    1cc0:	88 27       	eor	r24, r24
    1cc2:	60 e0       	ldi	r22, 0x00	; 0
    1cc4:	70 e0       	ldi	r23, 0x00	; 0
    1cc6:	84 2b       	or	r24, r20
    1cc8:	95 2b       	or	r25, r21
    1cca:	a6 2b       	or	r26, r22
    1ccc:	b7 2b       	or	r27, r23
    1cce:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1cd2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1cd6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1cda:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1cde:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x1c>
    1ce2:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x1d>
    1ce6:	30 97       	sbiw	r30, 0x00	; 0
    1ce8:	39 f0       	breq	.+14     	; 0x1cf8 <__vector_19+0xb2>
    1cea:	6e e0       	ldi	r22, 0x0E	; 14
    1cec:	70 e0       	ldi	r23, 0x00	; 0
    1cee:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x1c>
    1cf2:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x1d>
    1cf6:	09 95       	icall
    1cf8:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1cfc:	ff 91       	pop	r31
    1cfe:	ef 91       	pop	r30
    1d00:	bf 91       	pop	r27
    1d02:	af 91       	pop	r26
    1d04:	9f 91       	pop	r25
    1d06:	8f 91       	pop	r24
    1d08:	7f 91       	pop	r23
    1d0a:	6f 91       	pop	r22
    1d0c:	5f 91       	pop	r21
    1d0e:	4f 91       	pop	r20
    1d10:	3f 91       	pop	r19
    1d12:	2f 91       	pop	r18
    1d14:	0f 90       	pop	r0
    1d16:	0f be       	out	0x3f, r0	; 63
    1d18:	0f 90       	pop	r0
    1d1a:	1f 90       	pop	r1
    1d1c:	18 95       	reti

00001d1e <__vector_20>:
    1d1e:	1f 92       	push	r1
    1d20:	0f 92       	push	r0
    1d22:	0f b6       	in	r0, 0x3f	; 63
    1d24:	0f 92       	push	r0
    1d26:	11 24       	eor	r1, r1
    1d28:	2f 93       	push	r18
    1d2a:	3f 93       	push	r19
    1d2c:	4f 93       	push	r20
    1d2e:	5f 93       	push	r21
    1d30:	6f 93       	push	r22
    1d32:	7f 93       	push	r23
    1d34:	8f 93       	push	r24
    1d36:	9f 93       	push	r25
    1d38:	af 93       	push	r26
    1d3a:	bf 93       	push	r27
    1d3c:	ef 93       	push	r30
    1d3e:	ff 93       	push	r31
    1d40:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1d44:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1d48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d50:	c9 01       	movw	r24, r18
    1d52:	03 2e       	mov	r0, r19
    1d54:	00 0c       	add	r0, r0
    1d56:	aa 0b       	sbc	r26, r26
    1d58:	bb 0b       	sbc	r27, r27
    1d5a:	dc 01       	movw	r26, r24
    1d5c:	99 27       	eor	r25, r25
    1d5e:	88 27       	eor	r24, r24
    1d60:	60 e0       	ldi	r22, 0x00	; 0
    1d62:	70 e0       	ldi	r23, 0x00	; 0
    1d64:	84 2b       	or	r24, r20
    1d66:	95 2b       	or	r25, r21
    1d68:	a6 2b       	or	r26, r22
    1d6a:	b7 2b       	or	r27, r23
    1d6c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1d70:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1d74:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1d78:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1d7c:	b0 9b       	sbis	0x16, 0	; 22
    1d7e:	1b c0       	rjmp	.+54     	; 0x1db6 <__vector_20+0x98>
    1d80:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d84:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d88:	c9 01       	movw	r24, r18
    1d8a:	01 96       	adiw	r24, 0x01	; 1
    1d8c:	09 2e       	mov	r0, r25
    1d8e:	00 0c       	add	r0, r0
    1d90:	aa 0b       	sbc	r26, r26
    1d92:	bb 0b       	sbc	r27, r27
    1d94:	dc 01       	movw	r26, r24
    1d96:	99 27       	eor	r25, r25
    1d98:	88 27       	eor	r24, r24
    1d9a:	60 e0       	ldi	r22, 0x00	; 0
    1d9c:	70 e0       	ldi	r23, 0x00	; 0
    1d9e:	84 2b       	or	r24, r20
    1da0:	95 2b       	or	r25, r21
    1da2:	a6 2b       	or	r26, r22
    1da4:	b7 2b       	or	r27, r23
    1da6:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1daa:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1dae:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1db2:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1db6:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x1e>
    1dba:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x1f>
    1dbe:	30 97       	sbiw	r30, 0x00	; 0
    1dc0:	39 f0       	breq	.+14     	; 0x1dd0 <__vector_20+0xb2>
    1dc2:	6f e0       	ldi	r22, 0x0F	; 15
    1dc4:	70 e0       	ldi	r23, 0x00	; 0
    1dc6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x1e>
    1dca:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x1f>
    1dce:	09 95       	icall
    1dd0:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1dd4:	ff 91       	pop	r31
    1dd6:	ef 91       	pop	r30
    1dd8:	bf 91       	pop	r27
    1dda:	af 91       	pop	r26
    1ddc:	9f 91       	pop	r25
    1dde:	8f 91       	pop	r24
    1de0:	7f 91       	pop	r23
    1de2:	6f 91       	pop	r22
    1de4:	5f 91       	pop	r21
    1de6:	4f 91       	pop	r20
    1de8:	3f 91       	pop	r19
    1dea:	2f 91       	pop	r18
    1dec:	0f 90       	pop	r0
    1dee:	0f be       	out	0x3f, r0	; 63
    1df0:	0f 90       	pop	r0
    1df2:	1f 90       	pop	r1
    1df4:	18 95       	reti

00001df6 <__vector_21>:
    1df6:	1f 92       	push	r1
    1df8:	0f 92       	push	r0
    1dfa:	0f b6       	in	r0, 0x3f	; 63
    1dfc:	0f 92       	push	r0
    1dfe:	11 24       	eor	r1, r1
    1e00:	2f 93       	push	r18
    1e02:	3f 93       	push	r19
    1e04:	4f 93       	push	r20
    1e06:	5f 93       	push	r21
    1e08:	6f 93       	push	r22
    1e0a:	7f 93       	push	r23
    1e0c:	8f 93       	push	r24
    1e0e:	9f 93       	push	r25
    1e10:	af 93       	push	r26
    1e12:	bf 93       	push	r27
    1e14:	ef 93       	push	r30
    1e16:	ff 93       	push	r31
    1e18:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1e1c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1e20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e28:	c9 01       	movw	r24, r18
    1e2a:	03 2e       	mov	r0, r19
    1e2c:	00 0c       	add	r0, r0
    1e2e:	aa 0b       	sbc	r26, r26
    1e30:	bb 0b       	sbc	r27, r27
    1e32:	dc 01       	movw	r26, r24
    1e34:	99 27       	eor	r25, r25
    1e36:	88 27       	eor	r24, r24
    1e38:	60 e0       	ldi	r22, 0x00	; 0
    1e3a:	70 e0       	ldi	r23, 0x00	; 0
    1e3c:	84 2b       	or	r24, r20
    1e3e:	95 2b       	or	r25, r21
    1e40:	a6 2b       	or	r26, r22
    1e42:	b7 2b       	or	r27, r23
    1e44:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1e48:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1e4c:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1e50:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1e54:	b0 9b       	sbis	0x16, 0	; 22
    1e56:	1b c0       	rjmp	.+54     	; 0x1e8e <__vector_21+0x98>
    1e58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1e5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1e60:	c9 01       	movw	r24, r18
    1e62:	01 96       	adiw	r24, 0x01	; 1
    1e64:	09 2e       	mov	r0, r25
    1e66:	00 0c       	add	r0, r0
    1e68:	aa 0b       	sbc	r26, r26
    1e6a:	bb 0b       	sbc	r27, r27
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	99 27       	eor	r25, r25
    1e70:	88 27       	eor	r24, r24
    1e72:	60 e0       	ldi	r22, 0x00	; 0
    1e74:	70 e0       	ldi	r23, 0x00	; 0
    1e76:	84 2b       	or	r24, r20
    1e78:	95 2b       	or	r25, r21
    1e7a:	a6 2b       	or	r26, r22
    1e7c:	b7 2b       	or	r27, r23
    1e7e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1e82:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1e86:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1e8a:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1e8e:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x20>
    1e92:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x21>
    1e96:	30 97       	sbiw	r30, 0x00	; 0
    1e98:	39 f0       	breq	.+14     	; 0x1ea8 <__vector_21+0xb2>
    1e9a:	60 e1       	ldi	r22, 0x10	; 16
    1e9c:	70 e0       	ldi	r23, 0x00	; 0
    1e9e:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x20>
    1ea2:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x21>
    1ea6:	09 95       	icall
    1ea8:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1eac:	ff 91       	pop	r31
    1eae:	ef 91       	pop	r30
    1eb0:	bf 91       	pop	r27
    1eb2:	af 91       	pop	r26
    1eb4:	9f 91       	pop	r25
    1eb6:	8f 91       	pop	r24
    1eb8:	7f 91       	pop	r23
    1eba:	6f 91       	pop	r22
    1ebc:	5f 91       	pop	r21
    1ebe:	4f 91       	pop	r20
    1ec0:	3f 91       	pop	r19
    1ec2:	2f 91       	pop	r18
    1ec4:	0f 90       	pop	r0
    1ec6:	0f be       	out	0x3f, r0	; 63
    1ec8:	0f 90       	pop	r0
    1eca:	1f 90       	pop	r1
    1ecc:	18 95       	reti

00001ece <__vector_22>:
    1ece:	1f 92       	push	r1
    1ed0:	0f 92       	push	r0
    1ed2:	0f b6       	in	r0, 0x3f	; 63
    1ed4:	0f 92       	push	r0
    1ed6:	11 24       	eor	r1, r1
    1ed8:	2f 93       	push	r18
    1eda:	3f 93       	push	r19
    1edc:	4f 93       	push	r20
    1ede:	5f 93       	push	r21
    1ee0:	6f 93       	push	r22
    1ee2:	7f 93       	push	r23
    1ee4:	8f 93       	push	r24
    1ee6:	9f 93       	push	r25
    1ee8:	af 93       	push	r26
    1eea:	bf 93       	push	r27
    1eec:	ef 93       	push	r30
    1eee:	ff 93       	push	r31
    1ef0:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    1ef4:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    1ef8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1efc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f00:	c9 01       	movw	r24, r18
    1f02:	03 2e       	mov	r0, r19
    1f04:	00 0c       	add	r0, r0
    1f06:	aa 0b       	sbc	r26, r26
    1f08:	bb 0b       	sbc	r27, r27
    1f0a:	dc 01       	movw	r26, r24
    1f0c:	99 27       	eor	r25, r25
    1f0e:	88 27       	eor	r24, r24
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	70 e0       	ldi	r23, 0x00	; 0
    1f14:	84 2b       	or	r24, r20
    1f16:	95 2b       	or	r25, r21
    1f18:	a6 2b       	or	r26, r22
    1f1a:	b7 2b       	or	r27, r23
    1f1c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1f20:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1f24:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1f28:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1f2c:	b0 9b       	sbis	0x16, 0	; 22
    1f2e:	1b c0       	rjmp	.+54     	; 0x1f66 <__vector_22+0x98>
    1f30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f38:	c9 01       	movw	r24, r18
    1f3a:	01 96       	adiw	r24, 0x01	; 1
    1f3c:	09 2e       	mov	r0, r25
    1f3e:	00 0c       	add	r0, r0
    1f40:	aa 0b       	sbc	r26, r26
    1f42:	bb 0b       	sbc	r27, r27
    1f44:	dc 01       	movw	r26, r24
    1f46:	99 27       	eor	r25, r25
    1f48:	88 27       	eor	r24, r24
    1f4a:	60 e0       	ldi	r22, 0x00	; 0
    1f4c:	70 e0       	ldi	r23, 0x00	; 0
    1f4e:	84 2b       	or	r24, r20
    1f50:	95 2b       	or	r25, r21
    1f52:	a6 2b       	or	r26, r22
    1f54:	b7 2b       	or	r27, r23
    1f56:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timestamp>
    1f5a:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timestamp+0x1>
    1f5e:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <timestamp+0x2>
    1f62:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <timestamp+0x3>
    1f66:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x22>
    1f6a:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x23>
    1f6e:	30 97       	sbiw	r30, 0x00	; 0
    1f70:	39 f0       	breq	.+14     	; 0x1f80 <__vector_22+0xb2>
    1f72:	61 e1       	ldi	r22, 0x11	; 17
    1f74:	70 e0       	ldi	r23, 0x00	; 0
    1f76:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x22>
    1f7a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x23>
    1f7e:	09 95       	icall
    1f80:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    1f84:	ff 91       	pop	r31
    1f86:	ef 91       	pop	r30
    1f88:	bf 91       	pop	r27
    1f8a:	af 91       	pop	r26
    1f8c:	9f 91       	pop	r25
    1f8e:	8f 91       	pop	r24
    1f90:	7f 91       	pop	r23
    1f92:	6f 91       	pop	r22
    1f94:	5f 91       	pop	r21
    1f96:	4f 91       	pop	r20
    1f98:	3f 91       	pop	r19
    1f9a:	2f 91       	pop	r18
    1f9c:	0f 90       	pop	r0
    1f9e:	0f be       	out	0x3f, r0	; 63
    1fa0:	0f 90       	pop	r0
    1fa2:	1f 90       	pop	r1
    1fa4:	18 95       	reti

00001fa6 <enqueueByDeadline>:
    1fa6:	ef 92       	push	r14
    1fa8:	ff 92       	push	r15
    1faa:	0f 93       	push	r16
    1fac:	1f 93       	push	r17
    1fae:	cf 93       	push	r28
    1fb0:	df 93       	push	r29
    1fb2:	7b 01       	movw	r14, r22
    1fb4:	eb 01       	movw	r28, r22
    1fb6:	a8 81       	ld	r26, Y
    1fb8:	b9 81       	ldd	r27, Y+1	; 0x01
    1fba:	10 97       	sbiw	r26, 0x00	; 0
    1fbc:	61 f1       	breq	.+88     	; 0x2016 <enqueueByDeadline+0x70>
    1fbe:	fc 01       	movw	r30, r24
    1fc0:	06 81       	ldd	r16, Z+6	; 0x06
    1fc2:	17 81       	ldd	r17, Z+7	; 0x07
    1fc4:	20 85       	ldd	r18, Z+8	; 0x08
    1fc6:	31 85       	ldd	r19, Z+9	; 0x09
    1fc8:	16 96       	adiw	r26, 0x06	; 6
    1fca:	4d 91       	ld	r20, X+
    1fcc:	5d 91       	ld	r21, X+
    1fce:	6d 91       	ld	r22, X+
    1fd0:	7c 91       	ld	r23, X
    1fd2:	19 97       	sbiw	r26, 0x09	; 9
    1fd4:	04 17       	cp	r16, r20
    1fd6:	15 07       	cpc	r17, r21
    1fd8:	26 07       	cpc	r18, r22
    1fda:	37 07       	cpc	r19, r23
    1fdc:	14 f4       	brge	.+4      	; 0x1fe2 <enqueueByDeadline+0x3c>
    1fde:	1b c0       	rjmp	.+54     	; 0x2016 <enqueueByDeadline+0x70>
    1fe0:	df 01       	movw	r26, r30
    1fe2:	ed 91       	ld	r30, X+
    1fe4:	fc 91       	ld	r31, X
    1fe6:	11 97       	sbiw	r26, 0x01	; 1
    1fe8:	30 97       	sbiw	r30, 0x00	; 0
    1fea:	49 f0       	breq	.+18     	; 0x1ffe <enqueueByDeadline+0x58>
    1fec:	46 81       	ldd	r20, Z+6	; 0x06
    1fee:	57 81       	ldd	r21, Z+7	; 0x07
    1ff0:	60 85       	ldd	r22, Z+8	; 0x08
    1ff2:	71 85       	ldd	r23, Z+9	; 0x09
    1ff4:	04 17       	cp	r16, r20
    1ff6:	15 07       	cpc	r17, r21
    1ff8:	26 07       	cpc	r18, r22
    1ffa:	37 07       	cpc	r19, r23
    1ffc:	8c f7       	brge	.-30     	; 0x1fe0 <enqueueByDeadline+0x3a>
    1ffe:	ec 01       	movw	r28, r24
    2000:	f9 83       	std	Y+1, r31	; 0x01
    2002:	e8 83       	st	Y, r30
    2004:	10 97       	sbiw	r26, 0x00	; 0
    2006:	21 f4       	brne	.+8      	; 0x2010 <enqueueByDeadline+0x6a>
    2008:	f7 01       	movw	r30, r14
    200a:	91 83       	std	Z+1, r25	; 0x01
    200c:	80 83       	st	Z, r24
    200e:	07 c0       	rjmp	.+14     	; 0x201e <enqueueByDeadline+0x78>
    2010:	8d 93       	st	X+, r24
    2012:	9c 93       	st	X, r25
    2014:	04 c0       	rjmp	.+8      	; 0x201e <enqueueByDeadline+0x78>
    2016:	ec 01       	movw	r28, r24
    2018:	b9 83       	std	Y+1, r27	; 0x01
    201a:	a8 83       	st	Y, r26
    201c:	f5 cf       	rjmp	.-22     	; 0x2008 <enqueueByDeadline+0x62>
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	1f 91       	pop	r17
    2024:	0f 91       	pop	r16
    2026:	ff 90       	pop	r15
    2028:	ef 90       	pop	r14
    202a:	08 95       	ret

0000202c <enqueueByBaseline>:
    202c:	ef 92       	push	r14
    202e:	ff 92       	push	r15
    2030:	0f 93       	push	r16
    2032:	1f 93       	push	r17
    2034:	cf 93       	push	r28
    2036:	df 93       	push	r29
    2038:	7b 01       	movw	r14, r22
    203a:	eb 01       	movw	r28, r22
    203c:	a8 81       	ld	r26, Y
    203e:	b9 81       	ldd	r27, Y+1	; 0x01
    2040:	10 97       	sbiw	r26, 0x00	; 0
    2042:	61 f1       	breq	.+88     	; 0x209c <enqueueByBaseline+0x70>
    2044:	fc 01       	movw	r30, r24
    2046:	02 81       	ldd	r16, Z+2	; 0x02
    2048:	13 81       	ldd	r17, Z+3	; 0x03
    204a:	24 81       	ldd	r18, Z+4	; 0x04
    204c:	35 81       	ldd	r19, Z+5	; 0x05
    204e:	12 96       	adiw	r26, 0x02	; 2
    2050:	4d 91       	ld	r20, X+
    2052:	5d 91       	ld	r21, X+
    2054:	6d 91       	ld	r22, X+
    2056:	7c 91       	ld	r23, X
    2058:	15 97       	sbiw	r26, 0x05	; 5
    205a:	04 17       	cp	r16, r20
    205c:	15 07       	cpc	r17, r21
    205e:	26 07       	cpc	r18, r22
    2060:	37 07       	cpc	r19, r23
    2062:	14 f4       	brge	.+4      	; 0x2068 <enqueueByBaseline+0x3c>
    2064:	1b c0       	rjmp	.+54     	; 0x209c <enqueueByBaseline+0x70>
    2066:	df 01       	movw	r26, r30
    2068:	ed 91       	ld	r30, X+
    206a:	fc 91       	ld	r31, X
    206c:	11 97       	sbiw	r26, 0x01	; 1
    206e:	30 97       	sbiw	r30, 0x00	; 0
    2070:	49 f0       	breq	.+18     	; 0x2084 <enqueueByBaseline+0x58>
    2072:	42 81       	ldd	r20, Z+2	; 0x02
    2074:	53 81       	ldd	r21, Z+3	; 0x03
    2076:	64 81       	ldd	r22, Z+4	; 0x04
    2078:	75 81       	ldd	r23, Z+5	; 0x05
    207a:	04 17       	cp	r16, r20
    207c:	15 07       	cpc	r17, r21
    207e:	26 07       	cpc	r18, r22
    2080:	37 07       	cpc	r19, r23
    2082:	8c f7       	brge	.-30     	; 0x2066 <enqueueByBaseline+0x3a>
    2084:	ec 01       	movw	r28, r24
    2086:	f9 83       	std	Y+1, r31	; 0x01
    2088:	e8 83       	st	Y, r30
    208a:	10 97       	sbiw	r26, 0x00	; 0
    208c:	21 f4       	brne	.+8      	; 0x2096 <enqueueByBaseline+0x6a>
    208e:	f7 01       	movw	r30, r14
    2090:	91 83       	std	Z+1, r25	; 0x01
    2092:	80 83       	st	Z, r24
    2094:	07 c0       	rjmp	.+14     	; 0x20a4 <enqueueByBaseline+0x78>
    2096:	8d 93       	st	X+, r24
    2098:	9c 93       	st	X, r25
    209a:	04 c0       	rjmp	.+8      	; 0x20a4 <enqueueByBaseline+0x78>
    209c:	ec 01       	movw	r28, r24
    209e:	b9 83       	std	Y+1, r27	; 0x01
    20a0:	a8 83       	st	Y, r26
    20a2:	f5 cf       	rjmp	.-22     	; 0x208e <enqueueByBaseline+0x62>
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
    20a8:	1f 91       	pop	r17
    20aa:	0f 91       	pop	r16
    20ac:	ff 90       	pop	r15
    20ae:	ef 90       	pop	r14
    20b0:	08 95       	ret

000020b2 <dequeue>:
    20b2:	dc 01       	movw	r26, r24
    20b4:	ed 91       	ld	r30, X+
    20b6:	fc 91       	ld	r31, X
    20b8:	11 97       	sbiw	r26, 0x01	; 1
    20ba:	30 97       	sbiw	r30, 0x00	; 0
    20bc:	59 f4       	brne	.+22     	; 0x20d4 <dequeue+0x22>
    20be:	8f ef       	ldi	r24, 0xFF	; 255
    20c0:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    20c4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    20c8:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    20cc:	81 e0       	ldi	r24, 0x01	; 1
    20ce:	83 bf       	out	0x33, r24	; 51
    20d0:	88 95       	sleep
    20d2:	fd cf       	rjmp	.-6      	; 0x20ce <dequeue+0x1c>
    20d4:	20 81       	ld	r18, Z
    20d6:	31 81       	ldd	r19, Z+1	; 0x01
    20d8:	2d 93       	st	X+, r18
    20da:	3c 93       	st	X, r19
    20dc:	cf 01       	movw	r24, r30
    20de:	08 95       	ret

000020e0 <__vector_9>:
    20e0:	1f 92       	push	r1
    20e2:	0f 92       	push	r0
    20e4:	0f b6       	in	r0, 0x3f	; 63
    20e6:	0f 92       	push	r0
    20e8:	11 24       	eor	r1, r1
    20ea:	2f 93       	push	r18
    20ec:	3f 93       	push	r19
    20ee:	4f 93       	push	r20
    20f0:	5f 93       	push	r21
    20f2:	6f 93       	push	r22
    20f4:	7f 93       	push	r23
    20f6:	8f 93       	push	r24
    20f8:	9f 93       	push	r25
    20fa:	ef 93       	push	r30
    20fc:	ff 93       	push	r31
    20fe:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    2102:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    2106:	01 96       	adiw	r24, 0x01	; 1
    2108:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
    210c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
    2110:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    2114:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    2118:	30 97       	sbiw	r30, 0x00	; 0
    211a:	01 f1       	breq	.+64     	; 0x215c <__vector_9+0x7c>
    211c:	42 81       	ldd	r20, Z+2	; 0x02
    211e:	53 81       	ldd	r21, Z+3	; 0x03
    2120:	64 81       	ldd	r22, Z+4	; 0x04
    2122:	75 81       	ldd	r23, Z+5	; 0x05
    2124:	86 17       	cp	r24, r22
    2126:	97 07       	cpc	r25, r23
    2128:	c9 f4       	brne	.+50     	; 0x215c <__vector_9+0x7c>
    212a:	ca 01       	movw	r24, r20
    212c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2130:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2134:	42 1b       	sub	r20, r18
    2136:	53 0b       	sbc	r21, r19
    2138:	41 30       	cpi	r20, 0x01	; 1
    213a:	51 05       	cpc	r21, r1
    213c:	29 f4       	brne	.+10     	; 0x2148 <__vector_9+0x68>
    213e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2142:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2146:	01 96       	adiw	r24, 0x01	; 1
    2148:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    214c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    2150:	ef e6       	ldi	r30, 0x6F	; 111
    2152:	f0 e0       	ldi	r31, 0x00	; 0
    2154:	80 81       	ld	r24, Z
    2156:	82 60       	ori	r24, 0x02	; 2
    2158:	80 83       	st	Z, r24
    215a:	05 c0       	rjmp	.+10     	; 0x2166 <__vector_9+0x86>
    215c:	ef e6       	ldi	r30, 0x6F	; 111
    215e:	f0 e0       	ldi	r31, 0x00	; 0
    2160:	80 81       	ld	r24, Z
    2162:	8d 7f       	andi	r24, 0xFD	; 253
    2164:	80 83       	st	Z, r24
    2166:	ff 91       	pop	r31
    2168:	ef 91       	pop	r30
    216a:	9f 91       	pop	r25
    216c:	8f 91       	pop	r24
    216e:	7f 91       	pop	r23
    2170:	6f 91       	pop	r22
    2172:	5f 91       	pop	r21
    2174:	4f 91       	pop	r20
    2176:	3f 91       	pop	r19
    2178:	2f 91       	pop	r18
    217a:	0f 90       	pop	r0
    217c:	0f be       	out	0x3f, r0	; 63
    217e:	0f 90       	pop	r0
    2180:	1f 90       	pop	r1
    2182:	18 95       	reti

00002184 <__vector_7>:
    2184:	1f 92       	push	r1
    2186:	0f 92       	push	r0
    2188:	0f b6       	in	r0, 0x3f	; 63
    218a:	0f 92       	push	r0
    218c:	11 24       	eor	r1, r1
    218e:	cf 92       	push	r12
    2190:	df 92       	push	r13
    2192:	ef 92       	push	r14
    2194:	ff 92       	push	r15
    2196:	2f 93       	push	r18
    2198:	3f 93       	push	r19
    219a:	4f 93       	push	r20
    219c:	5f 93       	push	r21
    219e:	6f 93       	push	r22
    21a0:	7f 93       	push	r23
    21a2:	8f 93       	push	r24
    21a4:	9f 93       	push	r25
    21a6:	af 93       	push	r26
    21a8:	bf 93       	push	r27
    21aa:	ef 93       	push	r30
    21ac:	ff 93       	push	r31
    21ae:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <__data_end>
    21b2:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <__data_end+0x1>
    21b6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    21ba:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    21be:	b0 99       	sbic	0x16, 0	; 22
    21c0:	0f c0       	rjmp	.+30     	; 0x21e0 <__vector_7+0x5c>
    21c2:	0d 2c       	mov	r0, r13
    21c4:	00 0c       	add	r0, r0
    21c6:	ee 08       	sbc	r14, r14
    21c8:	ff 08       	sbc	r15, r15
    21ca:	d6 01       	movw	r26, r12
    21cc:	99 27       	eor	r25, r25
    21ce:	88 27       	eor	r24, r24
    21d0:	69 01       	movw	r12, r18
    21d2:	e1 2c       	mov	r14, r1
    21d4:	f1 2c       	mov	r15, r1
    21d6:	c8 2a       	or	r12, r24
    21d8:	d9 2a       	or	r13, r25
    21da:	ea 2a       	or	r14, r26
    21dc:	fb 2a       	or	r15, r27
    21de:	15 c0       	rjmp	.+42     	; 0x220a <__vector_7+0x86>
    21e0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    21e4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    21e8:	8f ef       	ldi	r24, 0xFF	; 255
    21ea:	c8 1a       	sub	r12, r24
    21ec:	d8 0a       	sbc	r13, r24
    21ee:	0d 2c       	mov	r0, r13
    21f0:	00 0c       	add	r0, r0
    21f2:	ee 08       	sbc	r14, r14
    21f4:	ff 08       	sbc	r15, r15
    21f6:	d6 01       	movw	r26, r12
    21f8:	99 27       	eor	r25, r25
    21fa:	88 27       	eor	r24, r24
    21fc:	69 01       	movw	r12, r18
    21fe:	e1 2c       	mov	r14, r1
    2200:	f1 2c       	mov	r15, r1
    2202:	c8 2a       	or	r12, r24
    2204:	d9 2a       	or	r13, r25
    2206:	ea 2a       	or	r14, r26
    2208:	fb 2a       	or	r15, r27
    220a:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    220e:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    2212:	30 97       	sbiw	r30, 0x00	; 0
    2214:	09 f4       	brne	.+2      	; 0x2218 <__vector_7+0x94>
    2216:	42 c0       	rjmp	.+132    	; 0x229c <__vector_7+0x118>
    2218:	82 81       	ldd	r24, Z+2	; 0x02
    221a:	93 81       	ldd	r25, Z+3	; 0x03
    221c:	a4 81       	ldd	r26, Z+4	; 0x04
    221e:	b5 81       	ldd	r27, Z+5	; 0x05
    2220:	8c 19       	sub	r24, r12
    2222:	9d 09       	sbc	r25, r13
    2224:	ae 09       	sbc	r26, r14
    2226:	bf 09       	sbc	r27, r15
    2228:	18 16       	cp	r1, r24
    222a:	19 06       	cpc	r1, r25
    222c:	1a 06       	cpc	r1, r26
    222e:	1b 06       	cpc	r1, r27
    2230:	ec f1       	brlt	.+122    	; 0x22ac <__vector_7+0x128>
    2232:	80 e1       	ldi	r24, 0x10	; 16
    2234:	91 e0       	ldi	r25, 0x01	; 1
    2236:	0e 94 59 10 	call	0x20b2	; 0x20b2 <dequeue>
    223a:	62 e1       	ldi	r22, 0x12	; 18
    223c:	71 e0       	ldi	r23, 0x01	; 1
    223e:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <enqueueByDeadline>
    2242:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    2246:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    224a:	30 97       	sbiw	r30, 0x00	; 0
    224c:	39 f1       	breq	.+78     	; 0x229c <__vector_7+0x118>
    224e:	82 81       	ldd	r24, Z+2	; 0x02
    2250:	93 81       	ldd	r25, Z+3	; 0x03
    2252:	a4 81       	ldd	r26, Z+4	; 0x04
    2254:	b5 81       	ldd	r27, Z+5	; 0x05
    2256:	8c 19       	sub	r24, r12
    2258:	9d 09       	sbc	r25, r13
    225a:	ae 09       	sbc	r26, r14
    225c:	bf 09       	sbc	r27, r15
    225e:	18 16       	cp	r1, r24
    2260:	19 06       	cpc	r1, r25
    2262:	1a 06       	cpc	r1, r26
    2264:	1b 06       	cpc	r1, r27
    2266:	2c f7       	brge	.-54     	; 0x2232 <__vector_7+0xae>
    2268:	21 c0       	rjmp	.+66     	; 0x22ac <__vector_7+0x128>
    226a:	9c 01       	movw	r18, r24
    226c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2270:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2274:	84 1b       	sub	r24, r20
    2276:	95 0b       	sbc	r25, r21
    2278:	01 97       	sbiw	r24, 0x01	; 1
    227a:	31 f4       	brne	.+12     	; 0x2288 <__vector_7+0x104>
    227c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2280:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2284:	2f 5f       	subi	r18, 0xFF	; 255
    2286:	3f 4f       	sbci	r19, 0xFF	; 255
    2288:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    228c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    2290:	ef e6       	ldi	r30, 0x6F	; 111
    2292:	f0 e0       	ldi	r31, 0x00	; 0
    2294:	80 81       	ld	r24, Z
    2296:	82 60       	ori	r24, 0x02	; 2
    2298:	80 83       	st	Z, r24
    229a:	05 c0       	rjmp	.+10     	; 0x22a6 <__vector_7+0x122>
    229c:	ef e6       	ldi	r30, 0x6F	; 111
    229e:	f0 e0       	ldi	r31, 0x00	; 0
    22a0:	80 81       	ld	r24, Z
    22a2:	8d 7f       	andi	r24, 0xFD	; 253
    22a4:	80 83       	st	Z, r24
    22a6:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    22aa:	0c c0       	rjmp	.+24     	; 0x22c4 <__vector_7+0x140>
    22ac:	82 81       	ldd	r24, Z+2	; 0x02
    22ae:	93 81       	ldd	r25, Z+3	; 0x03
    22b0:	a4 81       	ldd	r26, Z+4	; 0x04
    22b2:	b5 81       	ldd	r27, Z+5	; 0x05
    22b4:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    22b8:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    22bc:	2a 17       	cp	r18, r26
    22be:	3b 07       	cpc	r19, r27
    22c0:	69 f7       	brne	.-38     	; 0x229c <__vector_7+0x118>
    22c2:	d3 cf       	rjmp	.-90     	; 0x226a <__vector_7+0xe6>
    22c4:	ff 91       	pop	r31
    22c6:	ef 91       	pop	r30
    22c8:	bf 91       	pop	r27
    22ca:	af 91       	pop	r26
    22cc:	9f 91       	pop	r25
    22ce:	8f 91       	pop	r24
    22d0:	7f 91       	pop	r23
    22d2:	6f 91       	pop	r22
    22d4:	5f 91       	pop	r21
    22d6:	4f 91       	pop	r20
    22d8:	3f 91       	pop	r19
    22da:	2f 91       	pop	r18
    22dc:	ff 90       	pop	r15
    22de:	ef 90       	pop	r14
    22e0:	df 90       	pop	r13
    22e2:	cf 90       	pop	r12
    22e4:	0f 90       	pop	r0
    22e6:	0f be       	out	0x3f, r0	; 63
    22e8:	0f 90       	pop	r0
    22ea:	1f 90       	pop	r1
    22ec:	18 95       	reti

000022ee <async>:
    22ee:	3f 92       	push	r3
    22f0:	4f 92       	push	r4
    22f2:	5f 92       	push	r5
    22f4:	6f 92       	push	r6
    22f6:	7f 92       	push	r7
    22f8:	8f 92       	push	r8
    22fa:	9f 92       	push	r9
    22fc:	af 92       	push	r10
    22fe:	bf 92       	push	r11
    2300:	cf 92       	push	r12
    2302:	df 92       	push	r13
    2304:	ef 92       	push	r14
    2306:	ff 92       	push	r15
    2308:	0f 93       	push	r16
    230a:	1f 93       	push	r17
    230c:	cf 93       	push	r28
    230e:	df 93       	push	r29
    2310:	2b 01       	movw	r4, r22
    2312:	3c 01       	movw	r6, r24
    2314:	49 01       	movw	r8, r18
    2316:	5a 01       	movw	r10, r20
    2318:	8f b7       	in	r24, 0x3f	; 63
    231a:	80 78       	andi	r24, 0x80	; 128
    231c:	38 2e       	mov	r3, r24
    231e:	f8 94       	cli
    2320:	88 e0       	ldi	r24, 0x08	; 8
    2322:	91 e0       	ldi	r25, 0x01	; 1
    2324:	0e 94 59 10 	call	0x20b2	; 0x20b2 <dequeue>
    2328:	ec 01       	movw	r28, r24
    232a:	1b 87       	std	Y+11, r17	; 0x0b
    232c:	0a 87       	std	Y+10, r16	; 0x0a
    232e:	fd 86       	std	Y+13, r15	; 0x0d
    2330:	ec 86       	std	Y+12, r14	; 0x0c
    2332:	df 86       	std	Y+15, r13	; 0x0f
    2334:	ce 86       	std	Y+14, r12	; 0x0e
    2336:	33 20       	and	r3, r3
    2338:	61 f0       	breq	.+24     	; 0x2352 <async+0x64>
    233a:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    233e:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    2342:	02 80       	ldd	r0, Z+2	; 0x02
    2344:	f3 81       	ldd	r31, Z+3	; 0x03
    2346:	e0 2d       	mov	r30, r0
    2348:	82 81       	ldd	r24, Z+2	; 0x02
    234a:	93 81       	ldd	r25, Z+3	; 0x03
    234c:	a4 81       	ldd	r26, Z+4	; 0x04
    234e:	b5 81       	ldd	r27, Z+5	; 0x05
    2350:	08 c0       	rjmp	.+16     	; 0x2362 <async+0x74>
    2352:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <timestamp>
    2356:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <timestamp+0x1>
    235a:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <timestamp+0x2>
    235e:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <timestamp+0x3>
    2362:	48 0e       	add	r4, r24
    2364:	59 1e       	adc	r5, r25
    2366:	6a 1e       	adc	r6, r26
    2368:	7b 1e       	adc	r7, r27
    236a:	4a 82       	std	Y+2, r4	; 0x02
    236c:	5b 82       	std	Y+3, r5	; 0x03
    236e:	6c 82       	std	Y+4, r6	; 0x04
    2370:	7d 82       	std	Y+5, r7	; 0x05
    2372:	18 14       	cp	r1, r8
    2374:	19 04       	cpc	r1, r9
    2376:	1a 04       	cpc	r1, r10
    2378:	1b 04       	cpc	r1, r11
    237a:	44 f0       	brlt	.+16     	; 0x238c <async+0x9e>
    237c:	0f 2e       	mov	r0, r31
    237e:	88 24       	eor	r8, r8
    2380:	8a 94       	dec	r8
    2382:	98 2c       	mov	r9, r8
    2384:	a8 2c       	mov	r10, r8
    2386:	ff e7       	ldi	r31, 0x7F	; 127
    2388:	bf 2e       	mov	r11, r31
    238a:	f0 2d       	mov	r31, r0
    238c:	84 0c       	add	r8, r4
    238e:	95 1c       	adc	r9, r5
    2390:	a6 1c       	adc	r10, r6
    2392:	b7 1c       	adc	r11, r7
    2394:	8e 82       	std	Y+6, r8	; 0x06
    2396:	9f 82       	std	Y+7, r9	; 0x07
    2398:	a8 86       	std	Y+8, r10	; 0x08
    239a:	b9 86       	std	Y+9, r11	; 0x09
    239c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
    23a0:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
    23a4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    23a8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    23ac:	b0 99       	sbic	0x16, 0	; 22
    23ae:	0e c0       	rjmp	.+28     	; 0x23cc <async+0xde>
    23b0:	09 2e       	mov	r0, r25
    23b2:	00 0c       	add	r0, r0
    23b4:	aa 0b       	sbc	r26, r26
    23b6:	bb 0b       	sbc	r27, r27
    23b8:	dc 01       	movw	r26, r24
    23ba:	99 27       	eor	r25, r25
    23bc:	88 27       	eor	r24, r24
    23be:	60 e0       	ldi	r22, 0x00	; 0
    23c0:	70 e0       	ldi	r23, 0x00	; 0
    23c2:	84 2b       	or	r24, r20
    23c4:	95 2b       	or	r25, r21
    23c6:	a6 2b       	or	r26, r22
    23c8:	b7 2b       	or	r27, r23
    23ca:	13 c0       	rjmp	.+38     	; 0x23f2 <async+0x104>
    23cc:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    23d0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    23d4:	01 96       	adiw	r24, 0x01	; 1
    23d6:	09 2e       	mov	r0, r25
    23d8:	00 0c       	add	r0, r0
    23da:	aa 0b       	sbc	r26, r26
    23dc:	bb 0b       	sbc	r27, r27
    23de:	dc 01       	movw	r26, r24
    23e0:	99 27       	eor	r25, r25
    23e2:	88 27       	eor	r24, r24
    23e4:	a9 01       	movw	r20, r18
    23e6:	60 e0       	ldi	r22, 0x00	; 0
    23e8:	70 e0       	ldi	r23, 0x00	; 0
    23ea:	84 2b       	or	r24, r20
    23ec:	95 2b       	or	r25, r21
    23ee:	a6 2b       	or	r26, r22
    23f0:	b7 2b       	or	r27, r23
    23f2:	48 1a       	sub	r4, r24
    23f4:	59 0a       	sbc	r5, r25
    23f6:	6a 0a       	sbc	r6, r26
    23f8:	7b 0a       	sbc	r7, r27
    23fa:	14 14       	cp	r1, r4
    23fc:	15 04       	cpc	r1, r5
    23fe:	16 04       	cpc	r1, r6
    2400:	17 04       	cpc	r1, r7
    2402:	ac f5       	brge	.+106    	; 0x246e <async+0x180>
    2404:	60 e1       	ldi	r22, 0x10	; 16
    2406:	71 e0       	ldi	r23, 0x01	; 1
    2408:	ce 01       	movw	r24, r28
    240a:	0e 94 16 10 	call	0x202c	; 0x202c <enqueueByBaseline>
    240e:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <timerQ>
    2412:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <timerQ+0x1>
    2416:	30 97       	sbiw	r30, 0x00	; 0
    2418:	21 f1       	breq	.+72     	; 0x2462 <async+0x174>
    241a:	82 81       	ldd	r24, Z+2	; 0x02
    241c:	93 81       	ldd	r25, Z+3	; 0x03
    241e:	a4 81       	ldd	r26, Z+4	; 0x04
    2420:	b5 81       	ldd	r27, Z+5	; 0x05
    2422:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
    2426:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
    242a:	2a 17       	cp	r18, r26
    242c:	3b 07       	cpc	r19, r27
    242e:	c9 f4       	brne	.+50     	; 0x2462 <async+0x174>
    2430:	9c 01       	movw	r18, r24
    2432:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2436:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    243a:	84 1b       	sub	r24, r20
    243c:	95 0b       	sbc	r25, r21
    243e:	01 97       	sbiw	r24, 0x01	; 1
    2440:	31 f4       	brne	.+12     	; 0x244e <async+0x160>
    2442:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2446:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    244a:	2f 5f       	subi	r18, 0xFF	; 255
    244c:	3f 4f       	sbci	r19, 0xFF	; 255
    244e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    2452:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    2456:	ef e6       	ldi	r30, 0x6F	; 111
    2458:	f0 e0       	ldi	r31, 0x00	; 0
    245a:	80 81       	ld	r24, Z
    245c:	82 60       	ori	r24, 0x02	; 2
    245e:	80 83       	st	Z, r24
    2460:	41 c0       	rjmp	.+130    	; 0x24e4 <async+0x1f6>
    2462:	ef e6       	ldi	r30, 0x6F	; 111
    2464:	f0 e0       	ldi	r31, 0x00	; 0
    2466:	80 81       	ld	r24, Z
    2468:	8d 7f       	andi	r24, 0xFD	; 253
    246a:	80 83       	st	Z, r24
    246c:	3b c0       	rjmp	.+118    	; 0x24e4 <async+0x1f6>
    246e:	62 e1       	ldi	r22, 0x12	; 18
    2470:	71 e0       	ldi	r23, 0x01	; 1
    2472:	ce 01       	movw	r24, r28
    2474:	0e 94 d3 0f 	call	0x1fa6	; 0x1fa6 <enqueueByDeadline>
    2478:	33 20       	and	r3, r3
    247a:	b9 f1       	breq	.+110    	; 0x24ea <async+0x1fc>
    247c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    2480:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    2484:	00 97       	sbiw	r24, 0x00	; 0
    2486:	81 f1       	breq	.+96     	; 0x24e8 <async+0x1fa>
    2488:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    248c:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    2490:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <msgQ>
    2494:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <msgQ+0x1>
    2498:	02 81       	ldd	r16, Z+2	; 0x02
    249a:	13 81       	ldd	r17, Z+3	; 0x03
    249c:	d9 01       	movw	r26, r18
    249e:	16 96       	adiw	r26, 0x06	; 6
    24a0:	4d 91       	ld	r20, X+
    24a2:	5d 91       	ld	r21, X+
    24a4:	6d 91       	ld	r22, X+
    24a6:	7c 91       	ld	r23, X
    24a8:	19 97       	sbiw	r26, 0x09	; 9
    24aa:	d8 01       	movw	r26, r16
    24ac:	16 96       	adiw	r26, 0x06	; 6
    24ae:	0d 91       	ld	r16, X+
    24b0:	1d 91       	ld	r17, X+
    24b2:	2d 91       	ld	r18, X+
    24b4:	3c 91       	ld	r19, X
    24b6:	19 97       	sbiw	r26, 0x09	; 9
    24b8:	40 1b       	sub	r20, r16
    24ba:	51 0b       	sbc	r21, r17
    24bc:	62 0b       	sbc	r22, r18
    24be:	73 0b       	sbc	r23, r19
    24c0:	9a f4       	brpl	.+38     	; 0x24e8 <async+0x1fa>
    24c2:	dc 01       	movw	r26, r24
    24c4:	2d 91       	ld	r18, X+
    24c6:	3c 91       	ld	r19, X
    24c8:	11 97       	sbiw	r26, 0x01	; 1
    24ca:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <threadPool+0x1>
    24ce:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <threadPool>
    24d2:	ed 93       	st	X+, r30
    24d4:	fc 93       	st	X, r31
    24d6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <activeStack+0x1>
    24da:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <activeStack>
    24de:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <dispatch>
    24e2:	02 c0       	rjmp	.+4      	; 0x24e8 <async+0x1fa>
    24e4:	33 20       	and	r3, r3
    24e6:	09 f0       	breq	.+2      	; 0x24ea <async+0x1fc>
    24e8:	78 94       	sei
    24ea:	ce 01       	movw	r24, r28
    24ec:	df 91       	pop	r29
    24ee:	cf 91       	pop	r28
    24f0:	1f 91       	pop	r17
    24f2:	0f 91       	pop	r16
    24f4:	ff 90       	pop	r15
    24f6:	ef 90       	pop	r14
    24f8:	df 90       	pop	r13
    24fa:	cf 90       	pop	r12
    24fc:	bf 90       	pop	r11
    24fe:	af 90       	pop	r10
    2500:	9f 90       	pop	r9
    2502:	8f 90       	pop	r8
    2504:	7f 90       	pop	r7
    2506:	6f 90       	pop	r6
    2508:	5f 90       	pop	r5
    250a:	4f 90       	pop	r4
    250c:	3f 90       	pop	r3
    250e:	08 95       	ret

00002510 <sync>:
    2510:	cf 92       	push	r12
    2512:	df 92       	push	r13
    2514:	ef 92       	push	r14
    2516:	ff 92       	push	r15
    2518:	0f 93       	push	r16
    251a:	1f 93       	push	r17
    251c:	cf 93       	push	r28
    251e:	df 93       	push	r29
    2520:	ec 01       	movw	r28, r24
    2522:	7b 01       	movw	r14, r22
    2524:	6a 01       	movw	r12, r20
    2526:	1f b7       	in	r17, 0x3f	; 63
    2528:	10 78       	andi	r17, 0x80	; 128
    252a:	f8 94       	cli
    252c:	a8 81       	ld	r26, Y
    252e:	b9 81       	ldd	r27, Y+1	; 0x01
    2530:	10 97       	sbiw	r26, 0x00	; 0
    2532:	61 f1       	breq	.+88     	; 0x258c <sync+0x7c>
    2534:	14 96       	adiw	r26, 0x04	; 4
    2536:	ed 91       	ld	r30, X+
    2538:	fc 91       	ld	r31, X
    253a:	15 97       	sbiw	r26, 0x05	; 5
    253c:	30 97       	sbiw	r30, 0x00	; 0
    253e:	41 f0       	breq	.+16     	; 0x2550 <sync+0x40>
    2540:	a0 81       	ld	r26, Z
    2542:	b1 81       	ldd	r27, Z+1	; 0x01
    2544:	14 96       	adiw	r26, 0x04	; 4
    2546:	ed 91       	ld	r30, X+
    2548:	fc 91       	ld	r31, X
    254a:	15 97       	sbiw	r26, 0x05	; 5
    254c:	30 97       	sbiw	r30, 0x00	; 0
    254e:	c1 f7       	brne	.-16     	; 0x2540 <sync+0x30>
    2550:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    2554:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    2558:	2a 17       	cp	r18, r26
    255a:	3b 07       	cpc	r19, r27
    255c:	21 f0       	breq	.+8      	; 0x2566 <sync+0x56>
    255e:	11 23       	and	r17, r17
    2560:	09 f4       	brne	.+2      	; 0x2564 <sync+0x54>
    2562:	3d c0       	rjmp	.+122    	; 0x25de <sync+0xce>
    2564:	07 c0       	rjmp	.+14     	; 0x2574 <sync+0x64>
    2566:	11 23       	and	r17, r17
    2568:	09 f4       	brne	.+2      	; 0x256c <sync+0x5c>
    256a:	3c c0       	rjmp	.+120    	; 0x25e4 <sync+0xd4>
    256c:	78 94       	sei
    256e:	8f ef       	ldi	r24, 0xFF	; 255
    2570:	9f ef       	ldi	r25, 0xFF	; 255
    2572:	52 c0       	rjmp	.+164    	; 0x2618 <sync+0x108>
    2574:	8a 81       	ldd	r24, Y+2	; 0x02
    2576:	9b 81       	ldd	r25, Y+3	; 0x03
    2578:	00 97       	sbiw	r24, 0x00	; 0
    257a:	d1 f1       	breq	.+116    	; 0x25f0 <sync+0xe0>
    257c:	fc 01       	movw	r30, r24
    257e:	15 82       	std	Z+5, r1	; 0x05
    2580:	14 82       	std	Z+4, r1	; 0x04
    2582:	36 c0       	rjmp	.+108    	; 0x25f0 <sync+0xe0>
    2584:	78 94       	sei
    2586:	80 e0       	ldi	r24, 0x00	; 0
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	46 c0       	rjmp	.+140    	; 0x2618 <sync+0x108>
    258c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    2590:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    2594:	99 83       	std	Y+1, r25	; 0x01
    2596:	88 83       	st	Y, r24
    2598:	11 23       	and	r17, r17
    259a:	29 f0       	breq	.+10     	; 0x25a6 <sync+0x96>
    259c:	8a 81       	ldd	r24, Y+2	; 0x02
    259e:	9b 81       	ldd	r25, Y+3	; 0x03
    25a0:	01 97       	sbiw	r24, 0x01	; 1
    25a2:	09 f0       	breq	.+2      	; 0x25a6 <sync+0x96>
    25a4:	78 94       	sei
    25a6:	b6 01       	movw	r22, r12
    25a8:	ce 01       	movw	r24, r28
    25aa:	f7 01       	movw	r30, r14
    25ac:	09 95       	icall
    25ae:	f8 2e       	mov	r15, r24
    25b0:	09 2f       	mov	r16, r25
    25b2:	8f b7       	in	r24, 0x3f	; 63
    25b4:	f8 94       	cli
    25b6:	19 82       	std	Y+1, r1	; 0x01
    25b8:	18 82       	st	Y, r1
    25ba:	8a 81       	ldd	r24, Y+2	; 0x02
    25bc:	9b 81       	ldd	r25, Y+3	; 0x03
    25be:	82 30       	cpi	r24, 0x02	; 2
    25c0:	91 05       	cpc	r25, r1
    25c2:	38 f0       	brcs	.+14     	; 0x25d2 <sync+0xc2>
    25c4:	1b 82       	std	Y+3, r1	; 0x03
    25c6:	1a 82       	std	Y+2, r1	; 0x02
    25c8:	fc 01       	movw	r30, r24
    25ca:	15 82       	std	Z+5, r1	; 0x05
    25cc:	14 82       	std	Z+4, r1	; 0x04
    25ce:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <dispatch>
    25d2:	11 23       	and	r17, r17
    25d4:	51 f0       	breq	.+20     	; 0x25ea <sync+0xda>
    25d6:	78 94       	sei
    25d8:	8f 2d       	mov	r24, r15
    25da:	90 2f       	mov	r25, r16
    25dc:	1d c0       	rjmp	.+58     	; 0x2618 <sync+0x108>
    25de:	8f ef       	ldi	r24, 0xFF	; 255
    25e0:	9f ef       	ldi	r25, 0xFF	; 255
    25e2:	1a c0       	rjmp	.+52     	; 0x2618 <sync+0x108>
    25e4:	8f ef       	ldi	r24, 0xFF	; 255
    25e6:	9f ef       	ldi	r25, 0xFF	; 255
    25e8:	17 c0       	rjmp	.+46     	; 0x2618 <sync+0x108>
    25ea:	8f 2d       	mov	r24, r15
    25ec:	90 2f       	mov	r25, r16
    25ee:	14 c0       	rjmp	.+40     	; 0x2618 <sync+0x108>
    25f0:	3b 83       	std	Y+3, r19	; 0x03
    25f2:	2a 83       	std	Y+2, r18	; 0x02
    25f4:	f9 01       	movw	r30, r18
    25f6:	d5 83       	std	Z+5, r29	; 0x05
    25f8:	c4 83       	std	Z+4, r28	; 0x04
    25fa:	cd 01       	movw	r24, r26
    25fc:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <dispatch>
    2600:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    2604:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    2608:	82 81       	ldd	r24, Z+2	; 0x02
    260a:	93 81       	ldd	r25, Z+3	; 0x03
    260c:	89 2b       	or	r24, r25
    260e:	09 f4       	brne	.+2      	; 0x2612 <sync+0x102>
    2610:	b9 cf       	rjmp	.-142    	; 0x2584 <sync+0x74>
    2612:	f9 83       	std	Y+1, r31	; 0x01
    2614:	e8 83       	st	Y, r30
    2616:	c2 cf       	rjmp	.-124    	; 0x259c <sync+0x8c>
    2618:	df 91       	pop	r29
    261a:	cf 91       	pop	r28
    261c:	1f 91       	pop	r17
    261e:	0f 91       	pop	r16
    2620:	ff 90       	pop	r15
    2622:	ef 90       	pop	r14
    2624:	df 90       	pop	r13
    2626:	cf 90       	pop	r12
    2628:	08 95       	ret

0000262a <run>:
    262a:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    262e:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    2632:	82 e1       	ldi	r24, 0x12	; 18
    2634:	91 e0       	ldi	r25, 0x01	; 1
    2636:	0e 94 59 10 	call	0x20b2	; 0x20b2 <dequeue>
    263a:	ec 01       	movw	r28, r24
    263c:	d8 01       	movw	r26, r16
    263e:	13 96       	adiw	r26, 0x03	; 3
    2640:	9c 93       	st	X, r25
    2642:	8e 93       	st	-X, r24
    2644:	12 97       	sbiw	r26, 0x02	; 2
    2646:	78 94       	sei
    2648:	4e 85       	ldd	r20, Y+14	; 0x0e
    264a:	5f 85       	ldd	r21, Y+15	; 0x0f
    264c:	6c 85       	ldd	r22, Y+12	; 0x0c
    264e:	7d 85       	ldd	r23, Y+13	; 0x0d
    2650:	8a 85       	ldd	r24, Y+10	; 0x0a
    2652:	9b 85       	ldd	r25, Y+11	; 0x0b
    2654:	0e 94 88 12 	call	0x2510	; 0x2510 <sync>
    2658:	8f b7       	in	r24, 0x3f	; 63
    265a:	f8 94       	cli
    265c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <msgPool>
    2660:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <msgPool+0x1>
    2664:	99 83       	std	Y+1, r25	; 0x01
    2666:	88 83       	st	Y, r24
    2668:	d0 93 09 01 	sts	0x0109, r29	; 0x800109 <msgPool+0x1>
    266c:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <msgPool>
    2670:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    2674:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    2678:	00 81       	ld	r16, Z
    267a:	11 81       	ldd	r17, Z+1	; 0x01
    267c:	e8 01       	movw	r28, r16
    267e:	2a 81       	ldd	r18, Y+2	; 0x02
    2680:	3b 81       	ldd	r19, Y+3	; 0x03
    2682:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <msgQ>
    2686:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <msgQ+0x1>
    268a:	10 97       	sbiw	r26, 0x00	; 0
    268c:	c1 f0       	breq	.+48     	; 0x26be <run+0x94>
    268e:	21 15       	cp	r18, r1
    2690:	31 05       	cpc	r19, r1
    2692:	59 f2       	breq	.-106    	; 0x262a <run>
    2694:	16 96       	adiw	r26, 0x06	; 6
    2696:	8d 91       	ld	r24, X+
    2698:	9d 91       	ld	r25, X+
    269a:	0d 90       	ld	r0, X+
    269c:	bc 91       	ld	r27, X
    269e:	a0 2d       	mov	r26, r0
    26a0:	e9 01       	movw	r28, r18
    26a2:	4e 81       	ldd	r20, Y+6	; 0x06
    26a4:	5f 81       	ldd	r21, Y+7	; 0x07
    26a6:	68 85       	ldd	r22, Y+8	; 0x08
    26a8:	79 85       	ldd	r23, Y+9	; 0x09
    26aa:	84 1b       	sub	r24, r20
    26ac:	95 0b       	sbc	r25, r21
    26ae:	a6 0b       	sbc	r26, r22
    26b0:	b7 0b       	sbc	r27, r23
    26b2:	18 16       	cp	r1, r24
    26b4:	19 06       	cpc	r1, r25
    26b6:	1a 06       	cpc	r1, r26
    26b8:	1b 06       	cpc	r1, r27
    26ba:	0c f0       	brlt	.+2      	; 0x26be <run+0x94>
    26bc:	b6 cf       	rjmp	.-148    	; 0x262a <run>
    26be:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <activeStack+0x1>
    26c2:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <activeStack>
    26c6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    26ca:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    26ce:	91 83       	std	Z+1, r25	; 0x01
    26d0:	80 83       	st	Z, r24
    26d2:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <threadPool+0x1>
    26d6:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <threadPool>
    26da:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    26de:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    26e2:	14 96       	adiw	r26, 0x04	; 4
    26e4:	ed 91       	ld	r30, X+
    26e6:	fc 91       	ld	r31, X
    26e8:	15 97       	sbiw	r26, 0x05	; 5
    26ea:	30 97       	sbiw	r30, 0x00	; 0
    26ec:	41 f0       	breq	.+16     	; 0x26fe <run+0xd4>
    26ee:	a0 81       	ld	r26, Z
    26f0:	b1 81       	ldd	r27, Z+1	; 0x01
    26f2:	14 96       	adiw	r26, 0x04	; 4
    26f4:	ed 91       	ld	r30, X+
    26f6:	fc 91       	ld	r31, X
    26f8:	15 97       	sbiw	r26, 0x05	; 5
    26fa:	30 97       	sbiw	r30, 0x00	; 0
    26fc:	c1 f7       	brne	.-16     	; 0x26ee <run+0xc4>
    26fe:	cd 01       	movw	r24, r26
    2700:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <dispatch>
    2704:	92 cf       	rjmp	.-220    	; 0x262a <run>

00002706 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2706:	8c 01       	movw	r16, r24
    2708:	7b 01       	movw	r14, r22
    270a:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    270c:	8f b7       	in	r24, 0x3f	; 63
    270e:	f8 94       	cli
    initialize();
    2710:	0e 94 75 07 	call	0xeea	; 0xeea <initialize>
    ENABLE(1);
    2714:	78 94       	sei
    if (m != NULL)
    2716:	e1 14       	cp	r14, r1
    2718:	f1 04       	cpc	r15, r1
    271a:	41 f0       	breq	.+16     	; 0x272c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	a9 01       	movw	r20, r18
    2722:	60 e0       	ldi	r22, 0x00	; 0
    2724:	70 e0       	ldi	r23, 0x00	; 0
    2726:	cb 01       	movw	r24, r22
    2728:	0e 94 77 11 	call	0x22ee	; 0x22ee <async>
    DISABLE(status);
    272c:	8f b7       	in	r24, 0x3f	; 63
    272e:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    2730:	0e 94 00 08 	call	0x1000	; 0x1000 <schedule>
    ENABLE(1);
    2734:	78 94       	sei
    while (1) {
        SLEEP();
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	83 bf       	out	0x33, r24	; 51
    273a:	88 95       	sleep
    273c:	fd cf       	rjmp	.-6      	; 0x2738 <tinytimber+0x32>

0000273e <__divmodhi4>:
    273e:	97 fb       	bst	r25, 7
    2740:	07 2e       	mov	r0, r23
    2742:	16 f4       	brtc	.+4      	; 0x2748 <__divmodhi4+0xa>
    2744:	00 94       	com	r0
    2746:	07 d0       	rcall	.+14     	; 0x2756 <__divmodhi4_neg1>
    2748:	77 fd       	sbrc	r23, 7
    274a:	09 d0       	rcall	.+18     	; 0x275e <__divmodhi4_neg2>
    274c:	0e 94 b9 13 	call	0x2772	; 0x2772 <__udivmodhi4>
    2750:	07 fc       	sbrc	r0, 7
    2752:	05 d0       	rcall	.+10     	; 0x275e <__divmodhi4_neg2>
    2754:	3e f4       	brtc	.+14     	; 0x2764 <__divmodhi4_exit>

00002756 <__divmodhi4_neg1>:
    2756:	90 95       	com	r25
    2758:	81 95       	neg	r24
    275a:	9f 4f       	sbci	r25, 0xFF	; 255
    275c:	08 95       	ret

0000275e <__divmodhi4_neg2>:
    275e:	70 95       	com	r23
    2760:	61 95       	neg	r22
    2762:	7f 4f       	sbci	r23, 0xFF	; 255

00002764 <__divmodhi4_exit>:
    2764:	08 95       	ret

00002766 <__tablejump2__>:
    2766:	ee 0f       	add	r30, r30
    2768:	ff 1f       	adc	r31, r31
    276a:	05 90       	lpm	r0, Z+
    276c:	f4 91       	lpm	r31, Z
    276e:	e0 2d       	mov	r30, r0
    2770:	09 94       	ijmp

00002772 <__udivmodhi4>:
    2772:	aa 1b       	sub	r26, r26
    2774:	bb 1b       	sub	r27, r27
    2776:	51 e1       	ldi	r21, 0x11	; 17
    2778:	07 c0       	rjmp	.+14     	; 0x2788 <__udivmodhi4_ep>

0000277a <__udivmodhi4_loop>:
    277a:	aa 1f       	adc	r26, r26
    277c:	bb 1f       	adc	r27, r27
    277e:	a6 17       	cp	r26, r22
    2780:	b7 07       	cpc	r27, r23
    2782:	10 f0       	brcs	.+4      	; 0x2788 <__udivmodhi4_ep>
    2784:	a6 1b       	sub	r26, r22
    2786:	b7 0b       	sbc	r27, r23

00002788 <__udivmodhi4_ep>:
    2788:	88 1f       	adc	r24, r24
    278a:	99 1f       	adc	r25, r25
    278c:	5a 95       	dec	r21
    278e:	a9 f7       	brne	.-22     	; 0x277a <__udivmodhi4_loop>
    2790:	80 95       	com	r24
    2792:	90 95       	com	r25
    2794:	bc 01       	movw	r22, r24
    2796:	cd 01       	movw	r24, r26
    2798:	08 95       	ret

0000279a <setjmp>:
    279a:	dc 01       	movw	r26, r24
    279c:	2d 92       	st	X+, r2
    279e:	3d 92       	st	X+, r3
    27a0:	4d 92       	st	X+, r4
    27a2:	5d 92       	st	X+, r5
    27a4:	6d 92       	st	X+, r6
    27a6:	7d 92       	st	X+, r7
    27a8:	8d 92       	st	X+, r8
    27aa:	9d 92       	st	X+, r9
    27ac:	ad 92       	st	X+, r10
    27ae:	bd 92       	st	X+, r11
    27b0:	cd 92       	st	X+, r12
    27b2:	dd 92       	st	X+, r13
    27b4:	ed 92       	st	X+, r14
    27b6:	fd 92       	st	X+, r15
    27b8:	0d 93       	st	X+, r16
    27ba:	1d 93       	st	X+, r17
    27bc:	cd 93       	st	X+, r28
    27be:	dd 93       	st	X+, r29
    27c0:	ff 91       	pop	r31
    27c2:	ef 91       	pop	r30
    27c4:	8d b7       	in	r24, 0x3d	; 61
    27c6:	8d 93       	st	X+, r24
    27c8:	8e b7       	in	r24, 0x3e	; 62
    27ca:	8d 93       	st	X+, r24
    27cc:	8f b7       	in	r24, 0x3f	; 63
    27ce:	8d 93       	st	X+, r24
    27d0:	ed 93       	st	X+, r30
    27d2:	fd 93       	st	X+, r31
    27d4:	88 27       	eor	r24, r24
    27d6:	99 27       	eor	r25, r25
    27d8:	09 94       	ijmp

000027da <longjmp>:
    27da:	dc 01       	movw	r26, r24
    27dc:	cb 01       	movw	r24, r22
    27de:	81 30       	cpi	r24, 0x01	; 1
    27e0:	91 05       	cpc	r25, r1
    27e2:	81 1d       	adc	r24, r1
    27e4:	2d 90       	ld	r2, X+
    27e6:	3d 90       	ld	r3, X+
    27e8:	4d 90       	ld	r4, X+
    27ea:	5d 90       	ld	r5, X+
    27ec:	6d 90       	ld	r6, X+
    27ee:	7d 90       	ld	r7, X+
    27f0:	8d 90       	ld	r8, X+
    27f2:	9d 90       	ld	r9, X+
    27f4:	ad 90       	ld	r10, X+
    27f6:	bd 90       	ld	r11, X+
    27f8:	cd 90       	ld	r12, X+
    27fa:	dd 90       	ld	r13, X+
    27fc:	ed 90       	ld	r14, X+
    27fe:	fd 90       	ld	r15, X+
    2800:	0d 91       	ld	r16, X+
    2802:	1d 91       	ld	r17, X+
    2804:	cd 91       	ld	r28, X+
    2806:	dd 91       	ld	r29, X+
    2808:	ed 91       	ld	r30, X+
    280a:	fd 91       	ld	r31, X+
    280c:	0d 90       	ld	r0, X+
    280e:	f8 94       	cli
    2810:	fe bf       	out	0x3e, r31	; 62
    2812:	0f be       	out	0x3f, r0	; 63
    2814:	ed bf       	out	0x3d, r30	; 61
    2816:	ed 91       	ld	r30, X+
    2818:	fd 91       	ld	r31, X+
    281a:	09 94       	ijmp

0000281c <_exit>:
    281c:	f8 94       	cli

0000281e <__stop_program>:
    281e:	ff cf       	rjmp	.-2      	; 0x281e <__stop_program>
